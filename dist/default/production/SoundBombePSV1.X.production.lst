

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Jun 24 11:45:14 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	swtext1,local,class=CONST,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0093                     	;# 
    87  0094                     	;# 
    88  0095                     	;# 
    89  0096                     	;# 
    90  0097                     	;# 
    91  0098                     	;# 
    92  0099                     	;# 
    93  009A                     	;# 
    94  009B                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  0111                     	;# 
   102  0112                     	;# 
   103  0113                     	;# 
   104  0114                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011A                     	;# 
   111  011B                     	;# 
   112  011D                     	;# 
   113  011E                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0191                     	;# 
   117  0191                     	;# 
   118  0192                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  0199                     	;# 
   126  019A                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019C                     	;# 
   132  019C                     	;# 
   133  019D                     	;# 
   134  019E                     	;# 
   135  019F                     	;# 
   136  020C                     	;# 
   137  020D                     	;# 
   138  0211                     	;# 
   139  0211                     	;# 
   140  0212                     	;# 
   141  0212                     	;# 
   142  0213                     	;# 
   143  0213                     	;# 
   144  0214                     	;# 
   145  0214                     	;# 
   146  0215                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0216                     	;# 
   150  0216                     	;# 
   151  0217                     	;# 
   152  0217                     	;# 
   153  0219                     	;# 
   154  021A                     	;# 
   155  021B                     	;# 
   156  021C                     	;# 
   157  021D                     	;# 
   158  021E                     	;# 
   159  021F                     	;# 
   160  0291                     	;# 
   161  0291                     	;# 
   162  0292                     	;# 
   163  0293                     	;# 
   164  0294                     	;# 
   165  0295                     	;# 
   166  0295                     	;# 
   167  0296                     	;# 
   168  0298                     	;# 
   169  0298                     	;# 
   170  0299                     	;# 
   171  029A                     	;# 
   172  029B                     	;# 
   173  029C                     	;# 
   174  029C                     	;# 
   175  029D                     	;# 
   176  029E                     	;# 
   177  029E                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  0318                     	;# 
   183  0318                     	;# 
   184  0319                     	;# 
   185  031A                     	;# 
   186  0394                     	;# 
   187  0395                     	;# 
   188  0396                     	;# 
   189  039A                     	;# 
   190  039C                     	;# 
   191  039D                     	;# 
   192  039E                     	;# 
   193  039F                     	;# 
   194  0415                     	;# 
   195  0416                     	;# 
   196  0417                     	;# 
   197  041C                     	;# 
   198  041D                     	;# 
   199  041E                     	;# 
   200  0FE4                     	;# 
   201  0FE5                     	;# 
   202  0FE6                     	;# 
   203  0FE7                     	;# 
   204  0FE8                     	;# 
   205  0FE9                     	;# 
   206  0FEA                     	;# 
   207  0FEB                     	;# 
   208  0FED                     	;# 
   209  0FEE                     	;# 
   210  0FEF                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  008C                     	;# 
   241  008D                     	;# 
   242  0091                     	;# 
   243  0092                     	;# 
   244  0093                     	;# 
   245  0094                     	;# 
   246  0095                     	;# 
   247  0096                     	;# 
   248  0097                     	;# 
   249  0098                     	;# 
   250  0099                     	;# 
   251  009A                     	;# 
   252  009B                     	;# 
   253  009B                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0113                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011A                     	;# 
   269  011B                     	;# 
   270  011D                     	;# 
   271  011E                     	;# 
   272  018C                     	;# 
   273  018D                     	;# 
   274  0191                     	;# 
   275  0191                     	;# 
   276  0192                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0194                     	;# 
   281  0195                     	;# 
   282  0196                     	;# 
   283  0199                     	;# 
   284  019A                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019C                     	;# 
   290  019C                     	;# 
   291  019D                     	;# 
   292  019E                     	;# 
   293  019F                     	;# 
   294  020C                     	;# 
   295  020D                     	;# 
   296  0211                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0212                     	;# 
   300  0213                     	;# 
   301  0213                     	;# 
   302  0214                     	;# 
   303  0214                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0216                     	;# 
   308  0216                     	;# 
   309  0217                     	;# 
   310  0217                     	;# 
   311  0219                     	;# 
   312  021A                     	;# 
   313  021B                     	;# 
   314  021C                     	;# 
   315  021D                     	;# 
   316  021E                     	;# 
   317  021F                     	;# 
   318  0291                     	;# 
   319  0291                     	;# 
   320  0292                     	;# 
   321  0293                     	;# 
   322  0294                     	;# 
   323  0295                     	;# 
   324  0295                     	;# 
   325  0296                     	;# 
   326  0298                     	;# 
   327  0298                     	;# 
   328  0299                     	;# 
   329  029A                     	;# 
   330  029B                     	;# 
   331  029C                     	;# 
   332  029C                     	;# 
   333  029D                     	;# 
   334  029E                     	;# 
   335  029E                     	;# 
   336  0311                     	;# 
   337  0311                     	;# 
   338  0312                     	;# 
   339  0313                     	;# 
   340  0318                     	;# 
   341  0318                     	;# 
   342  0319                     	;# 
   343  031A                     	;# 
   344  0394                     	;# 
   345  0395                     	;# 
   346  0396                     	;# 
   347  039A                     	;# 
   348  039C                     	;# 
   349  039D                     	;# 
   350  039E                     	;# 
   351  039F                     	;# 
   352  0415                     	;# 
   353  0416                     	;# 
   354  0417                     	;# 
   355  041C                     	;# 
   356  041D                     	;# 
   357  041E                     	;# 
   358  0FE4                     	;# 
   359  0FE5                     	;# 
   360  0FE6                     	;# 
   361  0FE7                     	;# 
   362  0FE8                     	;# 
   363  0FE9                     	;# 
   364  0FEA                     	;# 
   365  0FEB                     	;# 
   366  0FED                     	;# 
   367  0FEE                     	;# 
   368  0FEF                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0014                     	;# 
   387  0015                     	;# 
   388  0016                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001C                     	;# 
   396  001E                     	;# 
   397  001F                     	;# 
   398  008C                     	;# 
   399  008D                     	;# 
   400  0091                     	;# 
   401  0092                     	;# 
   402  0093                     	;# 
   403  0094                     	;# 
   404  0095                     	;# 
   405  0096                     	;# 
   406  0097                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009A                     	;# 
   410  009B                     	;# 
   411  009B                     	;# 
   412  009C                     	;# 
   413  009D                     	;# 
   414  009E                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  0111                     	;# 
   418  0112                     	;# 
   419  0113                     	;# 
   420  0114                     	;# 
   421  0115                     	;# 
   422  0116                     	;# 
   423  0117                     	;# 
   424  0118                     	;# 
   425  0119                     	;# 
   426  011A                     	;# 
   427  011B                     	;# 
   428  011D                     	;# 
   429  011E                     	;# 
   430  018C                     	;# 
   431  018D                     	;# 
   432  0191                     	;# 
   433  0191                     	;# 
   434  0192                     	;# 
   435  0193                     	;# 
   436  0193                     	;# 
   437  0193                     	;# 
   438  0194                     	;# 
   439  0195                     	;# 
   440  0196                     	;# 
   441  0199                     	;# 
   442  019A                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019B                     	;# 
   447  019C                     	;# 
   448  019C                     	;# 
   449  019D                     	;# 
   450  019E                     	;# 
   451  019F                     	;# 
   452  020C                     	;# 
   453  020D                     	;# 
   454  0211                     	;# 
   455  0211                     	;# 
   456  0212                     	;# 
   457  0212                     	;# 
   458  0213                     	;# 
   459  0213                     	;# 
   460  0214                     	;# 
   461  0214                     	;# 
   462  0215                     	;# 
   463  0215                     	;# 
   464  0215                     	;# 
   465  0216                     	;# 
   466  0216                     	;# 
   467  0217                     	;# 
   468  0217                     	;# 
   469  0219                     	;# 
   470  021A                     	;# 
   471  021B                     	;# 
   472  021C                     	;# 
   473  021D                     	;# 
   474  021E                     	;# 
   475  021F                     	;# 
   476  0291                     	;# 
   477  0291                     	;# 
   478  0292                     	;# 
   479  0293                     	;# 
   480  0294                     	;# 
   481  0295                     	;# 
   482  0295                     	;# 
   483  0296                     	;# 
   484  0298                     	;# 
   485  0298                     	;# 
   486  0299                     	;# 
   487  029A                     	;# 
   488  029B                     	;# 
   489  029C                     	;# 
   490  029C                     	;# 
   491  029D                     	;# 
   492  029E                     	;# 
   493  029E                     	;# 
   494  0311                     	;# 
   495  0311                     	;# 
   496  0312                     	;# 
   497  0313                     	;# 
   498  0318                     	;# 
   499  0318                     	;# 
   500  0319                     	;# 
   501  031A                     	;# 
   502  0394                     	;# 
   503  0395                     	;# 
   504  0396                     	;# 
   505  039A                     	;# 
   506  039C                     	;# 
   507  039D                     	;# 
   508  039E                     	;# 
   509  039F                     	;# 
   510  0415                     	;# 
   511  0416                     	;# 
   512  0417                     	;# 
   513  041C                     	;# 
   514  041D                     	;# 
   515  041E                     	;# 
   516  0FE4                     	;# 
   517  0FE5                     	;# 
   518  0FE6                     	;# 
   519  0FE7                     	;# 
   520  0FE8                     	;# 
   521  0FE9                     	;# 
   522  0FEA                     	;# 
   523  0FEB                     	;# 
   524  0FED                     	;# 
   525  0FEE                     	;# 
   526  0FEF                     	;# 
   527  0000                     	;# 
   528  0001                     	;# 
   529  0002                     	;# 
   530  0003                     	;# 
   531  0004                     	;# 
   532  0005                     	;# 
   533  0006                     	;# 
   534  0007                     	;# 
   535  0008                     	;# 
   536  0009                     	;# 
   537  000A                     	;# 
   538  000B                     	;# 
   539  000C                     	;# 
   540  000D                     	;# 
   541  0011                     	;# 
   542  0012                     	;# 
   543  0013                     	;# 
   544  0014                     	;# 
   545  0015                     	;# 
   546  0016                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001C                     	;# 
   554  001E                     	;# 
   555  001F                     	;# 
   556  008C                     	;# 
   557  008D                     	;# 
   558  0091                     	;# 
   559  0092                     	;# 
   560  0093                     	;# 
   561  0094                     	;# 
   562  0095                     	;# 
   563  0096                     	;# 
   564  0097                     	;# 
   565  0098                     	;# 
   566  0099                     	;# 
   567  009A                     	;# 
   568  009B                     	;# 
   569  009B                     	;# 
   570  009C                     	;# 
   571  009D                     	;# 
   572  009E                     	;# 
   573  010C                     	;# 
   574  010D                     	;# 
   575  0111                     	;# 
   576  0112                     	;# 
   577  0113                     	;# 
   578  0114                     	;# 
   579  0115                     	;# 
   580  0116                     	;# 
   581  0117                     	;# 
   582  0118                     	;# 
   583  0119                     	;# 
   584  011A                     	;# 
   585  011B                     	;# 
   586  011D                     	;# 
   587  011E                     	;# 
   588  018C                     	;# 
   589  018D                     	;# 
   590  0191                     	;# 
   591  0191                     	;# 
   592  0192                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0194                     	;# 
   597  0195                     	;# 
   598  0196                     	;# 
   599  0199                     	;# 
   600  019A                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019C                     	;# 
   606  019C                     	;# 
   607  019D                     	;# 
   608  019E                     	;# 
   609  019F                     	;# 
   610  020C                     	;# 
   611  020D                     	;# 
   612  0211                     	;# 
   613  0211                     	;# 
   614  0212                     	;# 
   615  0212                     	;# 
   616  0213                     	;# 
   617  0213                     	;# 
   618  0214                     	;# 
   619  0214                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0216                     	;# 
   624  0216                     	;# 
   625  0217                     	;# 
   626  0217                     	;# 
   627  0219                     	;# 
   628  021A                     	;# 
   629  021B                     	;# 
   630  021C                     	;# 
   631  021D                     	;# 
   632  021E                     	;# 
   633  021F                     	;# 
   634  0291                     	;# 
   635  0291                     	;# 
   636  0292                     	;# 
   637  0293                     	;# 
   638  0294                     	;# 
   639  0295                     	;# 
   640  0295                     	;# 
   641  0296                     	;# 
   642  0298                     	;# 
   643  0298                     	;# 
   644  0299                     	;# 
   645  029A                     	;# 
   646  029B                     	;# 
   647  029C                     	;# 
   648  029C                     	;# 
   649  029D                     	;# 
   650  029E                     	;# 
   651  029E                     	;# 
   652  0311                     	;# 
   653  0311                     	;# 
   654  0312                     	;# 
   655  0313                     	;# 
   656  0318                     	;# 
   657  0318                     	;# 
   658  0319                     	;# 
   659  031A                     	;# 
   660  0394                     	;# 
   661  0395                     	;# 
   662  0396                     	;# 
   663  039A                     	;# 
   664  039C                     	;# 
   665  039D                     	;# 
   666  039E                     	;# 
   667  039F                     	;# 
   668  0415                     	;# 
   669  0416                     	;# 
   670  0417                     	;# 
   671  041C                     	;# 
   672  041D                     	;# 
   673  041E                     	;# 
   674  0FE4                     	;# 
   675  0FE5                     	;# 
   676  0FE6                     	;# 
   677  0FE7                     	;# 
   678  0FE8                     	;# 
   679  0FE9                     	;# 
   680  0FEA                     	;# 
   681  0FEB                     	;# 
   682  0FED                     	;# 
   683  0FEE                     	;# 
   684  0FEF                     	;# 
   685  0000                     	;# 
   686  0001                     	;# 
   687  0002                     	;# 
   688  0003                     	;# 
   689  0004                     	;# 
   690  0005                     	;# 
   691  0006                     	;# 
   692  0007                     	;# 
   693  0008                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000D                     	;# 
   699  0011                     	;# 
   700  0012                     	;# 
   701  0013                     	;# 
   702  0014                     	;# 
   703  0015                     	;# 
   704  0016                     	;# 
   705  0016                     	;# 
   706  0017                     	;# 
   707  0018                     	;# 
   708  0019                     	;# 
   709  001A                     	;# 
   710  001B                     	;# 
   711  001C                     	;# 
   712  001E                     	;# 
   713  001F                     	;# 
   714  008C                     	;# 
   715  008D                     	;# 
   716  0091                     	;# 
   717  0092                     	;# 
   718  0093                     	;# 
   719  0094                     	;# 
   720  0095                     	;# 
   721  0096                     	;# 
   722  0097                     	;# 
   723  0098                     	;# 
   724  0099                     	;# 
   725  009A                     	;# 
   726  009B                     	;# 
   727  009B                     	;# 
   728  009C                     	;# 
   729  009D                     	;# 
   730  009E                     	;# 
   731  010C                     	;# 
   732  010D                     	;# 
   733  0111                     	;# 
   734  0112                     	;# 
   735  0113                     	;# 
   736  0114                     	;# 
   737  0115                     	;# 
   738  0116                     	;# 
   739  0117                     	;# 
   740  0118                     	;# 
   741  0119                     	;# 
   742  011A                     	;# 
   743  011B                     	;# 
   744  011D                     	;# 
   745  011E                     	;# 
   746  018C                     	;# 
   747  018D                     	;# 
   748  0191                     	;# 
   749  0191                     	;# 
   750  0192                     	;# 
   751  0193                     	;# 
   752  0193                     	;# 
   753  0193                     	;# 
   754  0194                     	;# 
   755  0195                     	;# 
   756  0196                     	;# 
   757  0199                     	;# 
   758  019A                     	;# 
   759  019B                     	;# 
   760  019B                     	;# 
   761  019B                     	;# 
   762  019B                     	;# 
   763  019C                     	;# 
   764  019C                     	;# 
   765  019D                     	;# 
   766  019E                     	;# 
   767  019F                     	;# 
   768  020C                     	;# 
   769  020D                     	;# 
   770  0211                     	;# 
   771  0211                     	;# 
   772  0212                     	;# 
   773  0212                     	;# 
   774  0213                     	;# 
   775  0213                     	;# 
   776  0214                     	;# 
   777  0214                     	;# 
   778  0215                     	;# 
   779  0215                     	;# 
   780  0215                     	;# 
   781  0216                     	;# 
   782  0216                     	;# 
   783  0217                     	;# 
   784  0217                     	;# 
   785  0219                     	;# 
   786  021A                     	;# 
   787  021B                     	;# 
   788  021C                     	;# 
   789  021D                     	;# 
   790  021E                     	;# 
   791  021F                     	;# 
   792  0291                     	;# 
   793  0291                     	;# 
   794  0292                     	;# 
   795  0293                     	;# 
   796  0294                     	;# 
   797  0295                     	;# 
   798  0295                     	;# 
   799  0296                     	;# 
   800  0298                     	;# 
   801  0298                     	;# 
   802  0299                     	;# 
   803  029A                     	;# 
   804  029B                     	;# 
   805  029C                     	;# 
   806  029C                     	;# 
   807  029D                     	;# 
   808  029E                     	;# 
   809  029E                     	;# 
   810  0311                     	;# 
   811  0311                     	;# 
   812  0312                     	;# 
   813  0313                     	;# 
   814  0318                     	;# 
   815  0318                     	;# 
   816  0319                     	;# 
   817  031A                     	;# 
   818  0394                     	;# 
   819  0395                     	;# 
   820  0396                     	;# 
   821  039A                     	;# 
   822  039C                     	;# 
   823  039D                     	;# 
   824  039E                     	;# 
   825  039F                     	;# 
   826  0415                     	;# 
   827  0416                     	;# 
   828  0417                     	;# 
   829  041C                     	;# 
   830  041D                     	;# 
   831  041E                     	;# 
   832  0FE4                     	;# 
   833  0FE5                     	;# 
   834  0FE6                     	;# 
   835  0FE7                     	;# 
   836  0FE8                     	;# 
   837  0FE9                     	;# 
   838  0FEA                     	;# 
   839  0FEB                     	;# 
   840  0FED                     	;# 
   841  0FEE                     	;# 
   842  0FEF                     	;# 
   843  0000                     	;# 
   844  0001                     	;# 
   845  0002                     	;# 
   846  0003                     	;# 
   847  0004                     	;# 
   848  0005                     	;# 
   849  0006                     	;# 
   850  0007                     	;# 
   851  0008                     	;# 
   852  0009                     	;# 
   853  000A                     	;# 
   854  000B                     	;# 
   855  000C                     	;# 
   856  000D                     	;# 
   857  0011                     	;# 
   858  0012                     	;# 
   859  0013                     	;# 
   860  0014                     	;# 
   861  0015                     	;# 
   862  0016                     	;# 
   863  0016                     	;# 
   864  0017                     	;# 
   865  0018                     	;# 
   866  0019                     	;# 
   867  001A                     	;# 
   868  001B                     	;# 
   869  001C                     	;# 
   870  001E                     	;# 
   871  001F                     	;# 
   872  008C                     	;# 
   873  008D                     	;# 
   874  0091                     	;# 
   875  0092                     	;# 
   876  0093                     	;# 
   877  0094                     	;# 
   878  0095                     	;# 
   879  0096                     	;# 
   880  0097                     	;# 
   881  0098                     	;# 
   882  0099                     	;# 
   883  009A                     	;# 
   884  009B                     	;# 
   885  009B                     	;# 
   886  009C                     	;# 
   887  009D                     	;# 
   888  009E                     	;# 
   889  010C                     	;# 
   890  010D                     	;# 
   891  0111                     	;# 
   892  0112                     	;# 
   893  0113                     	;# 
   894  0114                     	;# 
   895  0115                     	;# 
   896  0116                     	;# 
   897  0117                     	;# 
   898  0118                     	;# 
   899  0119                     	;# 
   900  011A                     	;# 
   901  011B                     	;# 
   902  011D                     	;# 
   903  011E                     	;# 
   904  018C                     	;# 
   905  018D                     	;# 
   906  0191                     	;# 
   907  0191                     	;# 
   908  0192                     	;# 
   909  0193                     	;# 
   910  0193                     	;# 
   911  0193                     	;# 
   912  0194                     	;# 
   913  0195                     	;# 
   914  0196                     	;# 
   915  0199                     	;# 
   916  019A                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019C                     	;# 
   922  019C                     	;# 
   923  019D                     	;# 
   924  019E                     	;# 
   925  019F                     	;# 
   926  020C                     	;# 
   927  020D                     	;# 
   928  0211                     	;# 
   929  0211                     	;# 
   930  0212                     	;# 
   931  0212                     	;# 
   932  0213                     	;# 
   933  0213                     	;# 
   934  0214                     	;# 
   935  0214                     	;# 
   936  0215                     	;# 
   937  0215                     	;# 
   938  0215                     	;# 
   939  0216                     	;# 
   940  0216                     	;# 
   941  0217                     	;# 
   942  0217                     	;# 
   943  0219                     	;# 
   944  021A                     	;# 
   945  021B                     	;# 
   946  021C                     	;# 
   947  021D                     	;# 
   948  021E                     	;# 
   949  021F                     	;# 
   950  0291                     	;# 
   951  0291                     	;# 
   952  0292                     	;# 
   953  0293                     	;# 
   954  0294                     	;# 
   955  0295                     	;# 
   956  0295                     	;# 
   957  0296                     	;# 
   958  0298                     	;# 
   959  0298                     	;# 
   960  0299                     	;# 
   961  029A                     	;# 
   962  029B                     	;# 
   963  029C                     	;# 
   964  029C                     	;# 
   965  029D                     	;# 
   966  029E                     	;# 
   967  029E                     	;# 
   968  0311                     	;# 
   969  0311                     	;# 
   970  0312                     	;# 
   971  0313                     	;# 
   972  0318                     	;# 
   973  0318                     	;# 
   974  0319                     	;# 
   975  031A                     	;# 
   976  0394                     	;# 
   977  0395                     	;# 
   978  0396                     	;# 
   979  039A                     	;# 
   980  039C                     	;# 
   981  039D                     	;# 
   982  039E                     	;# 
   983  039F                     	;# 
   984  0415                     	;# 
   985  0416                     	;# 
   986  0417                     	;# 
   987  041C                     	;# 
   988  041D                     	;# 
   989  041E                     	;# 
   990  0FE4                     	;# 
   991  0FE5                     	;# 
   992  0FE6                     	;# 
   993  0FE7                     	;# 
   994  0FE8                     	;# 
   995  0FE9                     	;# 
   996  0FEA                     	;# 
   997  0FEB                     	;# 
   998  0FED                     	;# 
   999  0FEE                     	;# 
  1000  0FEF                     	;# 
  1001  0000                     	;# 
  1002  0001                     	;# 
  1003  0002                     	;# 
  1004  0003                     	;# 
  1005  0004                     	;# 
  1006  0005                     	;# 
  1007  0006                     	;# 
  1008  0007                     	;# 
  1009  0008                     	;# 
  1010  0009                     	;# 
  1011  000A                     	;# 
  1012  000B                     	;# 
  1013  000C                     	;# 
  1014  000D                     	;# 
  1015  0011                     	;# 
  1016  0012                     	;# 
  1017  0013                     	;# 
  1018  0014                     	;# 
  1019  0015                     	;# 
  1020  0016                     	;# 
  1021  0016                     	;# 
  1022  0017                     	;# 
  1023  0018                     	;# 
  1024  0019                     	;# 
  1025  001A                     	;# 
  1026  001B                     	;# 
  1027  001C                     	;# 
  1028  001E                     	;# 
  1029  001F                     	;# 
  1030  008C                     	;# 
  1031  008D                     	;# 
  1032  0091                     	;# 
  1033  0092                     	;# 
  1034  0093                     	;# 
  1035  0094                     	;# 
  1036  0095                     	;# 
  1037  0096                     	;# 
  1038  0097                     	;# 
  1039  0098                     	;# 
  1040  0099                     	;# 
  1041  009A                     	;# 
  1042  009B                     	;# 
  1043  009B                     	;# 
  1044  009C                     	;# 
  1045  009D                     	;# 
  1046  009E                     	;# 
  1047  010C                     	;# 
  1048  010D                     	;# 
  1049  0111                     	;# 
  1050  0112                     	;# 
  1051  0113                     	;# 
  1052  0114                     	;# 
  1053  0115                     	;# 
  1054  0116                     	;# 
  1055  0117                     	;# 
  1056  0118                     	;# 
  1057  0119                     	;# 
  1058  011A                     	;# 
  1059  011B                     	;# 
  1060  011D                     	;# 
  1061  011E                     	;# 
  1062  018C                     	;# 
  1063  018D                     	;# 
  1064  0191                     	;# 
  1065  0191                     	;# 
  1066  0192                     	;# 
  1067  0193                     	;# 
  1068  0193                     	;# 
  1069  0193                     	;# 
  1070  0194                     	;# 
  1071  0195                     	;# 
  1072  0196                     	;# 
  1073  0199                     	;# 
  1074  019A                     	;# 
  1075  019B                     	;# 
  1076  019B                     	;# 
  1077  019B                     	;# 
  1078  019B                     	;# 
  1079  019C                     	;# 
  1080  019C                     	;# 
  1081  019D                     	;# 
  1082  019E                     	;# 
  1083  019F                     	;# 
  1084  020C                     	;# 
  1085  020D                     	;# 
  1086  0211                     	;# 
  1087  0211                     	;# 
  1088  0212                     	;# 
  1089  0212                     	;# 
  1090  0213                     	;# 
  1091  0213                     	;# 
  1092  0214                     	;# 
  1093  0214                     	;# 
  1094  0215                     	;# 
  1095  0215                     	;# 
  1096  0215                     	;# 
  1097  0216                     	;# 
  1098  0216                     	;# 
  1099  0217                     	;# 
  1100  0217                     	;# 
  1101  0219                     	;# 
  1102  021A                     	;# 
  1103  021B                     	;# 
  1104  021C                     	;# 
  1105  021D                     	;# 
  1106  021E                     	;# 
  1107  021F                     	;# 
  1108  0291                     	;# 
  1109  0291                     	;# 
  1110  0292                     	;# 
  1111  0293                     	;# 
  1112  0294                     	;# 
  1113  0295                     	;# 
  1114  0295                     	;# 
  1115  0296                     	;# 
  1116  0298                     	;# 
  1117  0298                     	;# 
  1118  0299                     	;# 
  1119  029A                     	;# 
  1120  029B                     	;# 
  1121  029C                     	;# 
  1122  029C                     	;# 
  1123  029D                     	;# 
  1124  029E                     	;# 
  1125  029E                     	;# 
  1126  0311                     	;# 
  1127  0311                     	;# 
  1128  0312                     	;# 
  1129  0313                     	;# 
  1130  0318                     	;# 
  1131  0318                     	;# 
  1132  0319                     	;# 
  1133  031A                     	;# 
  1134  0394                     	;# 
  1135  0395                     	;# 
  1136  0396                     	;# 
  1137  039A                     	;# 
  1138  039C                     	;# 
  1139  039D                     	;# 
  1140  039E                     	;# 
  1141  039F                     	;# 
  1142  0415                     	;# 
  1143  0416                     	;# 
  1144  0417                     	;# 
  1145  041C                     	;# 
  1146  041D                     	;# 
  1147  041E                     	;# 
  1148  0FE4                     	;# 
  1149  0FE5                     	;# 
  1150  0FE6                     	;# 
  1151  0FE7                     	;# 
  1152  0FE8                     	;# 
  1153  0FE9                     	;# 
  1154  0FEA                     	;# 
  1155  0FEB                     	;# 
  1156  0FED                     	;# 
  1157  0FEE                     	;# 
  1158  0FEF                     	;# 
  1159                           
  1160                           	psect	idataBANK1
  1161  0F8B                     __pidataBANK1:	
  1162                           
  1163                           ;initializer for _vBattery
  1164  0F8B  3400               	retlw	0
  1165  0F8C  3480               	retlw	128
  1166  0F8D  34BF               	retlw	191
  1167  000B                     _INTCONbits	set	11
  1168  0014                     _PIR4bits	set	20
  1169  0015                     _TMR0	set	21
  1170  0068                     _RB0	set	104
  1171  0069                     _RB1	set	105
  1172  006B                     _RB3	set	107
  1173  006C                     _RB4	set	108
  1174  009D                     _ADCON0	set	157
  1175  009D                     _ADCON0bits	set	157
  1176  009E                     _ADCON1	set	158
  1177  009C                     _ADRESH	set	156
  1178  009B                     _ADRESL	set	155
  1179  0095                     _OPTION_REG	set	149
  1180  0095                     _OPTION_REGbits	set	149
  1181  0099                     _OSCCON	set	153
  1182  009A                     _OSCSTAT	set	154
  1183  0098                     _OSCTUNE	set	152
  1184  0094                     _PIE4bits	set	148
  1185  008C                     _TRISA	set	140
  1186  008D                     _TRISB	set	141
  1187  011D                     _APFCON0	set	285
  1188  011E                     _APFCON1	set	286
  1189  010C                     _LATA	set	268
  1190  010D                     _LATB	set	269
  1191  0861                     _LATA1	set	2145
  1192  0862                     _LATA2	set	2146
  1193  0863                     _LATA3	set	2147
  1194  0866                     _LATA6	set	2150
  1195  0867                     _LATA7	set	2151
  1196  018C                     _ANSELA	set	396
  1197  018D                     _ANSELB	set	397
  1198  021A                     _SSP2ADD	set	538
  1199  0219                     _SSP2BUF	set	537
  1200  021D                     _SSP2CON1	set	541
  1201  021D                     _SSP2CON1bits	set	541
  1202  021E                     _SSP2CON2bits	set	542
  1203  021F                     _SSP2CON3	set	543
  1204  021C                     _SSP2STAT	set	540
  1205  020C                     _WPUA	set	524
  1206  020D                     _WPUB	set	525
  1207  1CB0                     _IOCBF0	set	7344
  1208  1CB1                     _IOCBF1	set	7345
  1209  1CB3                     _IOCBF3	set	7347
  1210  1CB4                     _IOCBF4	set	7348
  1211  1CA8                     _IOCBN0	set	7336
  1212  1CA9                     _IOCBN1	set	7337
  1213  1CAB                     _IOCBN3	set	7339
  1214  1CAC                     _IOCBN4	set	7340
  1215  1CA0                     _IOCBP0	set	7328
  1216  1CA1                     _IOCBP1	set	7329
  1217  1CA3                     _IOCBP3	set	7331
  1218  1CA4                     _IOCBP4	set	7332
  1219                           
  1220                           ; #config settings
  1221  0000                     
  1222                           	psect	cinit
  1223  0031                     start_initialization:	
  1224  0031                     __initialization:	
  1225                           
  1226                           ; Clear objects allocated to BANK0
  1227  0031  3067               	movlw	low __pbssBANK0
  1228  0032  0084               	movwf	4
  1229  0033  3000               	movlw	high __pbssBANK0
  1230  0034  0085               	movwf	5
  1231  0035  3009               	movlw	9
  1232  0036  318F  2799  3180   	fcall	clear_ram0
  1233                           
  1234                           ; Clear objects allocated to BANK1
  1235  0039  30A0               	movlw	low __pbssBANK1
  1236  003A  0084               	movwf	4
  1237  003B  3000               	movlw	high __pbssBANK1
  1238  003C  0085               	movwf	5
  1239  003D  301E               	movlw	30
  1240  003E  318F  2799  3180   	fcall	clear_ram0
  1241                           
  1242                           ; Initialize objects allocated to BANK1
  1243  0041  0021               	movlb	1	; select bank1
  1244  0042  318F  278B  3180   	fcall	__pidataBANK1	;fetch initializer
  1245  0045  00BE               	movwf	__pdataBANK1& (0+127)
  1246  0046  318F  278C  3180   	fcall	__pidataBANK1+1	;fetch initializer
  1247  0049  00BF               	movwf	(__pdataBANK1+1)& (0+127)
  1248  004A  318F  278D         	fcall	__pidataBANK1+2	;fetch initializer
  1249  004C  00C0               	movwf	(__pdataBANK1+2)& (0+127)
  1250  004D                     end_of_initialization:	
  1251                           ;End of C runtime variable initialization code
  1252                           
  1253  004D                     __end_of__initialization:	
  1254  004D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1255  004E  0020               	movlb	0
  1256  004F  3187  2FE2         	ljmp	_main	;jump to C main() function
  1257                           
  1258                           	psect	bssBANK0
  1259  0067                     __pbssBANK0:	
  1260  0067                     _i2c2_state:	
  1261  0067                     	ds	1
  1262  0068                     _p_i2c2_current:	
  1263  0068                     	ds	1
  1264  0069                     _p_i2c2_trb_current:	
  1265  0069                     	ds	1
  1266  006A                     _stCharge:	
  1267  006A                     	ds	1
  1268  006B                     _stFault:	
  1269  006B                     	ds	1
  1270  006C                     _stPower:	
  1271  006C                     	ds	1
  1272  006D                     _timer0ReloadVal:	
  1273  006D                     	ds	1
  1274  006E                     I2C2_ISR@i2c_address:	
  1275  006E                     	ds	2
  1276                           
  1277                           	psect	bssBANK1
  1278  00A0                     __pbssBANK1:	
  1279  00A0                     _i2c2_object:	
  1280  00A0                     	ds	5
  1281  00A5                     I2C2_ISR@i2c_10bit_address_restart:	
  1282  00A5                     	ds	1
  1283  00A6                     I2C2_ISR@i2c_bytes_left:	
  1284  00A6                     	ds	1
  1285  00A7                     I2C2_ISR@pi2c_buf_ptr:	
  1286  00A7                     	ds	1
  1287  00A8                     _fRun:	
  1288  00A8                     	ds	1
  1289  00A9                     _i2c2_trb_count:	
  1290  00A9                     	ds	1
  1291  00AA                     _stExPower:	
  1292  00AA                     	ds	1
  1293  00AB                     _stLowBattery:	
  1294  00AB                     	ds	1
  1295  00AC                     _stOff:	
  1296  00AC                     	ds	1
  1297  00AD                     _stOn:	
  1298  00AD                     	ds	1
  1299  00AE                     _stPowerSaveMode:	
  1300  00AE                     	ds	1
  1301  00AF                     _wnLowBattery0:	
  1302  00AF                     	ds	1
  1303  00B0                     I2C2_MasterRead@trBlock:	
  1304  00B0                     	ds	5
  1305  00B5                     I2C2_MasterWrite@trBlock:	
  1306  00B5                     	ds	5
  1307  00BA                     _i2c2_tr_queue:	
  1308  00BA                     	ds	4
  1309                           
  1310                           	psect	dataBANK1
  1311  00BE                     __pdataBANK1:	
  1312  00BE                     _vBattery:	
  1313  00BE                     	ds	3
  1314                           
  1315                           	psect	clrtext
  1316  0F99                     clear_ram0:	
  1317                           ;	Called with FSR0 containing the base address, and
  1318                           ;	WREG with the size to clear
  1319                           
  1320  0F99  0064               	clrwdt	;clear the watchdog before getting into this loop
  1321  0F9A                     clrloop0:	
  1322  0F9A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1323  0F9B  3101               	addfsr 0,1
  1324  0F9C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1325  0F9D  2F9A               	goto	clrloop0	;have we reached the end yet?
  1326  0F9E  3400               	retlw	0	;all done for this memory range, return
  1327                           
  1328                           	psect	cstackBANK1
  1329  00C1                     __pcstackBANK1:	
  1330  00C1                     ??_OSCILLATOR_Initialize:	
  1331  00C1                     ??_TMR0_Initialize:	
  1332                           ; 0 bytes @ 0x0
  1333                           
  1334  00C1                     ??_ADC_Initialize:	
  1335                           ; 0 bytes @ 0x0
  1336                           
  1337  00C1                     ??_I2C2_Initialize:	
  1338                           ; 0 bytes @ 0x0
  1339                           
  1340  00C1                     ??_PIN_MANAGER_Initialize:	
  1341                           ; 0 bytes @ 0x0
  1342                           
  1343                           
  1344                           ; 0 bytes @ 0x0
  1345  00C1                     	ds	1
  1346  00C2                     ??_SYSTEM_Initialize:	
  1347  00C2                     ??_main:	
  1348                           ; 0 bytes @ 0x1
  1349                           
  1350                           
  1351                           ; 0 bytes @ 0x1
  1352  00C2                     	ds	2
  1353                           
  1354                           	psect	cstackCOMMON
  1355  0070                     __pcstackCOMMON:	
  1356  0070                     ?_I_PWR_ON_intr:	
  1357  0070                     ?_I_EXPWR_intr:	
  1358                           ; 0 bytes @ 0x0
  1359                           
  1360  0070                     ??_I_EXPWR_intr:	
  1361                           ; 0 bytes @ 0x0
  1362                           
  1363  0070                     ?_I_CHRG_intr:	
  1364                           ; 0 bytes @ 0x0
  1365                           
  1366  0070                     ??_I_CHRG_intr:	
  1367                           ; 0 bytes @ 0x0
  1368                           
  1369  0070                     ?_I_FAULT_intr:	
  1370                           ; 0 bytes @ 0x0
  1371                           
  1372  0070                     ??_I_FAULT_intr:	
  1373                           ; 0 bytes @ 0x0
  1374                           
  1375  0070                     ?_OSCILLATOR_Initialize:	
  1376                           ; 0 bytes @ 0x0
  1377                           
  1378  0070                     ?_TMR0_Initialize:	
  1379                           ; 0 bytes @ 0x0
  1380                           
  1381  0070                     ?_ADC_Initialize:	
  1382                           ; 0 bytes @ 0x0
  1383                           
  1384  0070                     ?_I2C2_Initialize:	
  1385                           ; 0 bytes @ 0x0
  1386                           
  1387  0070                     ?_TMR0_CallBack:	
  1388                           ; 0 bytes @ 0x0
  1389                           
  1390  0070                     ?_I2C2_ISR:	
  1391                           ; 0 bytes @ 0x0
  1392                           
  1393  0070                     ?_I2C2_BusCollisionISR:	
  1394                           ; 0 bytes @ 0x0
  1395                           
  1396  0070                     ??_I2C2_BusCollisionISR:	
  1397                           ; 0 bytes @ 0x0
  1398                           
  1399  0070                     ?_I2C2_Stop:	
  1400                           ; 0 bytes @ 0x0
  1401                           
  1402  0070                     ??_I2C2_Stop:	
  1403                           ; 0 bytes @ 0x0
  1404                           
  1405  0070                     ?_I2C2_FunctionComplete:	
  1406                           ; 0 bytes @ 0x0
  1407                           
  1408  0070                     ??_I2C2_FunctionComplete:	
  1409                           ; 0 bytes @ 0x0
  1410                           
  1411  0070                     ?_PIN_MANAGER_Initialize:	
  1412                           ; 0 bytes @ 0x0
  1413                           
  1414  0070                     ?_PIN_MANAGER_IOC:	
  1415                           ; 0 bytes @ 0x0
  1416                           
  1417  0070                     ?_SYSTEM_Initialize:	
  1418                           ; 0 bytes @ 0x0
  1419                           
  1420  0070                     ?_TMR0_ISR:	
  1421                           ; 0 bytes @ 0x0
  1422                           
  1423  0070                     ?_INTERRUPT_InterruptManager:	
  1424                           ; 0 bytes @ 0x0
  1425                           
  1426  0070                     ?_main:	
  1427                           ; 0 bytes @ 0x0
  1428                           
  1429  0070                     ?_initState:	
  1430                           ; 0 bytes @ 0x0
  1431                           
  1432  0070                     ??_initState:	
  1433                           ; 0 bytes @ 0x0
  1434                           
  1435  0070                     ?_detectPowerOn:	
  1436                           ; 0 bytes @ 0x0
  1437                           
  1438  0070                     ??_detectPowerOn:	
  1439                           ; 0 bytes @ 0x0
  1440                           
  1441  0070                     ?_detectCharge:	
  1442                           ; 0 bytes @ 0x0
  1443                           
  1444  0070                     ??_detectCharge:	
  1445                           ; 0 bytes @ 0x0
  1446                           
  1447  0070                     ?_detectVBattery:	
  1448                           ; 0 bytes @ 0x0
  1449                           
  1450  0070                     ?_ledPower:	
  1451                           ; 0 bytes @ 0x0
  1452                           
  1453  0070                     ??_ledPower:	
  1454                           ; 0 bytes @ 0x0
  1455                           
  1456  0070                     ?_ledCharge:	
  1457                           ; 0 bytes @ 0x0
  1458                           
  1459  0070                     ?_psPower:	
  1460                           ; 0 bytes @ 0x0
  1461                           
  1462  0070                     ??_psPower:	
  1463                           ; 0 bytes @ 0x0
  1464                           
  1465  0070                     ?_ledMessage:	
  1466                           ; 0 bytes @ 0x0
  1467                           
  1468  0070                     ??_ledMessage:	
  1469                           ; 0 bytes @ 0x0
  1470                           
  1471  0070                     ?_setLedState:	
  1472                           ; 0 bytes @ 0x0
  1473                           
  1474  0070                     ?_putPwrMsg:	
  1475                           ; 0 bytes @ 0x0
  1476                           
  1477  0070                     ?___ftge:	
  1478                           ; 0 bytes @ 0x0
  1479                           
  1480  0070                     ?_ADC_GetConversion:	
  1481                           ; 1 bit 
  1482                           
  1483  0070                     ?___ftpack:	
  1484                           ; 2 bytes @ 0x0
  1485                           
  1486  0070                     ledPower@on:	
  1487                           ; 3 bytes @ 0x0
  1488                           
  1489  0070                     ledCharge@toggle:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     psPower@on:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ledMessage@on:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0070                     ___ftpack@arg:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0070                     ___ftge@ff1:	
  1502                           ; 3 bytes @ 0x0
  1503                           
  1504                           
  1505                           ; 3 bytes @ 0x0
  1506  0070                     	ds	1
  1507  0071                     ??_ledCharge:	
  1508  0071                     I2C2_Stop@completion_code:	
  1509                           ; 0 bytes @ 0x1
  1510                           
  1511  0071                     ledCharge@on:	
  1512                           ; 1 bytes @ 0x1
  1513                           
  1514                           
  1515                           ; 1 bytes @ 0x1
  1516  0071                     	ds	1
  1517  0072                     ??_I2C2_ISR:	
  1518  0072                     ??_ADC_GetConversion:	
  1519                           ; 0 bytes @ 0x2
  1520                           
  1521  0072                     ??_setLedState:	
  1522                           ; 0 bytes @ 0x2
  1523                           
  1524  0072                     detectPowerOn@POWER:	
  1525                           ; 0 bytes @ 0x2
  1526                           
  1527  0072                     detectCharge@CHRG:	
  1528                           ; 2 bytes @ 0x2
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x2
  1532  0072                     	ds	1
  1533  0073                     ADC_GetConversion@channel:	
  1534  0073                     _setLedState$633:	
  1535                           ; 1 bytes @ 0x3
  1536                           
  1537  0073                     ___ftpack@exp:	
  1538                           ; 1 bytes @ 0x3
  1539                           
  1540  0073                     ___ftge@ff2:	
  1541                           ; 1 bytes @ 0x3
  1542                           
  1543                           
  1544                           ; 3 bytes @ 0x3
  1545  0073                     	ds	1
  1546  0074                     _setLedState$635:	
  1547  0074                     ___ftpack@sign:	
  1548                           ; 1 bytes @ 0x4
  1549                           
  1550  0074                     detectPowerOn@EXPOWER:	
  1551                           ; 1 bytes @ 0x4
  1552                           
  1553  0074                     detectCharge@FALT:	
  1554                           ; 2 bytes @ 0x4
  1555                           
  1556                           
  1557                           ; 2 bytes @ 0x4
  1558  0074                     	ds	1
  1559  0075                     ??___ftpack:	
  1560  0075                     _setLedState$636:	
  1561                           ; 0 bytes @ 0x5
  1562                           
  1563                           
  1564                           ; 1 bytes @ 0x5
  1565  0075                     	ds	1
  1566  0076                     ??___ftge:	
  1567  0076                     _setLedState$638:	
  1568                           ; 0 bytes @ 0x6
  1569                           
  1570                           
  1571                           ; 1 bytes @ 0x6
  1572  0076                     	ds	2
  1573  0078                     ?___awtoft:	
  1574  0078                     ___awtoft@c:	
  1575                           ; 3 bytes @ 0x8
  1576                           
  1577                           
  1578                           ; 2 bytes @ 0x8
  1579  0078                     	ds	3
  1580  007B                     ??___awtoft:	
  1581                           
  1582                           ; 0 bytes @ 0xB
  1583  007B                     	ds	2
  1584  007D                     ___awtoft@sign:	
  1585                           
  1586                           ; 1 bytes @ 0xD
  1587  007D                     	ds	1
  1588  007E                     ??_I_PWR_ON_intr:	
  1589  007E                     ??_PIN_MANAGER_IOC:	
  1590                           ; 0 bytes @ 0xE
  1591                           
  1592  007E                     ??_TMR0_ISR:	
  1593                           ; 0 bytes @ 0xE
  1594                           
  1595  007E                     ??___ftneg:	
  1596                           ; 0 bytes @ 0xE
  1597                           
  1598                           
  1599                           	psect	cstackBANK0
  1600  0020                     __pcstackBANK0:	
  1601                           ; 0 bytes @ 0xE
  1602                           
  1603  0020                     ?___ftneg:	
  1604  0020                     ___ftneg@f1:	
  1605                           ; 3 bytes @ 0x0
  1606                           
  1607                           
  1608                           ; 3 bytes @ 0x0
  1609  0020                     	ds	3
  1610  0023                     ?___ftadd:	
  1611  0023                     ___ftadd@f1:	
  1612                           ; 3 bytes @ 0x3
  1613                           
  1614                           
  1615                           ; 3 bytes @ 0x3
  1616  0023                     	ds	3
  1617  0026                     ___ftadd@f2:	
  1618                           
  1619                           ; 3 bytes @ 0x6
  1620  0026                     	ds	3
  1621  0029                     ??___ftadd:	
  1622                           
  1623                           ; 0 bytes @ 0x9
  1624  0029                     	ds	4
  1625  002D                     ___ftadd@sign:	
  1626                           
  1627                           ; 1 bytes @ 0xD
  1628  002D                     	ds	1
  1629  002E                     ___ftadd@exp2:	
  1630                           
  1631                           ; 1 bytes @ 0xE
  1632  002E                     	ds	1
  1633  002F                     ___ftadd@exp1:	
  1634                           
  1635                           ; 1 bytes @ 0xF
  1636  002F                     	ds	1
  1637  0030                     ?___ftdiv:	
  1638  0030                     ___ftdiv@f2:	
  1639                           ; 3 bytes @ 0x10
  1640                           
  1641                           
  1642                           ; 3 bytes @ 0x10
  1643  0030                     	ds	3
  1644  0033                     ___ftdiv@f1:	
  1645                           
  1646                           ; 3 bytes @ 0x13
  1647  0033                     	ds	3
  1648  0036                     ??___ftdiv:	
  1649                           
  1650                           ; 0 bytes @ 0x16
  1651  0036                     	ds	4
  1652  003A                     ___ftdiv@cntr:	
  1653                           
  1654                           ; 1 bytes @ 0x1A
  1655  003A                     	ds	1
  1656  003B                     ___ftdiv@f3:	
  1657                           
  1658                           ; 3 bytes @ 0x1B
  1659  003B                     	ds	3
  1660  003E                     ___ftdiv@exp:	
  1661                           
  1662                           ; 1 bytes @ 0x1E
  1663  003E                     	ds	1
  1664  003F                     ___ftdiv@sign:	
  1665                           
  1666                           ; 1 bytes @ 0x1F
  1667  003F                     	ds	1
  1668  0040                     ??_detectVBattery:	
  1669  0040                     ?___ftmul:	
  1670                           ; 0 bytes @ 0x20
  1671                           
  1672  0040                     ___ftmul@f1:	
  1673                           ; 3 bytes @ 0x20
  1674                           
  1675                           
  1676                           ; 3 bytes @ 0x20
  1677  0040                     	ds	2
  1678  0042                     _detectVBattery$1122:	
  1679                           
  1680                           ; 3 bytes @ 0x22
  1681  0042                     	ds	1
  1682  0043                     ___ftmul@f2:	
  1683                           
  1684                           ; 3 bytes @ 0x23
  1685  0043                     	ds	2
  1686  0045                     detectVBattery@adcval:	
  1687                           
  1688                           ; 2 bytes @ 0x25
  1689  0045                     	ds	1
  1690  0046                     ??___ftmul:	
  1691                           
  1692                           ; 0 bytes @ 0x26
  1693  0046                     	ds	1
  1694  0047                     ??_TMR0_CallBack:	
  1695                           
  1696                           ; 0 bytes @ 0x27
  1697  0047                     	ds	1
  1698  0048                     _TMR0_CallBack$646:	
  1699                           
  1700                           ; 1 bytes @ 0x28
  1701  0048                     	ds	2
  1702  004A                     ___ftmul@exp:	
  1703                           
  1704                           ; 1 bytes @ 0x2A
  1705  004A                     	ds	1
  1706  004B                     ___ftmul@f3_as_product:	
  1707                           
  1708                           ; 3 bytes @ 0x2B
  1709  004B                     	ds	3
  1710  004E                     ___ftmul@cntr:	
  1711                           
  1712                           ; 1 bytes @ 0x2E
  1713  004E                     	ds	1
  1714  004F                     ___ftmul@sign:	
  1715                           
  1716                           ; 1 bytes @ 0x2F
  1717  004F                     	ds	1
  1718  0050                     ?___fttol:	
  1719  0050                     ___fttol@f1:	
  1720                           ; 4 bytes @ 0x30
  1721                           
  1722                           
  1723                           ; 3 bytes @ 0x30
  1724  0050                     	ds	4
  1725  0054                     ??___fttol:	
  1726                           
  1727                           ; 0 bytes @ 0x34
  1728  0054                     	ds	4
  1729  0058                     ___fttol@sign1:	
  1730                           
  1731                           ; 1 bytes @ 0x38
  1732  0058                     	ds	1
  1733  0059                     ___fttol@lval:	
  1734                           
  1735                           ; 4 bytes @ 0x39
  1736  0059                     	ds	4
  1737  005D                     ___fttol@exp1:	
  1738                           
  1739                           ; 1 bytes @ 0x3D
  1740  005D                     	ds	1
  1741  005E                     ??_putPwrMsg:	
  1742                           
  1743                           ; 0 bytes @ 0x3E
  1744  005E                     	ds	2
  1745  0060                     putPwrMsg@pardeci:	
  1746                           
  1747                           ; 2 bytes @ 0x40
  1748  0060                     	ds	2
  1749  0062                     putPwrMsg@i:	
  1750                           
  1751                           ; 2 bytes @ 0x42
  1752  0062                     	ds	2
  1753  0064                     putPwrMsg@lim:	
  1754                           
  1755                           ; 2 bytes @ 0x44
  1756  0064                     	ds	2
  1757  0066                     ??_INTERRUPT_InterruptManager:	
  1758                           
  1759                           ; 0 bytes @ 0x46
  1760  0066                     	ds	1
  1761                           
  1762                           	psect	maintext
  1763  07E2                     __pmaintext:	
  1764 ;;
  1765 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1766 ;;
  1767 ;; *************** function _main *****************
  1768 ;; Defined at:
  1769 ;;		line 66 in file "main.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;		None               void
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, pclath, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : B1F/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1783 ;;      Params:         0       0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0
  1785 ;;      Temps:          0       0       2       0       0       0
  1786 ;;      Totals:         0       0       2       0       0       0
  1787 ;;Total ram usage:        2 bytes
  1788 ;; Hardware stack levels required when called:    9
  1789 ;; This function calls:
  1790 ;;		_SYSTEM_Initialize
  1791 ;; This function is called by:
  1792 ;;		Startup code after reset
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _main
  1798  07E2                     _main:	
  1799                           
  1800                           ;main.c: 68: SYSTEM_Initialize();
  1801                           
  1802                           ;incstack = 0
  1803                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1804  07E2  318F  27E0  3187   	fcall	_SYSTEM_Initialize
  1805                           
  1806                           ;main.c: 74: (INTCONbits.GIE = 1);
  1807  07E5  178B               	bsf	11,7	;volatile
  1808                           
  1809                           ;main.c: 77: (INTCONbits.PEIE = 1);
  1810  07E6  170B               	bsf	11,6	;volatile
  1811  07E7                     l2605:	
  1812                           ;main.c: 85: while (1) {
  1813                           
  1814                           
  1815                           ;main.c: 87: if (1) {
  1816  07E7  30A3               	movlw	163
  1817  07E8  0021               	movlb	1	; select bank1
  1818  07E9  00C3               	movwf	(??_main^(0+128)+1)
  1819  07EA  3055               	movlw	85
  1820  07EB  00C2               	movwf	??_main^(0+128)
  1821  07EC                     u2927:	
  1822  07EC  0BC2               	decfsz	??_main^(0+128),f
  1823  07ED  2FEC               	goto	u2927
  1824  07EE  0BC3               	decfsz	(??_main^(0+128)+1),f
  1825  07EF  2FEC               	goto	u2927
  1826  07F0  0063               	sleep	;# 
  1827                           
  1828                           ;main.c: 89: __nop();
  1829  07F1  0000               	nop
  1830  07F2  2FE7               	goto	l2605
  1831  07F3                     __end_of_main:	
  1832                           
  1833                           	psect	text1
  1834  0FE0                     __ptext1:	
  1835 ;; *************** function _SYSTEM_Initialize *****************
  1836 ;; Defined at:
  1837 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;		None               void
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0, pclath, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1851 ;;      Params:         0       0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0
  1854 ;;      Totals:         0       0       0       0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    8
  1858 ;; This function calls:
  1859 ;;		_ADC_Initialize
  1860 ;;		_I2C2_Initialize
  1861 ;;		_OSCILLATOR_Initialize
  1862 ;;		_PIN_MANAGER_Initialize
  1863 ;;		_TMR0_Initialize
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _SYSTEM_Initialize
  1871  0FE0                     _SYSTEM_Initialize:	
  1872                           
  1873                           ;mcc.c: 71: OSCILLATOR_Initialize();
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1877  0FE0  318F  2793  318F   	fcall	_OSCILLATOR_Initialize
  1878                           
  1879                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  1880  0FE3  3187  2707  318F   	fcall	_PIN_MANAGER_Initialize
  1881                           
  1882                           ;mcc.c: 73: TMR0_Initialize();
  1883  0FE6  318F  27D5  318F   	fcall	_TMR0_Initialize
  1884                           
  1885                           ;mcc.c: 74: ADC_Initialize();
  1886  0FE9  318F  27A6  318F   	fcall	_ADC_Initialize
  1887                           
  1888                           ;mcc.c: 75: I2C2_Initialize();
  1889  0FEC  3187  2771         	fcall	_I2C2_Initialize
  1890  0FEE  0008               	return
  1891  0FEF                     __end_of_SYSTEM_Initialize:	
  1892                           
  1893                           	psect	text2
  1894  0FD5                     __ptext2:	
  1895 ;; *************** function _TMR0_Initialize *****************
  1896 ;; Defined at:
  1897 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;		None               void
  1904 ;; Registers used:
  1905 ;;		wreg, status,2
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1911 ;;      Params:         0       0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0
  1914 ;;      Totals:         0       0       0       0       0       0
  1915 ;;Total ram usage:        0 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    7
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_SYSTEM_Initialize
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function _TMR0_Initialize
  1927  0FD5                     _TMR0_Initialize:	
  1928                           
  1929                           ;tmr0.c: 68: OPTION_REG = (OPTION_REG & 0xC0) | 0xD5 & 0x3F;
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  1933  0FD5  0021               	movlb	1	; select bank1
  1934  0FD6  0815               	movf	21,w	;volatile
  1935  0FD7  39C0               	andlw	192
  1936  0FD8  3815               	iorlw	21
  1937  0FD9  0095               	movwf	21	;volatile
  1938                           
  1939                           ;tmr0.c: 71: TMR0 = 0x00;
  1940  0FDA  0020               	movlb	0	; select bank0
  1941  0FDB  0195               	clrf	21	;volatile
  1942                           
  1943                           ;tmr0.c: 74: timer0ReloadVal = 0;
  1944  0FDC  01ED               	clrf	_timer0ReloadVal	;volatile
  1945                           
  1946                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  1947  0FDD  110B               	bcf	11,2	;volatile
  1948                           
  1949                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  1950  0FDE  168B               	bsf	11,5	;volatile
  1951  0FDF  0008               	return
  1952  0FE0                     __end_of_TMR0_Initialize:	
  1953                           
  1954                           	psect	text3
  1955  0707                     __ptext3:	
  1956 ;; *************** function _PIN_MANAGER_Initialize *****************
  1957 ;; Defined at:
  1958 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;		None               void
  1965 ;; Registers used:
  1966 ;;		wreg, status,2
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1972 ;;      Params:         0       0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    7
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_SYSTEM_Initialize
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _PIN_MANAGER_Initialize
  1988  0707                     _PIN_MANAGER_Initialize:	
  1989                           
  1990                           ;pin_manager.c: 51: LATA = 0x00;
  1991                           
  1992                           ;incstack = 0
  1993                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1994  0707  0022               	movlb	2	; select bank2
  1995  0708  018C               	clrf	12	;volatile
  1996                           
  1997                           ;pin_manager.c: 52: TRISA = 0x31;
  1998  0709  3031               	movlw	49
  1999  070A  0021               	movlb	1	; select bank1
  2000  070B  008C               	movwf	12	;volatile
  2001                           
  2002                           ;pin_manager.c: 53: ANSELA = 0x10;
  2003  070C  3010               	movlw	16
  2004  070D  0023               	movlb	3	; select bank3
  2005  070E  008C               	movwf	12	;volatile
  2006                           
  2007                           ;pin_manager.c: 54: WPUA = 0x00;
  2008  070F  0024               	movlb	4	; select bank4
  2009  0710  018C               	clrf	12	;volatile
  2010                           
  2011                           ;pin_manager.c: 56: LATB = 0x24;
  2012  0711  3024               	movlw	36
  2013  0712  0022               	movlb	2	; select bank2
  2014  0713  008D               	movwf	13	;volatile
  2015                           
  2016                           ;pin_manager.c: 57: TRISB = 0xFF;
  2017  0714  30FF               	movlw	255
  2018  0715  0021               	movlb	1	; select bank1
  2019  0716  008D               	movwf	13	;volatile
  2020                           
  2021                           ;pin_manager.c: 58: ANSELB = 0xC0;
  2022  0717  30C0               	movlw	192
  2023  0718  0023               	movlb	3	; select bank3
  2024  0719  008D               	movwf	13	;volatile
  2025                           
  2026                           ;pin_manager.c: 59: WPUB = 0x1B;
  2027  071A  301B               	movlw	27
  2028  071B  0024               	movlb	4	; select bank4
  2029  071C  008D               	movwf	13	;volatile
  2030                           
  2031                           ;pin_manager.c: 61: OPTION_REGbits.nWPUEN = 0x00;
  2032  071D  0021               	movlb	1	; select bank1
  2033  071E  1395               	bcf	21,7	;volatile
  2034                           
  2035                           ;pin_manager.c: 63: APFCON0 = 0x00;
  2036  071F  0022               	movlb	2	; select bank2
  2037  0720  019D               	clrf	29	;volatile
  2038                           
  2039                           ;pin_manager.c: 65: APFCON1 = 0x00;
  2040  0721  019E               	clrf	30	;volatile
  2041                           
  2042                           ;pin_manager.c: 68: IOCBN0 = 1;
  2043  0722  0027               	movlb	7	; select bank7
  2044  0723  1415               	bsf	21,0	;volatile
  2045                           
  2046                           ;pin_manager.c: 69: IOCBP0 = 1;
  2047  0724  1414               	bsf	20,0	;volatile
  2048                           
  2049                           ;pin_manager.c: 70: IOCBN1 = 1;
  2050  0725  1495               	bsf	21,1	;volatile
  2051                           
  2052                           ;pin_manager.c: 71: IOCBP1 = 1;
  2053  0726  1494               	bsf	20,1	;volatile
  2054                           
  2055                           ;pin_manager.c: 72: IOCBN3 = 1;
  2056  0727  1595               	bsf	21,3	;volatile
  2057                           
  2058                           ;pin_manager.c: 73: IOCBP3 = 1;
  2059  0728  1594               	bsf	20,3	;volatile
  2060                           
  2061                           ;pin_manager.c: 74: IOCBN4 = 1;
  2062  0729  1615               	bsf	21,4	;volatile
  2063                           
  2064                           ;pin_manager.c: 75: IOCBP4 = 1;
  2065  072A  1614               	bsf	20,4	;volatile
  2066                           
  2067                           ;pin_manager.c: 78: INTCONbits.IOCIE = 1;
  2068  072B  158B               	bsf	11,3	;volatile
  2069  072C  0008               	return
  2070  072D                     __end_of_PIN_MANAGER_Initialize:	
  2071                           
  2072                           	psect	text4
  2073  0F93                     __ptext4:	
  2074 ;; *************** function _OSCILLATOR_Initialize *****************
  2075 ;; Defined at:
  2076 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;		None               void
  2083 ;; Registers used:
  2084 ;;		wreg, status,2
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2090 ;;      Params:         0       0       0       0       0       0
  2091 ;;      Locals:         0       0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0
  2093 ;;      Totals:         0       0       0       0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    7
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_SYSTEM_Initialize
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           
  2105                           ;psect for function _OSCILLATOR_Initialize
  2106  0F93                     _OSCILLATOR_Initialize:	
  2107                           
  2108                           ;mcc.c: 80: OSCCON = 0x38;
  2109                           
  2110                           ;incstack = 0
  2111                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2112  0F93  3038               	movlw	56
  2113  0F94  0021               	movlb	1	; select bank1
  2114  0F95  0099               	movwf	25	;volatile
  2115                           
  2116                           ;mcc.c: 82: OSCSTAT = 0x00;
  2117  0F96  019A               	clrf	26	;volatile
  2118                           
  2119                           ;mcc.c: 84: OSCTUNE = 0x00;
  2120  0F97  0198               	clrf	24	;volatile
  2121  0F98  0008               	return
  2122  0F99                     __end_of_OSCILLATOR_Initialize:	
  2123                           
  2124                           	psect	text5
  2125  0771                     __ptext5:	
  2126 ;; *************** function _I2C2_Initialize *****************
  2127 ;; Defined at:
  2128 ;;		line 194 in file "mcc_generated_files/i2c2.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;		None               void
  2135 ;; Registers used:
  2136 ;;		wreg, status,2
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2142 ;;      Params:         0       0       0       0       0       0
  2143 ;;      Locals:         0       0       0       0       0       0
  2144 ;;      Temps:          0       0       1       0       0       0
  2145 ;;      Totals:         0       0       1       0       0       0
  2146 ;;Total ram usage:        1 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    7
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_SYSTEM_Initialize
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _I2C2_Initialize
  2158  0771                     _I2C2_Initialize:	
  2159                           
  2160                           ;i2c2.c: 195: i2c2_object.pTrHead = i2c2_tr_queue;
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  2164  0771  30BA               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  2165  0772  0021               	movlb	1	; select bank1
  2166  0773  00C1               	movwf	??_I2C2_Initialize^(0+128)
  2167  0774  0841               	movf	??_I2C2_Initialize^(0+128),w
  2168  0775  00A1               	movwf	(low ((_i2c2_object| 0+1)))^(0+128)
  2169                           
  2170                           ;i2c2.c: 196: i2c2_object.pTrTail = i2c2_tr_queue;
  2171  0776  30BA               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  2172  0777  00C1               	movwf	??_I2C2_Initialize^(0+128)
  2173  0778  0841               	movf	??_I2C2_Initialize^(0+128),w
  2174  0779  00A0               	movwf	_i2c2_object^(0+128)
  2175                           
  2176                           ;i2c2.c: 197: i2c2_object.trStatus.s.empty = 1;
  2177  077A  14A2               	bsf	(_i2c2_object^(0+128)+2),1
  2178                           
  2179                           ;i2c2.c: 198: i2c2_object.trStatus.s.full = 0;
  2180  077B  1022               	bcf	(_i2c2_object^(0+128)+2),0
  2181                           
  2182                           ;i2c2.c: 200: i2c2_object.i2cErrors = 0;
  2183  077C  01A4               	clrf	(_i2c2_object^(0+128)+4)
  2184                           
  2185                           ;i2c2.c: 203: SSP2STAT = 0x00;
  2186  077D  0024               	movlb	4	; select bank4
  2187  077E  019C               	clrf	28	;volatile
  2188                           
  2189                           ;i2c2.c: 205: SSP2CON1 = 0x28;
  2190  077F  3028               	movlw	40
  2191  0780  009D               	movwf	29	;volatile
  2192                           
  2193                           ;i2c2.c: 207: SSP2CON3 = 0x00;
  2194  0781  019F               	clrf	31	;volatile
  2195                           
  2196                           ;i2c2.c: 209: SSP2ADD = 0x03;
  2197  0782  3003               	movlw	3
  2198  0783  009A               	movwf	26	;volatile
  2199                           
  2200                           ;i2c2.c: 213: PIR4bits.SSP2IF = 0;
  2201  0784  0020               	movlb	0	; select bank0
  2202  0785  1014               	bcf	20,0	;volatile
  2203                           
  2204                           ;i2c2.c: 215: PIE4bits.SSP2IE = 1;
  2205  0786  0021               	movlb	1	; select bank1
  2206  0787  1414               	bsf	20,0	;volatile
  2207  0788  0008               	return
  2208  0789                     __end_of_I2C2_Initialize:	
  2209                           
  2210                           	psect	text6
  2211  0FA6                     __ptext6:	
  2212 ;; *************** function _ADC_Initialize *****************
  2213 ;; Defined at:
  2214 ;;		line 65 in file "mcc_generated_files/adc.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;		None               void
  2221 ;; Registers used:
  2222 ;;		wreg, status,2
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2228 ;;      Params:         0       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0
  2231 ;;      Totals:         0       0       0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    7
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_SYSTEM_Initialize
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _ADC_Initialize
  2244  0FA6                     _ADC_Initialize:	
  2245                           
  2246                           ;adc.c: 69: ADCON0 = 0x01;
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2250  0FA6  3001               	movlw	1
  2251  0FA7  0021               	movlb	1	; select bank1
  2252  0FA8  009D               	movwf	29	;volatile
  2253                           
  2254                           ;adc.c: 72: ADCON1 = 0x80;
  2255  0FA9  3080               	movlw	128
  2256  0FAA  009E               	movwf	30	;volatile
  2257                           
  2258                           ;adc.c: 75: ADRESL = 0x00;
  2259  0FAB  019B               	clrf	27	;volatile
  2260                           
  2261                           ;adc.c: 78: ADRESH = 0x00;
  2262  0FAC  019C               	clrf	28	;volatile
  2263  0FAD  0008               	return
  2264  0FAE                     __end_of_ADC_Initialize:	
  2265                           
  2266                           	psect	intentry
  2267  0004                     __pintentry:	
  2268 ;; *************** function _INTERRUPT_InterruptManager *****************
  2269 ;; Defined at:
  2270 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;		None               void
  2277 ;; Registers used:
  2278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2284 ;;      Params:         0       0       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0       0
  2286 ;;      Temps:          0       1       0       0       0       0
  2287 ;;      Totals:         0       1       0       0       0       0
  2288 ;;Total ram usage:        1 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    6
  2291 ;; This function calls:
  2292 ;;		_I2C2_BusCollisionISR
  2293 ;;		_I2C2_ISR
  2294 ;;		_PIN_MANAGER_IOC
  2295 ;;		_TMR0_ISR
  2296 ;; This function is called by:
  2297 ;;		Interrupt level 1
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301  0004                     _INTERRUPT_InterruptManager:	
  2302                           
  2303                           ;incstack = 0
  2304                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2305  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2306  0005  3180               	pagesel	$
  2307  0006  0020               	movlb	0	; select bank0
  2308  0007  087F               	movf	127,w
  2309  0008  00E6               	movwf	??_INTERRUPT_InterruptManager
  2310                           
  2311                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
  2312  0009  1A8B               	btfsc	11,5	;volatile
  2313  000A  1D0B               	btfss	11,2	;volatile
  2314  000B  2810               	goto	i1l141
  2315                           
  2316                           ;interrupt_manager.c: 55: TMR0_ISR();
  2317  000C  318F  279F  3180   	fcall	_TMR0_ISR
  2318                           
  2319                           ;interrupt_manager.c: 56: } else if (INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1) {
  2320  000F  282A               	goto	i1l149
  2321  0010                     i1l141:	
  2322  0010  198B               	btfsc	11,3	;volatile
  2323  0011  1C0B               	btfss	11,0	;volatile
  2324  0012  2818               	goto	i1l143
  2325                           
  2326                           ;interrupt_manager.c: 57: PIN_MANAGER_IOC();
  2327  0013  3186  26DA  3180   	fcall	_PIN_MANAGER_IOC
  2328                           
  2329                           ;interrupt_manager.c: 60: INTCONbits.IOCIF = 0;
  2330  0016  100B               	bcf	11,0	;volatile
  2331                           
  2332                           ;interrupt_manager.c: 61: } else if (PIE4bits.SSP2IE == 1 && PIR4bits.SSP2IF == 1) {
  2333  0017  282A               	goto	i1l149
  2334  0018                     i1l143:	
  2335  0018  0021               	movlb	1	; select bank1
  2336  0019  1C14               	btfss	20,0	;volatile
  2337  001A  2822               	goto	i1l145
  2338  001B  0020               	movlb	0	; select bank0
  2339  001C  1C14               	btfss	20,0	;volatile
  2340  001D  2822               	goto	i1l145
  2341                           
  2342                           ;interrupt_manager.c: 62: I2C2_ISR();
  2343  001E  3180  2051  3180   	fcall	_I2C2_ISR
  2344                           
  2345                           ;interrupt_manager.c: 63: } else if (PIE4bits.BCL2IE == 1 && PIR4bits.BCL2IF == 1) {
  2346  0021  282A               	goto	i1l149
  2347  0022                     i1l145:	
  2348  0022  0021               	movlb	1	; select bank1
  2349  0023  1C94               	btfss	20,1	;volatile
  2350  0024  282A               	goto	i1l149
  2351  0025  0020               	movlb	0	; select bank0
  2352  0026  1C94               	btfss	20,1	;volatile
  2353  0027  282A               	goto	i1l149
  2354                           
  2355                           ;interrupt_manager.c: 64: I2C2_BusCollisionISR();
  2356  0028  3187  27FF         	fcall	_I2C2_BusCollisionISR
  2357  002A                     i1l149:	
  2358                           ;interrupt_manager.c: 65: } else {
  2359                           
  2360  002A  0020               	movlb	0	; select bank0
  2361  002B  0866               	movf	??_INTERRUPT_InterruptManager,w
  2362  002C  00FF               	movwf	127
  2363  002D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2364  002E  0009               	retfie
  2365  002F                     __end_of_INTERRUPT_InterruptManager:	
  2366                           
  2367                           	psect	text8
  2368  0F9F                     __ptext8:	
  2369 ;; *************** function _TMR0_ISR *****************
  2370 ;; Defined at:
  2371 ;;		line 101 in file "mcc_generated_files/tmr0.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;		None               void
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0, pclath, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2385 ;;      Params:         0       0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    4
  2392 ;; This function calls:
  2393 ;;		_TMR0_CallBack
  2394 ;; This function is called by:
  2395 ;;		_INTERRUPT_InterruptManager
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function _TMR0_ISR
  2401  0F9F                     _TMR0_ISR:	
  2402                           
  2403                           ;tmr0.c: 104: INTCONbits.TMR0IF = 0;
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2407  0F9F  110B               	bcf	11,2	;volatile
  2408                           
  2409                           ;tmr0.c: 106: TMR0 = timer0ReloadVal;
  2410  0FA0  0020               	movlb	0	; select bank0
  2411  0FA1  086D               	movf	_timer0ReloadVal,w	;volatile
  2412  0FA2  0095               	movwf	21	;volatile
  2413                           
  2414                           ;tmr0.c: 110: TMR0_CallBack();
  2415  0FA3  3186  2677         	fcall	_TMR0_CallBack
  2416  0FA5  0008               	return
  2417  0FA6                     __end_of_TMR0_ISR:	
  2418                           
  2419                           	psect	text9
  2420  0677                     __ptext9:	
  2421 ;; *************** function _TMR0_CallBack *****************
  2422 ;; Defined at:
  2423 ;;		line 185 in file "main.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;		None               void
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2437 ;;      Params:         0       0       0       0       0       0
  2438 ;;      Locals:         0       1       0       0       0       0
  2439 ;;      Temps:          0       1       0       0       0       0
  2440 ;;      Totals:         0       2       0       0       0       0
  2441 ;;Total ram usage:        2 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    3
  2444 ;; This function calls:
  2445 ;;		_detectCharge
  2446 ;;		_detectPowerOn
  2447 ;;		_detectVBattery
  2448 ;;		_initState
  2449 ;;		_ledMessage
  2450 ;;		_ledPower
  2451 ;;		_psPower
  2452 ;;		_setLedState
  2453 ;; This function is called by:
  2454 ;;		_TMR0_ISR
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           
  2459                           ;psect for function _TMR0_CallBack
  2460  0677                     _TMR0_CallBack:	
  2461                           
  2462                           ;main.c: 186: ledMessage(stPowerSaveMode);
  2463                           
  2464                           ;incstack = 0
  2465                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2466  0677  0021               	movlb	1	; select bank1
  2467  0678  082E               	movf	_stPowerSaveMode^(0+128),w
  2468  0679  318F  27B7  3186   	fcall	_ledMessage
  2469                           
  2470                           ;main.c: 187: if (stPowerSaveMode) {
  2471  067C  0021               	movlb	1	; select bank1
  2472  067D  082E               	movf	_stPowerSaveMode^(0+128),w
  2473  067E  1903               	btfsc	3,2
  2474  067F  2E88               	goto	i1l2327
  2475                           
  2476                           ;main.c: 188: ledPower(0);
  2477  0680  3000               	movlw	0
  2478  0681  318F  27C1  3186   	fcall	_ledPower
  2479                           
  2480                           ;main.c: 189: psPower(0);
  2481  0684  3000               	movlw	0
  2482  0685  318F  27CB         	fcall	_psPower
  2483                           
  2484                           ;main.c: 190: return;
  2485  0687  0008               	return
  2486  0688                     i1l2327:	
  2487                           
  2488                           ;main.c: 191: }
  2489                           ;main.c: 192: initState();
  2490  0688  3187  27F3  3186   	fcall	_initState
  2491                           
  2492                           ;main.c: 193: detectPowerOn();
  2493  068B  3186  26AA  3186   	fcall	_detectPowerOn
  2494                           
  2495                           ;main.c: 194: detectCharge();
  2496  068E  3187  272D  3186   	fcall	_detectCharge
  2497                           
  2498                           ;main.c: 195: detectVBattery();
  2499  0691  3185  2535  3186   	fcall	_detectVBattery
  2500                           
  2501                           ;main.c: 196: setLedState();
  2502  0694  3185  25FF  3186   	fcall	_setLedState
  2503                           
  2504                           ;main.c: 197: stPowerSaveMode = stLowBattery || stOff;
  2505  0697  0020               	movlb	0	; select bank0
  2506  0698  01C8               	clrf	_TMR0_CallBack$646
  2507  0699  0AC8               	incf	_TMR0_CallBack$646,f
  2508  069A  0021               	movlb	1	; select bank1
  2509  069B  082B               	movf	_stLowBattery^(0+128),w
  2510  069C  1D03               	btfss	3,2
  2511  069D  2EA3               	goto	i1l2345
  2512  069E  082C               	movf	_stOff^(0+128),w
  2513  069F  1D03               	btfss	3,2
  2514  06A0  2EA3               	goto	i1l2345
  2515  06A1  0020               	movlb	0	; select bank0
  2516  06A2  01C8               	clrf	_TMR0_CallBack$646
  2517  06A3                     i1l2345:	
  2518  06A3  0020               	movlb	0	; select bank0
  2519  06A4  0848               	movf	_TMR0_CallBack$646,w
  2520  06A5  00C7               	movwf	??_TMR0_CallBack
  2521  06A6  0847               	movf	??_TMR0_CallBack,w
  2522  06A7  0021               	movlb	1	; select bank1
  2523  06A8  00AE               	movwf	_stPowerSaveMode^(0+128)
  2524  06A9  0008               	return
  2525  06AA                     __end_of_TMR0_CallBack:	
  2526                           
  2527                           	psect	text10
  2528  05FF                     __ptext10:	
  2529 ;; *************** function _setLedState *****************
  2530 ;; Defined at:
  2531 ;;		line 179 in file "main.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;		None               void
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, pclath, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2545 ;;      Params:         0       0       0       0       0       0
  2546 ;;      Locals:         4       0       0       0       0       0
  2547 ;;      Temps:          1       0       0       0       0       0
  2548 ;;      Totals:         5       0       0       0       0       0
  2549 ;;Total ram usage:        5 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    1
  2552 ;; This function calls:
  2553 ;;		_ledCharge
  2554 ;;		_ledPower
  2555 ;;		_psPower
  2556 ;; This function is called by:
  2557 ;;		_TMR0_CallBack
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _setLedState
  2563  05FF                     _setLedState:	
  2564                           
  2565                           ;main.c: 180: ledPower(stPower && !(stCharge || stFault));
  2566                           
  2567                           ;incstack = 0
  2568                           ; Regs used in _setLedState: [wreg+status,2+status,0+pclath+cstack]
  2569  05FF  01F3               	clrf	_setLedState$633
  2570  0600  0020               	movlb	0	; select bank0
  2571  0601  086C               	movf	_stPower,w
  2572  0602  1903               	btfsc	3,2
  2573  0603  2E0C               	goto	i1l2185
  2574  0604  086A               	movf	_stCharge,w
  2575  0605  1D03               	btfss	3,2
  2576  0606  2E0C               	goto	i1l2185
  2577  0607  086B               	movf	_stFault,w
  2578  0608  1D03               	btfss	3,2
  2579  0609  2E0C               	goto	i1l2185
  2580  060A  01F3               	clrf	_setLedState$633
  2581  060B  0AF3               	incf	_setLedState$633,f
  2582  060C                     i1l2185:	
  2583  060C  0873               	movf	_setLedState$633,w
  2584  060D  318F  27C1  3185   	fcall	_ledPower
  2585                           
  2586                           ;main.c: 181: ledCharge(stExPower && stCharge, stExPower && stFault);
  2587  0610  01F4               	clrf	_setLedState$635
  2588  0611  0021               	movlb	1	; select bank1
  2589  0612  082A               	movf	_stExPower^(0+128),w
  2590  0613  1903               	btfsc	3,2
  2591  0614  2E1B               	goto	i1l2195
  2592  0615  0020               	movlb	0	; select bank0
  2593  0616  086B               	movf	_stFault,w
  2594  0617  1903               	btfsc	3,2
  2595  0618  2E1B               	goto	i1l2195
  2596  0619  01F4               	clrf	_setLedState$635
  2597  061A  0AF4               	incf	_setLedState$635,f
  2598  061B                     i1l2195:	
  2599  061B  01F5               	clrf	_setLedState$636
  2600  061C  0021               	movlb	1	; select bank1
  2601  061D  082A               	movf	_stExPower^(0+128),w
  2602  061E  1903               	btfsc	3,2
  2603  061F  2E26               	goto	i1l2203
  2604  0620  0020               	movlb	0	; select bank0
  2605  0621  086A               	movf	_stCharge,w
  2606  0622  1903               	btfsc	3,2
  2607  0623  2E26               	goto	i1l2203
  2608  0624  01F5               	clrf	_setLedState$636
  2609  0625  0AF5               	incf	_setLedState$636,f
  2610  0626                     i1l2203:	
  2611  0626  0874               	movf	_setLedState$635,w
  2612  0627  00F2               	movwf	??_setLedState
  2613  0628  0872               	movf	??_setLedState,w
  2614  0629  00F0               	movwf	ledCharge@toggle
  2615  062A  0875               	movf	_setLedState$636,w
  2616  062B  318F  27EF  3185   	fcall	_ledCharge
  2617                           
  2618                           ;main.c: 182: psPower(!(stOff || stLowBattery));
  2619  062E  01F6               	clrf	_setLedState$638
  2620  062F  0021               	movlb	1	; select bank1
  2621  0630  082C               	movf	_stOff^(0+128),w
  2622  0631  1D03               	btfss	3,2
  2623  0632  2E38               	goto	i1l2213
  2624  0633  082B               	movf	_stLowBattery^(0+128),w
  2625  0634  1D03               	btfss	3,2
  2626  0635  2E38               	goto	i1l2213
  2627  0636  01F6               	clrf	_setLedState$638
  2628  0637  0AF6               	incf	_setLedState$638,f
  2629  0638                     i1l2213:	
  2630  0638  0876               	movf	_setLedState$638,w
  2631  0639  318F  27CB         	fcall	_psPower
  2632  063B  0008               	return
  2633  063C                     __end_of_setLedState:	
  2634                           
  2635                           	psect	text11
  2636  0FCB                     __ptext11:	
  2637 ;; *************** function _psPower *****************
  2638 ;; Defined at:
  2639 ;;		line 165 in file "main.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  on              1    wreg     unsigned char 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  on              1    0[COMMON] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;		None               void
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2653 ;;      Params:         0       0       0       0       0       0
  2654 ;;      Locals:         1       0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0
  2656 ;;      Totals:         1       0       0       0       0       0
  2657 ;;Total ram usage:        1 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_setLedState
  2663 ;;		_TMR0_CallBack
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           
  2668                           ;psect for function _psPower
  2669  0FCB                     _psPower:	
  2670                           
  2671                           ;incstack = 0
  2672                           ; Regs used in _psPower: [wreg+status,2+status,0]
  2673                           ;psPower@on stored from wreg
  2674  0FCB  00F0               	movwf	psPower@on
  2675                           
  2676                           ;main.c: 166: if (on)
  2677  0FCC  0870               	movf	psPower@on,w
  2678  0FCD  1903               	btfsc	3,2
  2679  0FCE  2FD2               	goto	i1l442
  2680                           
  2681                           ;main.c: 167: do { LATA3 = 0; } while(0);
  2682  0FCF  0022               	movlb	2	; select bank2
  2683  0FD0  118C               	bcf	12,3	;volatile
  2684  0FD1  0008               	return
  2685  0FD2                     i1l442:	
  2686                           ;main.c: 168: else
  2687                           ;main.c: 169: do { LATA3 = 1; } while(0);
  2688                           
  2689  0FD2  0022               	movlb	2	; select bank2
  2690  0FD3  158C               	bsf	12,3	;volatile
  2691  0FD4  0008               	return
  2692  0FD5                     __end_of_psPower:	
  2693                           
  2694                           	psect	text12
  2695  0FC1                     __ptext12:	
  2696 ;; *************** function _ledPower *****************
  2697 ;; Defined at:
  2698 ;;		line 149 in file "main.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  on              1    wreg     unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  on              1    0[COMMON] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;		None               void
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2712 ;;      Params:         0       0       0       0       0       0
  2713 ;;      Locals:         1       0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0
  2715 ;;      Totals:         1       0       0       0       0       0
  2716 ;;Total ram usage:        1 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_setLedState
  2722 ;;		_TMR0_CallBack
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           
  2727                           ;psect for function _ledPower
  2728  0FC1                     _ledPower:	
  2729                           
  2730                           ;incstack = 0
  2731                           ; Regs used in _ledPower: [wreg+status,2+status,0]
  2732                           ;ledPower@on stored from wreg
  2733  0FC1  00F0               	movwf	ledPower@on
  2734                           
  2735                           ;main.c: 150: if (on)
  2736  0FC2  0870               	movf	ledPower@on,w
  2737  0FC3  1903               	btfsc	3,2
  2738  0FC4  2FC8               	goto	i1l420
  2739                           
  2740                           ;main.c: 151: do { LATA6 = 1; } while(0);
  2741  0FC5  0022               	movlb	2	; select bank2
  2742  0FC6  170C               	bsf	12,6	;volatile
  2743  0FC7  0008               	return
  2744  0FC8                     i1l420:	
  2745                           ;main.c: 152: else
  2746                           ;main.c: 153: do { LATA6 = 0; } while(0);
  2747                           
  2748  0FC8  0022               	movlb	2	; select bank2
  2749  0FC9  130C               	bcf	12,6	;volatile
  2750  0FCA  0008               	return
  2751  0FCB                     __end_of_ledPower:	
  2752                           
  2753                           	psect	text13
  2754  0FEF                     __ptext13:	
  2755 ;; *************** function _ledCharge *****************
  2756 ;; Defined at:
  2757 ;;		line 156 in file "main.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  on              1    wreg     unsigned char 
  2760 ;;  toggle          1    0[COMMON] unsigned char 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  on              1    1[COMMON] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;		None               void
  2765 ;; Registers used:
  2766 ;;		wreg, status,2, status,0
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2772 ;;      Params:         1       0       0       0       0       0
  2773 ;;      Locals:         1       0       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0
  2775 ;;      Totals:         2       0       0       0       0       0
  2776 ;;Total ram usage:        2 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_setLedState
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           
  2786                           ;psect for function _ledCharge
  2787  0FEF                     _ledCharge:	
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in _ledCharge: [wreg+status,2+status,0]
  2791                           ;ledCharge@on stored from wreg
  2792  0FEF  00F1               	movwf	ledCharge@on
  2793                           
  2794                           ;main.c: 157: if (toggle)
  2795  0FF0  0870               	movf	ledCharge@toggle,w
  2796  0FF1  1903               	btfsc	3,2
  2797  0FF2  2FF7               	goto	i1l1997
  2798                           
  2799                           ;main.c: 158: do { LATA7 = ~LATA7; } while(0);
  2800  0FF3  3080               	movlw	128
  2801  0FF4  0022               	movlb	2	; select bank2
  2802  0FF5  068C               	xorwf	12,f
  2803  0FF6  0008               	return
  2804  0FF7                     i1l1997:	
  2805                           
  2806                           ;main.c: 159: else if (on)
  2807  0FF7  0871               	movf	ledCharge@on,w
  2808  0FF8  1903               	btfsc	3,2
  2809  0FF9  2FFD               	goto	i1l433
  2810                           
  2811                           ;main.c: 160: do { LATA7 = 1; } while(0);
  2812  0FFA  0022               	movlb	2	; select bank2
  2813  0FFB  178C               	bsf	12,7	;volatile
  2814  0FFC  0008               	return
  2815  0FFD                     i1l433:	
  2816                           ;main.c: 161: else
  2817                           ;main.c: 162: do { LATA7 = 0; } while(0);
  2818                           
  2819  0FFD  0022               	movlb	2	; select bank2
  2820  0FFE  138C               	bcf	12,7	;volatile
  2821  0FFF  0008               	return
  2822  1000                     __end_of_ledCharge:	
  2823                           
  2824                           	psect	text14
  2825  0FB7                     __ptext14:	
  2826 ;; *************** function _ledMessage *****************
  2827 ;; Defined at:
  2828 ;;		line 172 in file "main.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  on              1    wreg     unsigned char 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  on              1    0[COMMON] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;		None               void
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2842 ;;      Params:         0       0       0       0       0       0
  2843 ;;      Locals:         1       0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0
  2845 ;;      Totals:         1       0       0       0       0       0
  2846 ;;Total ram usage:        1 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_TMR0_CallBack
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _ledMessage
  2857  0FB7                     _ledMessage:	
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _ledMessage: [wreg+status,2+status,0]
  2861                           ;ledMessage@on stored from wreg
  2862  0FB7  00F0               	movwf	ledMessage@on
  2863                           
  2864                           ;main.c: 173: if (on)
  2865  0FB8  0870               	movf	ledMessage@on,w
  2866  0FB9  1903               	btfsc	3,2
  2867  0FBA  2FBE               	goto	i1l451
  2868                           
  2869                           ;main.c: 174: do { LATA1 = 1; } while(0);
  2870  0FBB  0022               	movlb	2	; select bank2
  2871  0FBC  148C               	bsf	12,1	;volatile
  2872  0FBD  0008               	return
  2873  0FBE                     i1l451:	
  2874                           ;main.c: 175: else
  2875                           ;main.c: 176: do { LATA1 = 0; } while(0);
  2876                           
  2877  0FBE  0022               	movlb	2	; select bank2
  2878  0FBF  108C               	bcf	12,1	;volatile
  2879  0FC0  0008               	return
  2880  0FC1                     __end_of_ledMessage:	
  2881                           
  2882                           	psect	text15
  2883  07F3                     __ptext15:	
  2884 ;; *************** function _initState *****************
  2885 ;; Defined at:
  2886 ;;		line 94 in file "main.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;		None               void
  2893 ;; Registers used:
  2894 ;;		status,2
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2900 ;;      Params:         0       0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0
  2903 ;;      Totals:         0       0       0       0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_TMR0_CallBack
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function _initState
  2915  07F3                     _initState:	
  2916                           
  2917                           ;main.c: 95: stPower = 0, stExPower = 0;
  2918                           
  2919                           ;incstack = 0
  2920                           ; Regs used in _initState: [status,2]
  2921  07F3  0020               	movlb	0	; select bank0
  2922  07F4  01EC               	clrf	_stPower
  2923  07F5  0021               	movlb	1	; select bank1
  2924  07F6  01AA               	clrf	_stExPower^(0+128)
  2925                           
  2926                           ;main.c: 96: stOff = 0, stOn = 0, stCharge = 0, stFault = 0, stLowBattery = 0;
  2927  07F7  01AC               	clrf	_stOff^(0+128)
  2928  07F8  01AD               	clrf	_stOn^(0+128)
  2929  07F9  0020               	movlb	0	; select bank0
  2930  07FA  01EA               	clrf	_stCharge
  2931  07FB  01EB               	clrf	_stFault
  2932  07FC  0021               	movlb	1	; select bank1
  2933  07FD  01AB               	clrf	_stLowBattery^(0+128)
  2934  07FE  0008               	return
  2935  07FF                     __end_of_initState:	
  2936                           
  2937                           	psect	text16
  2938  06DA                     __ptext16:	
  2939 ;; *************** function _PIN_MANAGER_IOC *****************
  2940 ;; Defined at:
  2941 ;;		line 89 in file "mcc_generated_files/pin_manager.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;		None               void
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0, pclath, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2955 ;;      Params:         0       0       0       0       0       0
  2956 ;;      Locals:         0       0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0
  2958 ;;      Totals:         0       0       0       0       0       0
  2959 ;;Total ram usage:        0 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    5
  2962 ;; This function calls:
  2963 ;;		_I_CHRG_intr
  2964 ;;		_I_EXPWR_intr
  2965 ;;		_I_FAULT_intr
  2966 ;;		_I_PWR_ON_intr
  2967 ;; This function is called by:
  2968 ;;		_INTERRUPT_InterruptManager
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           
  2973                           ;psect for function _PIN_MANAGER_IOC
  2974  06DA                     _PIN_MANAGER_IOC:	
  2975                           
  2976                           ;pin_manager.c: 90: if (((IOCBN0 == 1) || (IOCBP0 == 1)) && (IOCBF0 == 1)) {
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  2980  06DA  0027               	movlb	7	; select bank7
  2981  06DB  1815               	btfsc	21,0	;volatile
  2982  06DC  2EDF               	goto	i1l64
  2983  06DD  1C14               	btfss	20,0	;volatile
  2984  06DE  2EE6               	goto	i1l2367
  2985  06DF                     i1l64:	
  2986  06DF  1C16               	btfss	22,0	;volatile
  2987  06E0  2EE6               	goto	i1l2367
  2988                           
  2989                           ;pin_manager.c: 92: I_PWR_ON_intr();
  2990  06E1  318F  278E  3186   	fcall	_I_PWR_ON_intr
  2991                           
  2992                           ;pin_manager.c: 94: IOCBF0 = 0;
  2993  06E4  0027               	movlb	7	; select bank7
  2994  06E5  1016               	bcf	22,0	;volatile
  2995  06E6                     i1l2367:	
  2996                           
  2997                           ;pin_manager.c: 95: }
  2998                           ;pin_manager.c: 96: if (((IOCBN1 == 1) || (IOCBP1 == 1)) && (IOCBF1 == 1)) {
  2999  06E6  1895               	btfsc	21,1	;volatile
  3000  06E7  2EEA               	goto	i1l67
  3001  06E8  1C94               	btfss	20,1	;volatile
  3002  06E9  2EF1               	goto	i1l2375
  3003  06EA                     i1l67:	
  3004  06EA  1C96               	btfss	22,1	;volatile
  3005  06EB  2EF1               	goto	i1l2375
  3006                           
  3007                           ;pin_manager.c: 98: I_EXPWR_intr();
  3008  06EC  318F  2785  3186   	fcall	_I_EXPWR_intr
  3009                           
  3010                           ;pin_manager.c: 100: IOCBF1 = 0;
  3011  06EF  0027               	movlb	7	; select bank7
  3012  06F0  1096               	bcf	22,1	;volatile
  3013  06F1                     i1l2375:	
  3014                           
  3015                           ;pin_manager.c: 101: }
  3016                           ;pin_manager.c: 102: if (((IOCBN3 == 1) || (IOCBP3 == 1)) && (IOCBF3 == 1)) {
  3017  06F1  1995               	btfsc	21,3	;volatile
  3018  06F2  2EF5               	goto	i1l70
  3019  06F3  1D94               	btfss	20,3	;volatile
  3020  06F4  2EFC               	goto	i1l2383
  3021  06F5                     i1l70:	
  3022  06F5  1D96               	btfss	22,3	;volatile
  3023  06F6  2EFC               	goto	i1l2383
  3024                           
  3025                           ;pin_manager.c: 104: I_CHRG_intr();
  3026  06F7  318F  2782  3186   	fcall	_I_CHRG_intr
  3027                           
  3028                           ;pin_manager.c: 106: IOCBF3 = 0;
  3029  06FA  0027               	movlb	7	; select bank7
  3030  06FB  1196               	bcf	22,3	;volatile
  3031  06FC                     i1l2383:	
  3032                           
  3033                           ;pin_manager.c: 107: }
  3034                           ;pin_manager.c: 108: if (((IOCBN4 == 1) || (IOCBP4 == 1)) && (IOCBF4 == 1)) {
  3035  06FC  1A15               	btfsc	21,4	;volatile
  3036  06FD  2F00               	goto	i1l73
  3037  06FE  1E14               	btfss	20,4	;volatile
  3038  06FF  0008               	return
  3039  0700                     i1l73:	
  3040  0700  1E16               	btfss	22,4	;volatile
  3041  0701  0008               	return
  3042                           
  3043                           ;pin_manager.c: 110: I_FAULT_intr();
  3044  0702  318F  2788         	fcall	_I_FAULT_intr
  3045                           
  3046                           ;pin_manager.c: 112: IOCBF4 = 0;
  3047  0704  0027               	movlb	7	; select bank7
  3048  0705  1216               	bcf	22,4	;volatile
  3049  0706  0008               	return
  3050  0707                     __end_of_PIN_MANAGER_IOC:	
  3051                           
  3052                           	psect	text17
  3053  0F8E                     __ptext17:	
  3054 ;; *************** function _I_PWR_ON_intr *****************
  3055 ;; Defined at:
  3056 ;;		line 223 in file "main.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;		None               void
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0, pclath, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3070 ;;      Params:         0       0       0       0       0       0
  3071 ;;      Locals:         0       0       0       0       0       0
  3072 ;;      Temps:          0       0       0       0       0       0
  3073 ;;      Totals:         0       0       0       0       0       0
  3074 ;;Total ram usage:        0 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    4
  3077 ;; This function calls:
  3078 ;;		_putPwrMsg
  3079 ;; This function is called by:
  3080 ;;		_PIN_MANAGER_IOC
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           
  3085                           ;psect for function _I_PWR_ON_intr
  3086  0F8E                     _I_PWR_ON_intr:	
  3087                           
  3088                           ;main.c: 224: stPowerSaveMode = 0;
  3089                           
  3090                           ;incstack = 0
  3091                           ; Regs used in _I_PWR_ON_intr: [wreg+status,2+status,0+pclath+cstack]
  3092  0F8E  0021               	movlb	1	; select bank1
  3093  0F8F  01AE               	clrf	_stPowerSaveMode^(0+128)
  3094                           
  3095                           ;main.c: 225: putPwrMsg();
  3096  0F90  3182  2296         	fcall	_putPwrMsg
  3097  0F92  0008               	return
  3098  0F93                     __end_of_I_PWR_ON_intr:	
  3099                           
  3100                           	psect	text18
  3101  0296                     __ptext18:	
  3102 ;; *************** function _putPwrMsg *****************
  3103 ;; Defined at:
  3104 ;;		line 207 in file "main.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  i               2   66[BANK0 ] int 
  3109 ;;  lim             2   68[BANK0 ] int 
  3110 ;;  pardeci         2   64[BANK0 ] int 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;		None               void
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, pclath, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3120 ;;      Params:         0       0       0       0       0       0
  3121 ;;      Locals:         0       6       0       0       0       0
  3122 ;;      Temps:          0       2       0       0       0       0
  3123 ;;      Totals:         0       8       0       0       0       0
  3124 ;;Total ram usage:        8 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    3
  3127 ;; This function calls:
  3128 ;;		___awtoft
  3129 ;;		___ftadd
  3130 ;;		___ftdiv
  3131 ;;		___ftmul
  3132 ;;		___ftneg
  3133 ;;		___fttol
  3134 ;;		_detectCharge
  3135 ;;		_detectPowerOn
  3136 ;;		_detectVBattery
  3137 ;; This function is called by:
  3138 ;;		_I_PWR_ON_intr
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           
  3143                           ;psect for function _putPwrMsg
  3144  0296                     _putPwrMsg:	
  3145                           
  3146                           ;main.c: 208: detectPowerOn();
  3147                           
  3148                           ;incstack = 0
  3149                           ; Regs used in _putPwrMsg: [wreg+status,2+status,0+pclath+cstack]
  3150  0296  3186  26AA  3182   	fcall	_detectPowerOn
  3151                           
  3152                           ;main.c: 209: detectCharge();
  3153  0299  3187  272D  3182   	fcall	_detectCharge
  3154                           
  3155                           ;main.c: 210: if (stPower && !(stCharge || stFault)) {
  3156  029C  0020               	movlb	0	; select bank0
  3157  029D  086C               	movf	_stPower,w
  3158  029E  1903               	btfsc	3,2
  3159  029F  0008               	return
  3160  02A0  086A               	movf	_stCharge,w
  3161  02A1  1D03               	btfss	3,2
  3162  02A2  0008               	return
  3163  02A3  086B               	movf	_stFault,w
  3164  02A4  1D03               	btfss	3,2
  3165  02A5  0008               	return
  3166                           
  3167                           ;main.c: 211: detectVBattery();
  3168  02A6  3185  2535  3182   	fcall	_detectVBattery
  3169                           
  3170                           ;main.c: 212: int lim = 3.2;
  3171  02A9  3003               	movlw	3
  3172  02AA  0020               	movlb	0	; select bank0
  3173  02AB  00E4               	movwf	putPwrMsg@lim
  3174  02AC  3000               	movlw	0
  3175  02AD  00E5               	movwf	putPwrMsg@lim+1
  3176                           
  3177                           ;main.c: 213: int pardeci = (vBattery - lim) / (4.0 - lim) * 5;
  3178  02AE  0865               	movf	putPwrMsg@lim+1,w
  3179  02AF  00F9               	movwf	___awtoft@c+1
  3180  02B0  0864               	movf	putPwrMsg@lim,w
  3181  02B1  00F8               	movwf	___awtoft@c
  3182  02B2  3187  2751  3182   	fcall	___awtoft
  3183  02B5  0878               	movf	?___awtoft,w
  3184  02B6  0020               	movlb	0	; select bank0
  3185  02B7  00A0               	movwf	___ftneg@f1
  3186  02B8  0879               	movf	?___awtoft+1,w
  3187  02B9  00A1               	movwf	___ftneg@f1+1
  3188  02BA  087A               	movf	?___awtoft+2,w
  3189  02BB  00A2               	movwf	___ftneg@f1+2
  3190  02BC  318F  27AE  3182   	fcall	___ftneg
  3191  02BF  0020               	movlb	0	; select bank0
  3192  02C0  0820               	movf	?___ftneg,w
  3193  02C1  00A6               	movwf	___ftadd@f2
  3194  02C2  0821               	movf	?___ftneg+1,w
  3195  02C3  00A7               	movwf	___ftadd@f2+1
  3196  02C4  0822               	movf	?___ftneg+2,w
  3197  02C5  00A8               	movwf	___ftadd@f2+2
  3198  02C6  0021               	movlb	1	; select bank1
  3199  02C7  083E               	movf	_vBattery^(0+128),w
  3200  02C8  0020               	movlb	0	; select bank0
  3201  02C9  00A3               	movwf	___ftadd@f1
  3202  02CA  0021               	movlb	1	; select bank1
  3203  02CB  083F               	movf	(_vBattery+1)^(0+128),w
  3204  02CC  0020               	movlb	0	; select bank0
  3205  02CD  00A4               	movwf	___ftadd@f1+1
  3206  02CE  0021               	movlb	1	; select bank1
  3207  02CF  0840               	movf	(_vBattery+2)^(0+128),w
  3208  02D0  0020               	movlb	0	; select bank0
  3209  02D1  00A5               	movwf	___ftadd@f1+2
  3210  02D2  3181  21A0  3182   	fcall	___ftadd
  3211  02D5  0020               	movlb	0	; select bank0
  3212  02D6  0823               	movf	?___ftadd,w
  3213  02D7  00B3               	movwf	___ftdiv@f1
  3214  02D8  0824               	movf	?___ftadd+1,w
  3215  02D9  00B4               	movwf	___ftdiv@f1+1
  3216  02DA  0825               	movf	?___ftadd+2,w
  3217  02DB  00B5               	movwf	___ftdiv@f1+2
  3218  02DC  0865               	movf	putPwrMsg@lim+1,w
  3219  02DD  00F9               	movwf	___awtoft@c+1
  3220  02DE  0864               	movf	putPwrMsg@lim,w
  3221  02DF  00F8               	movwf	___awtoft@c
  3222  02E0  3187  2751  3182   	fcall	___awtoft
  3223  02E3  0878               	movf	?___awtoft,w
  3224  02E4  0020               	movlb	0	; select bank0
  3225  02E5  00A0               	movwf	___ftneg@f1
  3226  02E6  0879               	movf	?___awtoft+1,w
  3227  02E7  00A1               	movwf	___ftneg@f1+1
  3228  02E8  087A               	movf	?___awtoft+2,w
  3229  02E9  00A2               	movwf	___ftneg@f1+2
  3230  02EA  318F  27AE  3182   	fcall	___ftneg
  3231  02ED  0020               	movlb	0	; select bank0
  3232  02EE  0820               	movf	?___ftneg,w
  3233  02EF  00A6               	movwf	___ftadd@f2
  3234  02F0  0821               	movf	?___ftneg+1,w
  3235  02F1  00A7               	movwf	___ftadd@f2+1
  3236  02F2  0822               	movf	?___ftneg+2,w
  3237  02F3  00A8               	movwf	___ftadd@f2+2
  3238  02F4  3000               	movlw	0
  3239  02F5  00A3               	movwf	___ftadd@f1
  3240  02F6  3080               	movlw	128
  3241  02F7  00A4               	movwf	___ftadd@f1+1
  3242  02F8  3040               	movlw	64
  3243  02F9  00A5               	movwf	___ftadd@f1+2
  3244  02FA  3181  21A0  3182   	fcall	___ftadd
  3245  02FD  0020               	movlb	0	; select bank0
  3246  02FE  0823               	movf	?___ftadd,w
  3247  02FF  00B0               	movwf	___ftdiv@f2
  3248  0300  0824               	movf	?___ftadd+1,w
  3249  0301  00B1               	movwf	___ftdiv@f2+1
  3250  0302  0825               	movf	?___ftadd+2,w
  3251  0303  00B2               	movwf	___ftdiv@f2+2
  3252  0304  3184  2405  3182   	fcall	___ftdiv
  3253  0307  0020               	movlb	0	; select bank0
  3254  0308  0830               	movf	?___ftdiv,w
  3255  0309  00C3               	movwf	___ftmul@f2
  3256  030A  0831               	movf	?___ftdiv+1,w
  3257  030B  00C4               	movwf	___ftmul@f2+1
  3258  030C  0832               	movf	?___ftdiv+2,w
  3259  030D  00C5               	movwf	___ftmul@f2+2
  3260  030E  3000               	movlw	0
  3261  030F  00C0               	movwf	___ftmul@f1
  3262  0310  30A0               	movlw	160
  3263  0311  00C1               	movwf	___ftmul@f1+1
  3264  0312  3040               	movlw	64
  3265  0313  00C2               	movwf	___ftmul@f1+2
  3266  0314  3183  2351  3182   	fcall	___ftmul
  3267  0317  0020               	movlb	0	; select bank0
  3268  0318  0840               	movf	?___ftmul,w
  3269  0319  00D0               	movwf	___fttol@f1
  3270  031A  0841               	movf	?___ftmul+1,w
  3271  031B  00D1               	movwf	___fttol@f1+1
  3272  031C  0842               	movf	?___ftmul+2,w
  3273  031D  00D2               	movwf	___fttol@f1+2
  3274  031E  3184  24AE  3182   	fcall	___fttol
  3275  0321  0020               	movlb	0	; select bank0
  3276  0322  0851               	movf	?___fttol+1,w
  3277  0323  00E1               	movwf	putPwrMsg@pardeci+1
  3278  0324  0850               	movf	?___fttol,w
  3279  0325  00E0               	movwf	putPwrMsg@pardeci
  3280                           
  3281                           ;main.c: 214: for (int i = 0; i < pardeci; i++) {
  3282  0326  01E2               	clrf	putPwrMsg@i
  3283  0327  01E3               	clrf	putPwrMsg@i+1
  3284  0328                     i1l480:	
  3285  0328  0863               	movf	putPwrMsg@i+1,w
  3286  0329  3A80               	xorlw	128
  3287  032A  00DE               	movwf	??_putPwrMsg
  3288  032B  0861               	movf	putPwrMsg@pardeci+1,w
  3289  032C  3A80               	xorlw	128
  3290  032D  025E               	subwf	??_putPwrMsg,w
  3291  032E  1D03               	skipz
  3292  032F  2B32               	goto	u242_25
  3293  0330  0860               	movf	putPwrMsg@pardeci,w
  3294  0331  0262               	subwf	putPwrMsg@i,w
  3295  0332                     u242_25:	
  3296  0332  1803               	btfsc	3,0
  3297  0333  0008               	return
  3298                           
  3299                           ;main.c: 215: do { LATA7 = 1; } while(0);
  3300  0334  0022               	movlb	2	; select bank2
  3301  0335  178C               	bsf	12,7	;volatile
  3302                           
  3303                           ;main.c: 216: _delay((unsigned long)((40)*(500000/4000.0)));
  3304  0336  3007               	movlw	7
  3305  0337  0020               	movlb	0	; select bank0
  3306  0338  00DF               	movwf	??_putPwrMsg+1
  3307  0339  307D               	movlw	125
  3308  033A  00DE               	movwf	??_putPwrMsg
  3309  033B                     u293_27:	
  3310  033B  0BDE               	decfsz	??_putPwrMsg,f
  3311  033C  2B3B               	goto	u293_27
  3312  033D  0BDF               	decfsz	??_putPwrMsg+1,f
  3313  033E  2B3B               	goto	u293_27
  3314                           
  3315                           ;main.c: 217: do { LATA7 = 0; } while(0);
  3316  033F  0022               	movlb	2	; select bank2
  3317  0340  138C               	bcf	12,7	;volatile
  3318                           
  3319                           ;main.c: 218: _delay((unsigned long)((100)*(500000/4000.0)));
  3320  0341  3011               	movlw	17
  3321  0342  0020               	movlb	0	; select bank0
  3322  0343  00DF               	movwf	??_putPwrMsg+1
  3323  0344  303A               	movlw	58
  3324  0345  00DE               	movwf	??_putPwrMsg
  3325  0346                     u294_27:	
  3326  0346  0BDE               	decfsz	??_putPwrMsg,f
  3327  0347  2B46               	goto	u294_27
  3328  0348  0BDF               	decfsz	??_putPwrMsg+1,f
  3329  0349  2B46               	goto	u294_27
  3330  034A  0000               	nop
  3331  034B  3001               	movlw	1
  3332  034C  0020               	movlb	0	; select bank0
  3333  034D  07E2               	addwf	putPwrMsg@i,f
  3334  034E  3000               	movlw	0
  3335  034F  3DE3               	addwfc	putPwrMsg@i+1,f
  3336  0350  2B28               	goto	i1l480
  3337  0351                     __end_of_putPwrMsg:	
  3338                           
  3339                           	psect	text19
  3340  0535                     __ptext19:	
  3341 ;; *************** function _detectVBattery *****************
  3342 ;; Defined at:
  3343 ;;		line 138 in file "main.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  adcval          2   37[BANK0 ] int 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;		None               void
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, pclath, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3357 ;;      Params:         0       0       0       0       0       0
  3358 ;;      Locals:         0       5       0       0       0       0
  3359 ;;      Temps:          0       2       0       0       0       0
  3360 ;;      Totals:         0       7       0       0       0       0
  3361 ;;Total ram usage:        7 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    2
  3364 ;; This function calls:
  3365 ;;		_ADC_GetConversion
  3366 ;;		___awtoft
  3367 ;;		___ftdiv
  3368 ;;		___ftge
  3369 ;; This function is called by:
  3370 ;;		_TMR0_CallBack
  3371 ;;		_putPwrMsg
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function _detectVBattery
  3377  0535                     _detectVBattery:	
  3378                           
  3379                           ;incstack = 0
  3380                           ; Regs used in _detectVBattery: [wreg+status,2+status,0+pclath+cstack]
  3381                           ;main.c: 139: do { LATA2 = 1; } while(0);
  3382  0535  0022               	movlb	2	; select bank2
  3383  0536  150C               	bsf	12,2	;volatile
  3384                           
  3385                           ;main.c: 140: _delay((unsigned long)((300)*(500000/4000.0)));
  3386  0537  3031               	movlw	49
  3387  0538  0020               	movlb	0	; select bank0
  3388  0539  00C1               	movwf	??_detectVBattery+1
  3389  053A  30B2               	movlw	178
  3390  053B  00C0               	movwf	??_detectVBattery
  3391  053C                     u295_27:	
  3392  053C  0BC0               	decfsz	??_detectVBattery,f
  3393  053D  2D3C               	goto	u295_27
  3394  053E  0BC1               	decfsz	??_detectVBattery+1,f
  3395  053F  2D3C               	goto	u295_27
  3396  0540  0000               	nop
  3397                           
  3398                           ;main.c: 141: int adcval = ADC_GetConversion(channel_AN4);
  3399  0541  3004               	movlw	4
  3400  0542  3187  27B9  3185   	fcall	_ADC_GetConversion
  3401  0545  0871               	movf	?_ADC_GetConversion+1,w
  3402  0546  0020               	movlb	0	; select bank0
  3403  0547  00C6               	movwf	detectVBattery@adcval+1
  3404  0548  0870               	movf	?_ADC_GetConversion,w
  3405  0549  00C5               	movwf	detectVBattery@adcval
  3406                           
  3407                           ;main.c: 142: do { LATA2 = 0; } while(0);
  3408  054A  0022               	movlb	2	; select bank2
  3409  054B  110C               	bcf	12,2	;volatile
  3410                           
  3411                           ;main.c: 143: vBattery = 2.445 / (adcval / 1023.0);
  3412  054C  30C0               	movlw	192
  3413  054D  0020               	movlb	0	; select bank0
  3414  054E  00B0               	movwf	___ftdiv@f2
  3415  054F  307F               	movlw	127
  3416  0550  00B1               	movwf	___ftdiv@f2+1
  3417  0551  3044               	movlw	68
  3418  0552  00B2               	movwf	___ftdiv@f2+2
  3419  0553  0846               	movf	detectVBattery@adcval+1,w
  3420  0554  00F9               	movwf	___awtoft@c+1
  3421  0555  0845               	movf	detectVBattery@adcval,w
  3422  0556  00F8               	movwf	___awtoft@c
  3423  0557  3187  2751  3185   	fcall	___awtoft
  3424  055A  0878               	movf	?___awtoft,w
  3425  055B  0020               	movlb	0	; select bank0
  3426  055C  00B3               	movwf	___ftdiv@f1
  3427  055D  0879               	movf	?___awtoft+1,w
  3428  055E  00B4               	movwf	___ftdiv@f1+1
  3429  055F  087A               	movf	?___awtoft+2,w
  3430  0560  00B5               	movwf	___ftdiv@f1+2
  3431  0561  3184  2405  3185   	fcall	___ftdiv
  3432  0564  0020               	movlb	0	; select bank0
  3433  0565  0830               	movf	?___ftdiv,w
  3434  0566  00C2               	movwf	_detectVBattery$1122
  3435  0567  0831               	movf	?___ftdiv+1,w
  3436  0568  00C3               	movwf	_detectVBattery$1122+1
  3437  0569  0832               	movf	?___ftdiv+2,w
  3438  056A  00C4               	movwf	_detectVBattery$1122+2
  3439                           
  3440                           ;main.c: 143: vBattery = 2.445 / (adcval / 1023.0);
  3441  056B  0842               	movf	_detectVBattery$1122,w
  3442  056C  00B0               	movwf	___ftdiv@f2
  3443  056D  0843               	movf	_detectVBattery$1122+1,w
  3444  056E  00B1               	movwf	___ftdiv@f2+1
  3445  056F  0844               	movf	_detectVBattery$1122+2,w
  3446  0570  00B2               	movwf	___ftdiv@f2+2
  3447  0571  307B               	movlw	123
  3448  0572  00B3               	movwf	___ftdiv@f1
  3449  0573  301C               	movlw	28
  3450  0574  00B4               	movwf	___ftdiv@f1+1
  3451  0575  3040               	movlw	64
  3452  0576  00B5               	movwf	___ftdiv@f1+2
  3453  0577  3184  2405  3185   	fcall	___ftdiv
  3454  057A  0020               	movlb	0	; select bank0
  3455  057B  0830               	movf	?___ftdiv,w
  3456  057C  0021               	movlb	1	; select bank1
  3457  057D  00BE               	movwf	_vBattery^(0+128)
  3458  057E  0020               	movlb	0	; select bank0
  3459  057F  0831               	movf	?___ftdiv+1,w
  3460  0580  0021               	movlb	1	; select bank1
  3461  0581  00BF               	movwf	(_vBattery+1)^(0+128)
  3462  0582  0020               	movlb	0	; select bank0
  3463  0583  0832               	movf	?___ftdiv+2,w
  3464  0584  0021               	movlb	1	; select bank1
  3465  0585  00C0               	movwf	(_vBattery+2)^(0+128)
  3466                           
  3467                           ;main.c: 144: if (vBattery < 3.17) {
  3468  0586  083E               	movf	_vBattery^(0+128),w
  3469  0587  00F0               	movwf	___ftge@ff1
  3470  0588  083F               	movf	(_vBattery+1)^(0+128),w
  3471  0589  00F1               	movwf	___ftge@ff1+1
  3472  058A  0840               	movf	(_vBattery+2)^(0+128),w
  3473  058B  00F2               	movwf	___ftge@ff1+2
  3474  058C  30E1               	movlw	225
  3475  058D  00F3               	movwf	___ftge@ff2
  3476  058E  304A               	movlw	74
  3477  058F  00F4               	movwf	___ftge@ff2+1
  3478  0590  3040               	movlw	64
  3479  0591  00F5               	movwf	___ftge@ff2+2
  3480  0592  3186  263C  3185   	fcall	___ftge
  3481  0595  1803               	btfsc	3,0
  3482  0596  0008               	return
  3483                           
  3484                           ;main.c: 145: stLowBattery = 1;
  3485  0597  0021               	movlb	1	; select bank1
  3486  0598  01AB               	clrf	_stLowBattery^(0+128)
  3487  0599  0AAB               	incf	_stLowBattery^(0+128),f
  3488  059A  0008               	return
  3489  059B                     __end_of_detectVBattery:	
  3490                           
  3491                           	psect	text20
  3492  063C                     __ptext20:	
  3493 ;; *************** function ___ftge *****************
  3494 ;; Defined at:
  3495 ;;		line 4 in file "/Applications/microchip/xc8/v1.35/sources/common/ftge.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  ff1             3    0[COMMON] float 
  3498 ;;  ff2             3    3[COMMON] float 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;		None               void
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3510 ;;      Params:         6       0       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0
  3512 ;;      Temps:          3       0       0       0       0       0
  3513 ;;      Totals:         9       0       0       0       0       0
  3514 ;;Total ram usage:        9 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_detectVBattery
  3520 ;;		_detectVBattery1
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function ___ftge
  3526  063C                     ___ftge:	
  3527                           
  3528                           ;incstack = 0
  3529                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3530  063C  1FF2               	btfss	___ftge@ff1+2,7
  3531  063D  2E52               	goto	i1l1937
  3532  063E  0970               	comf	___ftge@ff1,w
  3533  063F  00F6               	movwf	??___ftge
  3534  0640  0971               	comf	___ftge@ff1+1,w
  3535  0641  00F7               	movwf	??___ftge+1
  3536  0642  0972               	comf	___ftge@ff1+2,w
  3537  0643  00F8               	movwf	??___ftge+2
  3538  0644  0AF6               	incf	??___ftge,f
  3539  0645  1903               	skipnz
  3540  0646  0AF7               	incf	??___ftge+1,f
  3541  0647  1903               	skipnz
  3542  0648  0AF8               	incf	??___ftge+2,f
  3543  0649  3000               	movlw	0
  3544  064A  0776               	addwf	??___ftge,w
  3545  064B  00F0               	movwf	___ftge@ff1
  3546  064C  3000               	movlw	0
  3547  064D  3D77               	addwfc	??___ftge+1,w
  3548  064E  00F1               	movwf	___ftge@ff1+1
  3549  064F  3080               	movlw	128
  3550  0650  3D78               	addwfc	??___ftge+2,w
  3551  0651  00F2               	movwf	___ftge@ff1+2
  3552  0652                     i1l1937:	
  3553  0652  1FF5               	btfss	___ftge@ff2+2,7
  3554  0653  2E68               	goto	i1l1941
  3555  0654  0973               	comf	___ftge@ff2,w
  3556  0655  00F6               	movwf	??___ftge
  3557  0656  0974               	comf	___ftge@ff2+1,w
  3558  0657  00F7               	movwf	??___ftge+1
  3559  0658  0975               	comf	___ftge@ff2+2,w
  3560  0659  00F8               	movwf	??___ftge+2
  3561  065A  0AF6               	incf	??___ftge,f
  3562  065B  1903               	skipnz
  3563  065C  0AF7               	incf	??___ftge+1,f
  3564  065D  1903               	skipnz
  3565  065E  0AF8               	incf	??___ftge+2,f
  3566  065F  3000               	movlw	0
  3567  0660  0776               	addwf	??___ftge,w
  3568  0661  00F3               	movwf	___ftge@ff2
  3569  0662  3000               	movlw	0
  3570  0663  3D77               	addwfc	??___ftge+1,w
  3571  0664  00F4               	movwf	___ftge@ff2+1
  3572  0665  3080               	movlw	128
  3573  0666  3D78               	addwfc	??___ftge+2,w
  3574  0667  00F5               	movwf	___ftge@ff2+2
  3575  0668                     i1l1941:	
  3576  0668  3080               	movlw	128
  3577  0669  06F2               	xorwf	___ftge@ff1+2,f
  3578  066A  3080               	movlw	128
  3579  066B  06F5               	xorwf	___ftge@ff2+2,f
  3580  066C  0875               	movf	___ftge@ff2+2,w
  3581  066D  0272               	subwf	___ftge@ff1+2,w
  3582  066E  1D03               	skipz
  3583  066F  0008               	return
  3584  0670  0874               	movf	___ftge@ff2+1,w
  3585  0671  0271               	subwf	___ftge@ff1+1,w
  3586  0672  1D03               	skipz
  3587  0673  0008               	return
  3588  0674  0873               	movf	___ftge@ff2,w
  3589  0675  0270               	subwf	___ftge@ff1,w
  3590  0676  0008               	return
  3591  0677                     __end_of___ftge:	
  3592                           
  3593                           	psect	text21
  3594  0405                     __ptext21:	
  3595 ;; *************** function ___ftdiv *****************
  3596 ;; Defined at:
  3597 ;;		line 56 in file "/Applications/microchip/xc8/v1.35/sources/common/ftdiv.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  f2              3   16[BANK0 ] float 
  3600 ;;  f1              3   19[BANK0 ] float 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  f3              3   27[BANK0 ] float 
  3603 ;;  sign            1   31[BANK0 ] unsigned char 
  3604 ;;  exp             1   30[BANK0 ] unsigned char 
  3605 ;;  cntr            1   26[BANK0 ] unsigned char 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  3   16[BANK0 ] float 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0, pclath, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3615 ;;      Params:         0       6       0       0       0       0
  3616 ;;      Locals:         0       6       0       0       0       0
  3617 ;;      Temps:          0       4       0       0       0       0
  3618 ;;      Totals:         0      16       0       0       0       0
  3619 ;;Total ram usage:       16 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    1
  3622 ;; This function calls:
  3623 ;;		___ftpack
  3624 ;; This function is called by:
  3625 ;;		_detectVBattery
  3626 ;;		_putPwrMsg
  3627 ;;		_detectVBattery1
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           
  3632                           ;psect for function ___ftdiv
  3633  0405                     ___ftdiv:	
  3634                           
  3635                           ;incstack = 0
  3636                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3637  0405  0020               	movlb	0	; select bank0
  3638  0406  0833               	movf	___ftdiv@f1,w
  3639  0407  00B6               	movwf	??___ftdiv
  3640  0408  0834               	movf	___ftdiv@f1+1,w
  3641  0409  00B7               	movwf	??___ftdiv+1
  3642  040A  0835               	movf	___ftdiv@f1+2,w
  3643  040B  00B8               	movwf	??___ftdiv+2
  3644  040C  1003               	clrc
  3645  040D  0D37               	rlf	??___ftdiv+1,w
  3646  040E  0D38               	rlf	??___ftdiv+2,w
  3647  040F  00B9               	movwf	??___ftdiv+3
  3648  0410  0839               	movf	??___ftdiv+3,w
  3649  0411  00BE               	movwf	___ftdiv@exp
  3650  0412  083E               	movf	___ftdiv@exp,w
  3651  0413  1D03               	btfss	3,2
  3652  0414  2C1C               	goto	i1l1897
  3653  0415  3000               	movlw	0
  3654  0416  00B0               	movwf	?___ftdiv
  3655  0417  3000               	movlw	0
  3656  0418  00B1               	movwf	?___ftdiv+1
  3657  0419  3000               	movlw	0
  3658  041A  00B2               	movwf	?___ftdiv+2
  3659  041B  0008               	return
  3660  041C                     i1l1897:	
  3661  041C  0830               	movf	___ftdiv@f2,w
  3662  041D  00B6               	movwf	??___ftdiv
  3663  041E  0831               	movf	___ftdiv@f2+1,w
  3664  041F  00B7               	movwf	??___ftdiv+1
  3665  0420  0832               	movf	___ftdiv@f2+2,w
  3666  0421  00B8               	movwf	??___ftdiv+2
  3667  0422  1003               	clrc
  3668  0423  0D37               	rlf	??___ftdiv+1,w
  3669  0424  0D38               	rlf	??___ftdiv+2,w
  3670  0425  00B9               	movwf	??___ftdiv+3
  3671  0426  0839               	movf	??___ftdiv+3,w
  3672  0427  00BF               	movwf	___ftdiv@sign
  3673  0428  083F               	movf	___ftdiv@sign,w
  3674  0429  1D03               	btfss	3,2
  3675  042A  2C32               	goto	i1l1903
  3676  042B  3000               	movlw	0
  3677  042C  00B0               	movwf	?___ftdiv
  3678  042D  3000               	movlw	0
  3679  042E  00B1               	movwf	?___ftdiv+1
  3680  042F  3000               	movlw	0
  3681  0430  00B2               	movwf	?___ftdiv+2
  3682  0431  0008               	return
  3683  0432                     i1l1903:	
  3684  0432  3000               	movlw	0
  3685  0433  00BB               	movwf	___ftdiv@f3
  3686  0434  3000               	movlw	0
  3687  0435  00BC               	movwf	___ftdiv@f3+1
  3688  0436  3000               	movlw	0
  3689  0437  00BD               	movwf	___ftdiv@f3+2
  3690  0438  3089               	movlw	137
  3691  0439  073F               	addwf	___ftdiv@sign,w
  3692  043A  00B6               	movwf	??___ftdiv
  3693  043B  0836               	movf	??___ftdiv,w
  3694  043C  02BE               	subwf	___ftdiv@exp,f
  3695  043D  0833               	movf	___ftdiv@f1,w
  3696  043E  00B6               	movwf	??___ftdiv
  3697  043F  0834               	movf	___ftdiv@f1+1,w
  3698  0440  00B7               	movwf	??___ftdiv+1
  3699  0441  0835               	movf	___ftdiv@f1+2,w
  3700  0442  00B8               	movwf	??___ftdiv+2
  3701  0443  3010               	movlw	16
  3702  0444                     u163_25:	
  3703  0444  36B8               	lsrf	??___ftdiv+2,f
  3704  0445  0CB7               	rrf	??___ftdiv+1,f
  3705  0446  0CB6               	rrf	??___ftdiv,f
  3706  0447  0B89               	decfsz	9,f
  3707  0448  2C44               	goto	u163_25
  3708  0449  0836               	movf	??___ftdiv,w
  3709  044A  00B9               	movwf	??___ftdiv+3
  3710  044B  0839               	movf	??___ftdiv+3,w
  3711  044C  00BF               	movwf	___ftdiv@sign
  3712  044D  0830               	movf	___ftdiv@f2,w
  3713  044E  00B6               	movwf	??___ftdiv
  3714  044F  0831               	movf	___ftdiv@f2+1,w
  3715  0450  00B7               	movwf	??___ftdiv+1
  3716  0451  0832               	movf	___ftdiv@f2+2,w
  3717  0452  00B8               	movwf	??___ftdiv+2
  3718  0453  3010               	movlw	16
  3719  0454                     u164_25:	
  3720  0454  36B8               	lsrf	??___ftdiv+2,f
  3721  0455  0CB7               	rrf	??___ftdiv+1,f
  3722  0456  0CB6               	rrf	??___ftdiv,f
  3723  0457  0B89               	decfsz	9,f
  3724  0458  2C54               	goto	u164_25
  3725  0459  0836               	movf	??___ftdiv,w
  3726  045A  00B9               	movwf	??___ftdiv+3
  3727  045B  0839               	movf	??___ftdiv+3,w
  3728  045C  06BF               	xorwf	___ftdiv@sign,f
  3729  045D  3080               	movlw	128
  3730  045E  00B6               	movwf	??___ftdiv
  3731  045F  0836               	movf	??___ftdiv,w
  3732  0460  05BF               	andwf	___ftdiv@sign,f
  3733  0461  17B4               	bsf	___ftdiv@f1+1,7
  3734  0462  30FF               	movlw	255
  3735  0463  05B3               	andwf	___ftdiv@f1,f
  3736  0464  30FF               	movlw	255
  3737  0465  05B4               	andwf	___ftdiv@f1+1,f
  3738  0466  3000               	movlw	0
  3739  0467  05B5               	andwf	___ftdiv@f1+2,f
  3740  0468  17B1               	bsf	___ftdiv@f2+1,7
  3741  0469  30FF               	movlw	255
  3742  046A  05B0               	andwf	___ftdiv@f2,f
  3743  046B  30FF               	movlw	255
  3744  046C  05B1               	andwf	___ftdiv@f2+1,f
  3745  046D  3000               	movlw	0
  3746  046E  05B2               	andwf	___ftdiv@f2+2,f
  3747  046F  3018               	movlw	24
  3748  0470  00B6               	movwf	??___ftdiv
  3749  0471  0836               	movf	??___ftdiv,w
  3750  0472  00BA               	movwf	___ftdiv@cntr
  3751  0473                     i1l1917:	
  3752  0473  3001               	movlw	1
  3753  0474                     u165_25:	
  3754  0474  35BB               	lslf	___ftdiv@f3,f
  3755  0475  0DBC               	rlf	___ftdiv@f3+1,f
  3756  0476  0DBD               	rlf	___ftdiv@f3+2,f
  3757  0477  0B89               	decfsz	9,f
  3758  0478  2C74               	goto	u165_25
  3759  0479  0832               	movf	___ftdiv@f2+2,w
  3760  047A  0235               	subwf	___ftdiv@f1+2,w
  3761  047B  1D03               	skipz
  3762  047C  2C83               	goto	u166_25
  3763  047D  0831               	movf	___ftdiv@f2+1,w
  3764  047E  0234               	subwf	___ftdiv@f1+1,w
  3765  047F  1D03               	skipz
  3766  0480  2C83               	goto	u166_25
  3767  0481  0830               	movf	___ftdiv@f2,w
  3768  0482  0233               	subwf	___ftdiv@f1,w
  3769  0483                     u166_25:	
  3770  0483  1C03               	skipc
  3771  0484  2C8C               	goto	i1l1925
  3772  0485  0830               	movf	___ftdiv@f2,w
  3773  0486  02B3               	subwf	___ftdiv@f1,f
  3774  0487  0831               	movf	___ftdiv@f2+1,w
  3775  0488  3BB4               	subwfb	___ftdiv@f1+1,f
  3776  0489  0832               	movf	___ftdiv@f2+2,w
  3777  048A  3BB5               	subwfb	___ftdiv@f1+2,f
  3778  048B  143B               	bsf	___ftdiv@f3,0
  3779  048C                     i1l1925:	
  3780  048C  3001               	movlw	1
  3781  048D                     u167_25:	
  3782  048D  35B3               	lslf	___ftdiv@f1,f
  3783  048E  0DB4               	rlf	___ftdiv@f1+1,f
  3784  048F  0DB5               	rlf	___ftdiv@f1+2,f
  3785  0490  0B89               	decfsz	9,f
  3786  0491  2C8D               	goto	u167_25
  3787  0492  3001               	movlw	1
  3788  0493  02BA               	subwf	___ftdiv@cntr,f
  3789  0494  1D03               	btfss	3,2
  3790  0495  2C73               	goto	i1l1917
  3791  0496  083B               	movf	___ftdiv@f3,w
  3792  0497  00F0               	movwf	___ftpack@arg
  3793  0498  083C               	movf	___ftdiv@f3+1,w
  3794  0499  00F1               	movwf	___ftpack@arg+1
  3795  049A  083D               	movf	___ftdiv@f3+2,w
  3796  049B  00F2               	movwf	___ftpack@arg+2
  3797  049C  083E               	movf	___ftdiv@exp,w
  3798  049D  00B6               	movwf	??___ftdiv
  3799  049E  0836               	movf	??___ftdiv,w
  3800  049F  00F3               	movwf	___ftpack@exp
  3801  04A0  083F               	movf	___ftdiv@sign,w
  3802  04A1  00B7               	movwf	??___ftdiv+1
  3803  04A2  0837               	movf	??___ftdiv+1,w
  3804  04A3  00F4               	movwf	___ftpack@sign
  3805  04A4  3185  259B         	fcall	___ftpack
  3806  04A6  0870               	movf	?___ftpack,w
  3807  04A7  0020               	movlb	0	; select bank0
  3808  04A8  00B0               	movwf	?___ftdiv
  3809  04A9  0871               	movf	?___ftpack+1,w
  3810  04AA  00B1               	movwf	?___ftdiv+1
  3811  04AB  0872               	movf	?___ftpack+2,w
  3812  04AC  00B2               	movwf	?___ftdiv+2
  3813  04AD  0008               	return
  3814  04AE                     __end_of___ftdiv:	
  3815                           
  3816                           	psect	text22
  3817  0751                     __ptext22:	
  3818 ;; *************** function ___awtoft *****************
  3819 ;; Defined at:
  3820 ;;		line 32 in file "/Applications/microchip/xc8/v1.35/sources/common/awtoft.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  c               2    8[COMMON] int 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  sign            1   13[COMMON] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  3    8[COMMON] float 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0, pclath, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3834 ;;      Params:         3       0       0       0       0       0
  3835 ;;      Locals:         1       0       0       0       0       0
  3836 ;;      Temps:          2       0       0       0       0       0
  3837 ;;      Totals:         6       0       0       0       0       0
  3838 ;;Total ram usage:        6 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    1
  3841 ;; This function calls:
  3842 ;;		___ftpack
  3843 ;; This function is called by:
  3844 ;;		_detectVBattery
  3845 ;;		_putPwrMsg
  3846 ;;		_detectVBattery1
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           
  3851                           ;psect for function ___awtoft
  3852  0751                     ___awtoft:	
  3853                           
  3854                           ;incstack = 0
  3855                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3856  0751  01FD               	clrf	___awtoft@sign
  3857  0752  1FF9               	btfss	___awtoft@c+1,7
  3858  0753  2F5B               	goto	i1l1887
  3859  0754  09F8               	comf	___awtoft@c,f
  3860  0755  09F9               	comf	___awtoft@c+1,f
  3861  0756  0AF8               	incf	___awtoft@c,f
  3862  0757  1903               	skipnz
  3863  0758  0AF9               	incf	___awtoft@c+1,f
  3864  0759  01FD               	clrf	___awtoft@sign
  3865  075A  0AFD               	incf	___awtoft@sign,f
  3866  075B                     i1l1887:	
  3867  075B  0878               	movf	___awtoft@c,w
  3868  075C  00F0               	movwf	___ftpack@arg
  3869  075D  0879               	movf	___awtoft@c+1,w
  3870  075E  00F1               	movwf	___ftpack@arg+1
  3871  075F  01F2               	clrf	___ftpack@arg+2
  3872  0760  308E               	movlw	142
  3873  0761  00FB               	movwf	??___awtoft
  3874  0762  087B               	movf	??___awtoft,w
  3875  0763  00F3               	movwf	___ftpack@exp
  3876  0764  087D               	movf	___awtoft@sign,w
  3877  0765  00FC               	movwf	??___awtoft+1
  3878  0766  087C               	movf	??___awtoft+1,w
  3879  0767  00F4               	movwf	___ftpack@sign
  3880  0768  3185  259B         	fcall	___ftpack
  3881  076A  0870               	movf	?___ftpack,w
  3882  076B  00F8               	movwf	?___awtoft
  3883  076C  0871               	movf	?___ftpack+1,w
  3884  076D  00F9               	movwf	?___awtoft+1
  3885  076E  0872               	movf	?___ftpack+2,w
  3886  076F  00FA               	movwf	?___awtoft+2
  3887  0770  0008               	return
  3888  0771                     __end_of___awtoft:	
  3889                           
  3890                           	psect	text23
  3891  07B9                     __ptext23:	
  3892 ;; *************** function _ADC_GetConversion *****************
  3893 ;; Defined at:
  3894 ;;		line 106 in file "mcc_generated_files/adc.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  channel         1    wreg     enum E2800
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  channel         1    3[COMMON] enum E2800
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  2    0[COMMON] unsigned int 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3908 ;;      Params:         2       0       0       0       0       0
  3909 ;;      Locals:         1       0       0       0       0       0
  3910 ;;      Temps:          1       0       0       0       0       0
  3911 ;;      Totals:         4       0       0       0       0       0
  3912 ;;Total ram usage:        4 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_detectVBattery
  3918 ;;		_detectVBattery1
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           
  3923                           ;psect for function _ADC_GetConversion
  3924  07B9                     _ADC_GetConversion:	
  3925                           
  3926                           ;incstack = 0
  3927                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3928                           ;ADC_GetConversion@channel stored from wreg
  3929  07B9  00F3               	movwf	ADC_GetConversion@channel
  3930                           
  3931                           ;adc.c: 108: ADCON0bits.CHS = channel;
  3932  07BA  0873               	movf	ADC_GetConversion@channel,w
  3933  07BB  00F2               	movwf	??_ADC_GetConversion
  3934  07BC  0DF2               	rlf	??_ADC_GetConversion,f
  3935  07BD  0DF2               	rlf	??_ADC_GetConversion,f
  3936  07BE  0021               	movlb	1	; select bank1
  3937  07BF  081D               	movf	29,w	;volatile
  3938  07C0  0672               	xorwf	??_ADC_GetConversion,w
  3939  07C1  3983               	andlw	-125
  3940  07C2  0672               	xorwf	??_ADC_GetConversion,w
  3941  07C3  009D               	movwf	29	;volatile
  3942                           
  3943                           ;adc.c: 111: ADCON0bits.ADON = 1;
  3944  07C4  141D               	bsf	29,0	;volatile
  3945                           
  3946                           ;adc.c: 117: ADCON0bits.GO_nDONE = 1;
  3947                           
  3948                           ;adc.c: 114: _delay((unsigned long)((5)*(500000/4000000.0)));
  3949  07C5  0021               	movlb	1	; select bank1
  3950  07C6  149D               	bsf	29,1	;volatile
  3951  07C7                     i1l176:	
  3952                           ;adc.c: 120: while (ADCON0bits.GO_nDONE) {
  3953                           
  3954  07C7  189D               	btfsc	29,1	;volatile
  3955  07C8  2FC7               	goto	i1l176
  3956                           
  3957                           ;adc.c: 121: }
  3958                           ;adc.c: 124: return ((ADRESH << 8) + ADRESL);
  3959  07C9  081C               	movf	28,w	;volatile
  3960  07CA  00F1               	movwf	?_ADC_GetConversion+1
  3961  07CB  081B               	movf	27,w	;volatile
  3962  07CC  00F0               	movwf	?_ADC_GetConversion
  3963  07CD  0008               	return
  3964  07CE                     __end_of_ADC_GetConversion:	
  3965                           
  3966                           	psect	text24
  3967  06AA                     __ptext24:	
  3968 ;; *************** function _detectPowerOn *****************
  3969 ;; Defined at:
  3970 ;;		line 99 in file "main.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  EXPOWER         2    4[COMMON] int 
  3975 ;;  POWER           2    2[COMMON] int 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;		None               void
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3985 ;;      Params:         0       0       0       0       0       0
  3986 ;;      Locals:         4       0       0       0       0       0
  3987 ;;      Temps:          2       0       0       0       0       0
  3988 ;;      Totals:         6       0       0       0       0       0
  3989 ;;Total ram usage:        6 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_TMR0_CallBack
  3995 ;;		_putPwrMsg
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           
  4000                           ;psect for function _detectPowerOn
  4001  06AA                     _detectPowerOn:	
  4002                           
  4003                           ;main.c: 100: int POWER = RB0;
  4004                           
  4005                           ;incstack = 0
  4006                           ; Regs used in _detectPowerOn: [wreg+status,2+status,0]
  4007  06AA  1003               	clrc
  4008  06AB  0020               	movlb	0	; select bank0
  4009  06AC  180D               	btfsc	13,0	;volatile
  4010  06AD  1403               	setc
  4011  06AE  3000               	movlw	0
  4012  06AF  3D09               	addwfc	9,w
  4013  06B0  00F0               	movwf	??_detectPowerOn
  4014  06B1  01F1               	clrf	??_detectPowerOn+1
  4015  06B2  0870               	movf	??_detectPowerOn,w
  4016  06B3  00F2               	movwf	detectPowerOn@POWER
  4017  06B4  0871               	movf	??_detectPowerOn+1,w
  4018  06B5  00F3               	movwf	detectPowerOn@POWER+1
  4019                           
  4020                           ;main.c: 101: if (!POWER) {
  4021  06B6  0872               	movf	detectPowerOn@POWER,w
  4022  06B7  0473               	iorwf	detectPowerOn@POWER+1,w
  4023  06B8  1D03               	btfss	3,2
  4024  06B9  2EBC               	goto	i1l1959
  4025                           
  4026                           ;main.c: 102: stPower = 1;
  4027  06BA  01EC               	clrf	_stPower
  4028  06BB  0AEC               	incf	_stPower,f
  4029  06BC                     i1l1959:	
  4030                           ;main.c: 103: } else {
  4031                           
  4032                           
  4033                           ;main.c: 106: }
  4034                           ;main.c: 107: int EXPOWER = RB1;
  4035  06BC  1003               	clrc
  4036  06BD  188D               	btfsc	13,1	;volatile
  4037  06BE  1403               	setc
  4038  06BF  3000               	movlw	0
  4039  06C0  3D09               	addwfc	9,w
  4040  06C1  00F0               	movwf	??_detectPowerOn
  4041  06C2  01F1               	clrf	??_detectPowerOn+1
  4042  06C3  0870               	movf	??_detectPowerOn,w
  4043  06C4  00F4               	movwf	detectPowerOn@EXPOWER
  4044  06C5  0871               	movf	??_detectPowerOn+1,w
  4045  06C6  00F5               	movwf	detectPowerOn@EXPOWER+1
  4046                           
  4047                           ;main.c: 108: if (!EXPOWER) {
  4048  06C7  0874               	movf	detectPowerOn@EXPOWER,w
  4049  06C8  0475               	iorwf	detectPowerOn@EXPOWER+1,w
  4050  06C9  1D03               	btfss	3,2
  4051  06CA  2ECE               	goto	i1l1965
  4052                           
  4053                           ;main.c: 109: stExPower = 1;
  4054  06CB  0021               	movlb	1	; select bank1
  4055  06CC  01AA               	clrf	_stExPower^(0+128)
  4056  06CD  0AAA               	incf	_stExPower^(0+128),f
  4057  06CE                     i1l1965:	
  4058                           
  4059                           ;main.c: 110: }
  4060                           ;main.c: 111: stOff = !stPower;
  4061  06CE  0020               	movlb	0	; select bank0
  4062  06CF  086C               	movf	_stPower,w
  4063  06D0  1D03               	btfss	3,2
  4064  06D1  2ED4               	goto	u174_20
  4065  06D2  3001               	movlw	1
  4066  06D3  2ED5               	goto	u175_20
  4067  06D4                     u174_20:	
  4068  06D4  3000               	movlw	0
  4069  06D5                     u175_20:	
  4070  06D5  00F0               	movwf	??_detectPowerOn
  4071  06D6  0870               	movf	??_detectPowerOn,w
  4072  06D7  0021               	movlb	1	; select bank1
  4073  06D8  00AC               	movwf	_stOff^(0+128)
  4074  06D9  0008               	return
  4075  06DA                     __end_of_detectPowerOn:	
  4076                           
  4077                           	psect	text25
  4078  072D                     __ptext25:	
  4079 ;; *************** function _detectCharge *****************
  4080 ;; Defined at:
  4081 ;;		line 114 in file "main.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  FALT            2    4[COMMON] int 
  4086 ;;  CHRG            2    2[COMMON] int 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;		None               void
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4096 ;;      Params:         0       0       0       0       0       0
  4097 ;;      Locals:         4       0       0       0       0       0
  4098 ;;      Temps:          2       0       0       0       0       0
  4099 ;;      Totals:         6       0       0       0       0       0
  4100 ;;Total ram usage:        6 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_TMR0_CallBack
  4106 ;;		_putPwrMsg
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           
  4111                           ;psect for function _detectCharge
  4112  072D                     _detectCharge:	
  4113                           
  4114                           ;main.c: 115: int CHRG = RB3;
  4115                           
  4116                           ;incstack = 0
  4117                           ; Regs used in _detectCharge: [wreg+status,2+status,0]
  4118  072D  1003               	clrc
  4119  072E  0020               	movlb	0	; select bank0
  4120  072F  198D               	btfsc	13,3	;volatile
  4121  0730  1403               	setc
  4122  0731  3000               	movlw	0
  4123  0732  3D09               	addwfc	9,w
  4124  0733  00F0               	movwf	??_detectCharge
  4125  0734  01F1               	clrf	??_detectCharge+1
  4126  0735  0870               	movf	??_detectCharge,w
  4127  0736  00F2               	movwf	detectCharge@CHRG
  4128  0737  0871               	movf	??_detectCharge+1,w
  4129  0738  00F3               	movwf	detectCharge@CHRG+1
  4130                           
  4131                           ;main.c: 116: int FALT = RB4;
  4132  0739  1003               	clrc
  4133  073A  1A0D               	btfsc	13,4	;volatile
  4134  073B  1403               	setc
  4135  073C  3000               	movlw	0
  4136  073D  3D09               	addwfc	9,w
  4137  073E  00F0               	movwf	??_detectCharge
  4138  073F  01F1               	clrf	??_detectCharge+1
  4139  0740  0870               	movf	??_detectCharge,w
  4140  0741  00F4               	movwf	detectCharge@FALT
  4141  0742  0871               	movf	??_detectCharge+1,w
  4142  0743  00F5               	movwf	detectCharge@FALT+1
  4143                           
  4144                           ;main.c: 117: if (!CHRG) {
  4145  0744  0872               	movf	detectCharge@CHRG,w
  4146  0745  0473               	iorwf	detectCharge@CHRG+1,w
  4147  0746  1D03               	btfss	3,2
  4148  0747  2F4A               	goto	i1l1973
  4149                           
  4150                           ;main.c: 118: stCharge = 1;
  4151  0748  01EA               	clrf	_stCharge
  4152  0749  0AEA               	incf	_stCharge,f
  4153  074A                     i1l1973:	
  4154                           
  4155                           ;main.c: 119: }
  4156                           ;main.c: 120: if (!FALT) {
  4157  074A  0874               	movf	detectCharge@FALT,w
  4158  074B  0475               	iorwf	detectCharge@FALT+1,w
  4159  074C  1D03               	btfss	3,2
  4160  074D  0008               	return
  4161                           
  4162                           ;main.c: 121: stFault = 1;
  4163  074E  01EB               	clrf	_stFault
  4164  074F  0AEB               	incf	_stFault,f
  4165  0750  0008               	return
  4166  0751                     __end_of_detectCharge:	
  4167                           
  4168                           	psect	text26
  4169  04AE                     __ptext26:	
  4170 ;; *************** function ___fttol *****************
  4171 ;; Defined at:
  4172 ;;		line 44 in file "/Applications/microchip/xc8/v1.35/sources/common/fttol.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  f1              3   48[BANK0 ] float 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  lval            4   57[BANK0 ] unsigned long 
  4177 ;;  exp1            1   61[BANK0 ] unsigned char 
  4178 ;;  sign1           1   56[BANK0 ] unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  4   48[BANK0 ] long 
  4181 ;; Registers used:
  4182 ;;		wreg, status,2, status,0
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4188 ;;      Params:         0       4       0       0       0       0
  4189 ;;      Locals:         0       6       0       0       0       0
  4190 ;;      Temps:          0       4       0       0       0       0
  4191 ;;      Totals:         0      14       0       0       0       0
  4192 ;;Total ram usage:       14 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_putPwrMsg
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function ___fttol
  4203  04AE                     ___fttol:	
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4207  04AE  0020               	movlb	0	; select bank0
  4208  04AF  0850               	movf	___fttol@f1,w
  4209  04B0  00D4               	movwf	??___fttol
  4210  04B1  0851               	movf	___fttol@f1+1,w
  4211  04B2  00D5               	movwf	??___fttol+1
  4212  04B3  0852               	movf	___fttol@f1+2,w
  4213  04B4  00D6               	movwf	??___fttol+2
  4214  04B5  1003               	clrc
  4215  04B6  0D55               	rlf	??___fttol+1,w
  4216  04B7  0D56               	rlf	??___fttol+2,w
  4217  04B8  00D7               	movwf	??___fttol+3
  4218  04B9  0857               	movf	??___fttol+3,w
  4219  04BA  00DD               	movwf	___fttol@exp1
  4220  04BB  085D               	movf	___fttol@exp1,w
  4221  04BC  1D03               	btfss	3,2
  4222  04BD  2CC7               	goto	i1l2135
  4223  04BE  3000               	movlw	0
  4224  04BF  00D3               	movwf	?___fttol+3
  4225  04C0  3000               	movlw	0
  4226  04C1  00D2               	movwf	?___fttol+2
  4227  04C2  3000               	movlw	0
  4228  04C3  00D1               	movwf	?___fttol+1
  4229  04C4  3000               	movlw	0
  4230  04C5  00D0               	movwf	?___fttol
  4231  04C6  0008               	return
  4232  04C7                     i1l2135:	
  4233  04C7  0850               	movf	___fttol@f1,w
  4234  04C8  00D4               	movwf	??___fttol
  4235  04C9  0851               	movf	___fttol@f1+1,w
  4236  04CA  00D5               	movwf	??___fttol+1
  4237  04CB  0852               	movf	___fttol@f1+2,w
  4238  04CC  00D6               	movwf	??___fttol+2
  4239  04CD  3017               	movlw	23
  4240  04CE                     u220_25:	
  4241  04CE  36D6               	lsrf	??___fttol+2,f
  4242  04CF  0CD5               	rrf	??___fttol+1,f
  4243  04D0  0CD4               	rrf	??___fttol,f
  4244  04D1  0B89               	decfsz	9,f
  4245  04D2  2CCE               	goto	u220_25
  4246  04D3  0854               	movf	??___fttol,w
  4247  04D4  00D7               	movwf	??___fttol+3
  4248  04D5  0857               	movf	??___fttol+3,w
  4249  04D6  00D8               	movwf	___fttol@sign1
  4250  04D7  17D1               	bsf	___fttol@f1+1,7
  4251  04D8  30FF               	movlw	255
  4252  04D9  05D0               	andwf	___fttol@f1,f
  4253  04DA  30FF               	movlw	255
  4254  04DB  05D1               	andwf	___fttol@f1+1,f
  4255  04DC  3000               	movlw	0
  4256  04DD  05D2               	andwf	___fttol@f1+2,f
  4257  04DE  0850               	movf	___fttol@f1,w
  4258  04DF  00D9               	movwf	___fttol@lval
  4259  04E0  0851               	movf	___fttol@f1+1,w
  4260  04E1  00DA               	movwf	___fttol@lval+1
  4261  04E2  0852               	movf	___fttol@f1+2,w
  4262  04E3  00DB               	movwf	___fttol@lval+2
  4263  04E4  01DC               	clrf	___fttol@lval+3
  4264  04E5  308E               	movlw	142
  4265  04E6  02DD               	subwf	___fttol@exp1,f
  4266  04E7  1FDD               	btfss	___fttol@exp1,7
  4267  04E8  2D05               	goto	i1l2155
  4268  04E9  085D               	movf	___fttol@exp1,w
  4269  04EA  3A80               	xorlw	128
  4270  04EB  3E8F               	addlw	143
  4271  04EC  1803               	skipnc
  4272  04ED  2CF7               	goto	i1l2153
  4273  04EE  3000               	movlw	0
  4274  04EF  00D3               	movwf	?___fttol+3
  4275  04F0  3000               	movlw	0
  4276  04F1  00D2               	movwf	?___fttol+2
  4277  04F2  3000               	movlw	0
  4278  04F3  00D1               	movwf	?___fttol+1
  4279  04F4  3000               	movlw	0
  4280  04F5  00D0               	movwf	?___fttol
  4281  04F6  0008               	return
  4282  04F7                     i1l2153:	
  4283  04F7  3001               	movlw	1
  4284  04F8                     u223_25:	
  4285  04F8  36DC               	lsrf	___fttol@lval+3,f
  4286  04F9  0CDB               	rrf	___fttol@lval+2,f
  4287  04FA  0CDA               	rrf	___fttol@lval+1,f
  4288  04FB  0CD9               	rrf	___fttol@lval,f
  4289  04FC  0B89               	decfsz	9,f
  4290  04FD  2CF8               	goto	u223_25
  4291  04FE  3001               	movlw	1
  4292  04FF  00D4               	movwf	??___fttol
  4293  0500  0854               	movf	??___fttol,w
  4294  0501  07DD               	addwf	___fttol@exp1,f
  4295  0502  1903               	btfsc	3,2
  4296  0503  2D1E               	goto	i1l2163
  4297  0504  2CF7               	goto	i1l2153
  4298  0505                     i1l2155:	
  4299  0505  3018               	movlw	24
  4300  0506  025D               	subwf	___fttol@exp1,w
  4301  0507  1C03               	skipc
  4302  0508  2D1B               	goto	i1l841
  4303  0509  3000               	movlw	0
  4304  050A  00D3               	movwf	?___fttol+3
  4305  050B  3000               	movlw	0
  4306  050C  00D2               	movwf	?___fttol+2
  4307  050D  3000               	movlw	0
  4308  050E  00D1               	movwf	?___fttol+1
  4309  050F  3000               	movlw	0
  4310  0510  00D0               	movwf	?___fttol
  4311  0511  0008               	return
  4312  0512                     i1l2161:	
  4313  0512  3001               	movlw	1
  4314  0513                     u226_25:	
  4315  0513  35D9               	lslf	___fttol@lval,f
  4316  0514  0DDA               	rlf	___fttol@lval+1,f
  4317  0515  0DDB               	rlf	___fttol@lval+2,f
  4318  0516  0DDC               	rlf	___fttol@lval+3,f
  4319  0517  0B89               	decfsz	9,f
  4320  0518  2D13               	goto	u226_25
  4321  0519  3001               	movlw	1
  4322  051A  02DD               	subwf	___fttol@exp1,f
  4323  051B                     i1l841:	
  4324  051B  085D               	movf	___fttol@exp1,w
  4325  051C  1D03               	btfss	3,2
  4326  051D  2D12               	goto	i1l2161
  4327  051E                     i1l2163:	
  4328  051E  0858               	movf	___fttol@sign1,w
  4329  051F  1903               	btfsc	3,2
  4330  0520  2D2C               	goto	i1l2167
  4331  0521  09D9               	comf	___fttol@lval,f
  4332  0522  09DA               	comf	___fttol@lval+1,f
  4333  0523  09DB               	comf	___fttol@lval+2,f
  4334  0524  09DC               	comf	___fttol@lval+3,f
  4335  0525  0AD9               	incf	___fttol@lval,f
  4336  0526  1903               	skipnz
  4337  0527  0ADA               	incf	___fttol@lval+1,f
  4338  0528  1903               	skipnz
  4339  0529  0ADB               	incf	___fttol@lval+2,f
  4340  052A  1903               	skipnz
  4341  052B  0ADC               	incf	___fttol@lval+3,f
  4342  052C                     i1l2167:	
  4343  052C  085C               	movf	___fttol@lval+3,w
  4344  052D  00D3               	movwf	?___fttol+3
  4345  052E  085B               	movf	___fttol@lval+2,w
  4346  052F  00D2               	movwf	?___fttol+2
  4347  0530  085A               	movf	___fttol@lval+1,w
  4348  0531  00D1               	movwf	?___fttol+1
  4349  0532  0859               	movf	___fttol@lval,w
  4350  0533  00D0               	movwf	?___fttol
  4351  0534  0008               	return
  4352  0535                     __end_of___fttol:	
  4353                           
  4354                           	psect	text27
  4355  0FAE                     __ptext27:	
  4356 ;; *************** function ___ftneg *****************
  4357 ;; Defined at:
  4358 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/ftneg.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  f1              3    0[BANK0 ] float 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  3    0[BANK0 ] float 
  4365 ;; Registers used:
  4366 ;;		wreg
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4372 ;;      Params:         0       3       0       0       0       0
  4373 ;;      Locals:         0       0       0       0       0       0
  4374 ;;      Temps:          0       0       0       0       0       0
  4375 ;;      Totals:         0       3       0       0       0       0
  4376 ;;Total ram usage:        3 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_putPwrMsg
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           
  4386                           ;psect for function ___ftneg
  4387  0FAE                     ___ftneg:	
  4388                           
  4389                           ;incstack = 0
  4390                           ; Regs used in ___ftneg: [wreg]
  4391  0FAE  0020               	movlb	0	; select bank0
  4392  0FAF  0822               	movf	___ftneg@f1+2,w
  4393  0FB0  0421               	iorwf	___ftneg@f1+1,w
  4394  0FB1  0420               	iorwf	___ftneg@f1,w
  4395  0FB2  1903               	skipnz
  4396  0FB3  0008               	return
  4397  0FB4  3080               	movlw	128
  4398  0FB5  06A2               	xorwf	___ftneg@f1+2,f
  4399  0FB6  0008               	return
  4400  0FB7                     __end_of___ftneg:	
  4401                           
  4402                           	psect	text28
  4403  0351                     __ptext28:	
  4404 ;; *************** function ___ftmul *****************
  4405 ;; Defined at:
  4406 ;;		line 62 in file "/Applications/microchip/xc8/v1.35/sources/common/ftmul.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  f1              3   32[BANK0 ] float 
  4409 ;;  f2              3   35[BANK0 ] float 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;  f3_as_produc    3   43[BANK0 ] unsigned um
  4412 ;;  sign            1   47[BANK0 ] unsigned char 
  4413 ;;  cntr            1   46[BANK0 ] unsigned char 
  4414 ;;  exp             1   42[BANK0 ] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  3   32[BANK0 ] float 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0, pclath, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4424 ;;      Params:         0       6       0       0       0       0
  4425 ;;      Locals:         0       6       0       0       0       0
  4426 ;;      Temps:          0       4       0       0       0       0
  4427 ;;      Totals:         0      16       0       0       0       0
  4428 ;;Total ram usage:       16 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    1
  4431 ;; This function calls:
  4432 ;;		___ftpack
  4433 ;; This function is called by:
  4434 ;;		_putPwrMsg
  4435 ;;		_detectVBattery1
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           
  4440                           ;psect for function ___ftmul
  4441  0351                     ___ftmul:	
  4442                           
  4443                           ;incstack = 0
  4444                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4445  0351  0020               	movlb	0	; select bank0
  4446  0352  0840               	movf	___ftmul@f1,w
  4447  0353  00C6               	movwf	??___ftmul
  4448  0354  0841               	movf	___ftmul@f1+1,w
  4449  0355  00C7               	movwf	??___ftmul+1
  4450  0356  0842               	movf	___ftmul@f1+2,w
  4451  0357  00C8               	movwf	??___ftmul+2
  4452  0358  1003               	clrc
  4453  0359  0D47               	rlf	??___ftmul+1,w
  4454  035A  0D48               	rlf	??___ftmul+2,w
  4455  035B  00C9               	movwf	??___ftmul+3
  4456  035C  0849               	movf	??___ftmul+3,w
  4457  035D  00CA               	movwf	___ftmul@exp
  4458  035E  084A               	movf	___ftmul@exp,w
  4459  035F  1D03               	btfss	3,2
  4460  0360  2B68               	goto	i1l2077
  4461  0361  3000               	movlw	0
  4462  0362  00C0               	movwf	?___ftmul
  4463  0363  3000               	movlw	0
  4464  0364  00C1               	movwf	?___ftmul+1
  4465  0365  3000               	movlw	0
  4466  0366  00C2               	movwf	?___ftmul+2
  4467  0367  0008               	return
  4468  0368                     i1l2077:	
  4469  0368  0843               	movf	___ftmul@f2,w
  4470  0369  00C6               	movwf	??___ftmul
  4471  036A  0844               	movf	___ftmul@f2+1,w
  4472  036B  00C7               	movwf	??___ftmul+1
  4473  036C  0845               	movf	___ftmul@f2+2,w
  4474  036D  00C8               	movwf	??___ftmul+2
  4475  036E  1003               	clrc
  4476  036F  0D47               	rlf	??___ftmul+1,w
  4477  0370  0D48               	rlf	??___ftmul+2,w
  4478  0371  00C9               	movwf	??___ftmul+3
  4479  0372  0849               	movf	??___ftmul+3,w
  4480  0373  00CF               	movwf	___ftmul@sign
  4481  0374  084F               	movf	___ftmul@sign,w
  4482  0375  1D03               	btfss	3,2
  4483  0376  2B7E               	goto	i1l2083
  4484  0377  3000               	movlw	0
  4485  0378  00C0               	movwf	?___ftmul
  4486  0379  3000               	movlw	0
  4487  037A  00C1               	movwf	?___ftmul+1
  4488  037B  3000               	movlw	0
  4489  037C  00C2               	movwf	?___ftmul+2
  4490  037D  0008               	return
  4491  037E                     i1l2083:	
  4492  037E  084F               	movf	___ftmul@sign,w
  4493  037F  3E7B               	addlw	123
  4494  0380  00C6               	movwf	??___ftmul
  4495  0381  0846               	movf	??___ftmul,w
  4496  0382  07CA               	addwf	___ftmul@exp,f
  4497  0383  0840               	movf	___ftmul@f1,w
  4498  0384  00C6               	movwf	??___ftmul
  4499  0385  0841               	movf	___ftmul@f1+1,w
  4500  0386  00C7               	movwf	??___ftmul+1
  4501  0387  0842               	movf	___ftmul@f1+2,w
  4502  0388  00C8               	movwf	??___ftmul+2
  4503  0389  3010               	movlw	16
  4504  038A                     u208_25:	
  4505  038A  36C8               	lsrf	??___ftmul+2,f
  4506  038B  0CC7               	rrf	??___ftmul+1,f
  4507  038C  0CC6               	rrf	??___ftmul,f
  4508  038D  0B89               	decfsz	9,f
  4509  038E  2B8A               	goto	u208_25
  4510  038F  0846               	movf	??___ftmul,w
  4511  0390  00C9               	movwf	??___ftmul+3
  4512  0391  0849               	movf	??___ftmul+3,w
  4513  0392  00CF               	movwf	___ftmul@sign
  4514  0393  0843               	movf	___ftmul@f2,w
  4515  0394  00C6               	movwf	??___ftmul
  4516  0395  0844               	movf	___ftmul@f2+1,w
  4517  0396  00C7               	movwf	??___ftmul+1
  4518  0397  0845               	movf	___ftmul@f2+2,w
  4519  0398  00C8               	movwf	??___ftmul+2
  4520  0399  3010               	movlw	16
  4521  039A                     u209_25:	
  4522  039A  36C8               	lsrf	??___ftmul+2,f
  4523  039B  0CC7               	rrf	??___ftmul+1,f
  4524  039C  0CC6               	rrf	??___ftmul,f
  4525  039D  0B89               	decfsz	9,f
  4526  039E  2B9A               	goto	u209_25
  4527  039F  0846               	movf	??___ftmul,w
  4528  03A0  00C9               	movwf	??___ftmul+3
  4529  03A1  0849               	movf	??___ftmul+3,w
  4530  03A2  06CF               	xorwf	___ftmul@sign,f
  4531  03A3  3080               	movlw	128
  4532  03A4  00C6               	movwf	??___ftmul
  4533  03A5  0846               	movf	??___ftmul,w
  4534  03A6  05CF               	andwf	___ftmul@sign,f
  4535  03A7  17C1               	bsf	___ftmul@f1+1,7
  4536  03A8  17C4               	bsf	___ftmul@f2+1,7
  4537  03A9  30FF               	movlw	255
  4538  03AA  05C3               	andwf	___ftmul@f2,f
  4539  03AB  30FF               	movlw	255
  4540  03AC  05C4               	andwf	___ftmul@f2+1,f
  4541  03AD  3000               	movlw	0
  4542  03AE  05C5               	andwf	___ftmul@f2+2,f
  4543  03AF  3000               	movlw	0
  4544  03B0  00CB               	movwf	___ftmul@f3_as_product
  4545  03B1  3000               	movlw	0
  4546  03B2  00CC               	movwf	___ftmul@f3_as_product+1
  4547  03B3  3000               	movlw	0
  4548  03B4  00CD               	movwf	___ftmul@f3_as_product+2
  4549  03B5  3007               	movlw	7
  4550  03B6  00C6               	movwf	??___ftmul
  4551  03B7  0846               	movf	??___ftmul,w
  4552  03B8  00CE               	movwf	___ftmul@cntr
  4553  03B9                     i1l2095:	
  4554  03B9  1C40               	btfss	___ftmul@f1,0
  4555  03BA  2BC1               	goto	i1l2099
  4556  03BB  0843               	movf	___ftmul@f2,w
  4557  03BC  07CB               	addwf	___ftmul@f3_as_product,f
  4558  03BD  0844               	movf	___ftmul@f2+1,w
  4559  03BE  3DCC               	addwfc	___ftmul@f3_as_product+1,f
  4560  03BF  0845               	movf	___ftmul@f2+2,w
  4561  03C0  3DCD               	addwfc	___ftmul@f3_as_product+2,f
  4562  03C1                     i1l2099:	
  4563  03C1  3001               	movlw	1
  4564  03C2                     u211_25:	
  4565  03C2  36C2               	lsrf	___ftmul@f1+2,f
  4566  03C3  0CC1               	rrf	___ftmul@f1+1,f
  4567  03C4  0CC0               	rrf	___ftmul@f1,f
  4568  03C5  0B89               	decfsz	9,f
  4569  03C6  2BC2               	goto	u211_25
  4570  03C7  3001               	movlw	1
  4571  03C8                     u212_25:	
  4572  03C8  35C3               	lslf	___ftmul@f2,f
  4573  03C9  0DC4               	rlf	___ftmul@f2+1,f
  4574  03CA  0DC5               	rlf	___ftmul@f2+2,f
  4575  03CB  0B89               	decfsz	9,f
  4576  03CC  2BC8               	goto	u212_25
  4577  03CD  3001               	movlw	1
  4578  03CE  02CE               	subwf	___ftmul@cntr,f
  4579  03CF  1D03               	btfss	3,2
  4580  03D0  2BB9               	goto	i1l2095
  4581  03D1  3009               	movlw	9
  4582  03D2  00C6               	movwf	??___ftmul
  4583  03D3  0846               	movf	??___ftmul,w
  4584  03D4  00CE               	movwf	___ftmul@cntr
  4585  03D5                     i1l2107:	
  4586  03D5  1C40               	btfss	___ftmul@f1,0
  4587  03D6  2BDD               	goto	i1l2111
  4588  03D7  0843               	movf	___ftmul@f2,w
  4589  03D8  07CB               	addwf	___ftmul@f3_as_product,f
  4590  03D9  0844               	movf	___ftmul@f2+1,w
  4591  03DA  3DCC               	addwfc	___ftmul@f3_as_product+1,f
  4592  03DB  0845               	movf	___ftmul@f2+2,w
  4593  03DC  3DCD               	addwfc	___ftmul@f3_as_product+2,f
  4594  03DD                     i1l2111:	
  4595  03DD  3001               	movlw	1
  4596  03DE                     u215_25:	
  4597  03DE  36C2               	lsrf	___ftmul@f1+2,f
  4598  03DF  0CC1               	rrf	___ftmul@f1+1,f
  4599  03E0  0CC0               	rrf	___ftmul@f1,f
  4600  03E1  0B89               	decfsz	9,f
  4601  03E2  2BDE               	goto	u215_25
  4602  03E3  3001               	movlw	1
  4603  03E4                     u216_25:	
  4604  03E4  36CD               	lsrf	___ftmul@f3_as_product+2,f
  4605  03E5  0CCC               	rrf	___ftmul@f3_as_product+1,f
  4606  03E6  0CCB               	rrf	___ftmul@f3_as_product,f
  4607  03E7  0B89               	decfsz	9,f
  4608  03E8  2BE4               	goto	u216_25
  4609  03E9  3001               	movlw	1
  4610  03EA  02CE               	subwf	___ftmul@cntr,f
  4611  03EB  1D03               	btfss	3,2
  4612  03EC  2BD5               	goto	i1l2107
  4613  03ED  084B               	movf	___ftmul@f3_as_product,w
  4614  03EE  00F0               	movwf	___ftpack@arg
  4615  03EF  084C               	movf	___ftmul@f3_as_product+1,w
  4616  03F0  00F1               	movwf	___ftpack@arg+1
  4617  03F1  084D               	movf	___ftmul@f3_as_product+2,w
  4618  03F2  00F2               	movwf	___ftpack@arg+2
  4619  03F3  084A               	movf	___ftmul@exp,w
  4620  03F4  00C6               	movwf	??___ftmul
  4621  03F5  0846               	movf	??___ftmul,w
  4622  03F6  00F3               	movwf	___ftpack@exp
  4623  03F7  084F               	movf	___ftmul@sign,w
  4624  03F8  00C7               	movwf	??___ftmul+1
  4625  03F9  0847               	movf	??___ftmul+1,w
  4626  03FA  00F4               	movwf	___ftpack@sign
  4627  03FB  3185  259B         	fcall	___ftpack
  4628  03FD  0870               	movf	?___ftpack,w
  4629  03FE  0020               	movlb	0	; select bank0
  4630  03FF  00C0               	movwf	?___ftmul
  4631  0400  0871               	movf	?___ftpack+1,w
  4632  0401  00C1               	movwf	?___ftmul+1
  4633  0402  0872               	movf	?___ftpack+2,w
  4634  0403  00C2               	movwf	?___ftmul+2
  4635  0404  0008               	return
  4636  0405                     __end_of___ftmul:	
  4637                           
  4638                           	psect	text29
  4639  01A0                     __ptext29:	
  4640 ;; *************** function ___ftadd *****************
  4641 ;; Defined at:
  4642 ;;		line 86 in file "/Applications/microchip/xc8/v1.35/sources/common/ftadd.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  f1              3    3[BANK0 ] float 
  4645 ;;  f2              3    6[BANK0 ] float 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  exp1            1   15[BANK0 ] unsigned char 
  4648 ;;  exp2            1   14[BANK0 ] unsigned char 
  4649 ;;  sign            1   13[BANK0 ] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  3    3[BANK0 ] float 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0, pclath, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4659 ;;      Params:         0       6       0       0       0       0
  4660 ;;      Locals:         0       3       0       0       0       0
  4661 ;;      Temps:          0       4       0       0       0       0
  4662 ;;      Totals:         0      13       0       0       0       0
  4663 ;;Total ram usage:       13 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    1
  4666 ;; This function calls:
  4667 ;;		___ftpack
  4668 ;; This function is called by:
  4669 ;;		_putPwrMsg
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           
  4674                           ;psect for function ___ftadd
  4675  01A0                     ___ftadd:	
  4676                           
  4677                           ;incstack = 0
  4678                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4679  01A0  0020               	movlb	0	; select bank0
  4680  01A1  0823               	movf	___ftadd@f1,w
  4681  01A2  00A9               	movwf	??___ftadd
  4682  01A3  0824               	movf	___ftadd@f1+1,w
  4683  01A4  00AA               	movwf	??___ftadd+1
  4684  01A5  0825               	movf	___ftadd@f1+2,w
  4685  01A6  00AB               	movwf	??___ftadd+2
  4686  01A7  1003               	clrc
  4687  01A8  0D2A               	rlf	??___ftadd+1,w
  4688  01A9  0D2B               	rlf	??___ftadd+2,w
  4689  01AA  00AC               	movwf	??___ftadd+3
  4690  01AB  082C               	movf	??___ftadd+3,w
  4691  01AC  00AF               	movwf	___ftadd@exp1
  4692  01AD  0826               	movf	___ftadd@f2,w
  4693  01AE  00A9               	movwf	??___ftadd
  4694  01AF  0827               	movf	___ftadd@f2+1,w
  4695  01B0  00AA               	movwf	??___ftadd+1
  4696  01B1  0828               	movf	___ftadd@f2+2,w
  4697  01B2  00AB               	movwf	??___ftadd+2
  4698  01B3  1003               	clrc
  4699  01B4  0D2A               	rlf	??___ftadd+1,w
  4700  01B5  0D2B               	rlf	??___ftadd+2,w
  4701  01B6  00AC               	movwf	??___ftadd+3
  4702  01B7  082C               	movf	??___ftadd+3,w
  4703  01B8  00AE               	movwf	___ftadd@exp2
  4704  01B9  082F               	movf	___ftadd@exp1,w
  4705  01BA  1903               	btfsc	3,2
  4706  01BB  29C8               	goto	i1l2007
  4707  01BC  082E               	movf	___ftadd@exp2,w
  4708  01BD  022F               	subwf	___ftadd@exp1,w
  4709  01BE  1803               	skipnc
  4710  01BF  29CF               	goto	i1l2011
  4711  01C0  032F               	decf	___ftadd@exp1,w
  4712  01C1  3AFF               	xorlw	255
  4713  01C2  072E               	addwf	___ftadd@exp2,w
  4714  01C3  00A9               	movwf	??___ftadd
  4715  01C4  3019               	movlw	25
  4716  01C5  0229               	subwf	??___ftadd,w
  4717  01C6  1C03               	skipc
  4718  01C7  29CF               	goto	i1l2011
  4719  01C8                     i1l2007:	
  4720  01C8  0826               	movf	___ftadd@f2,w
  4721  01C9  00A3               	movwf	?___ftadd
  4722  01CA  0827               	movf	___ftadd@f2+1,w
  4723  01CB  00A4               	movwf	?___ftadd+1
  4724  01CC  0828               	movf	___ftadd@f2+2,w
  4725  01CD  00A5               	movwf	?___ftadd+2
  4726  01CE  0008               	return
  4727  01CF                     i1l2011:	
  4728  01CF  082E               	movf	___ftadd@exp2,w
  4729  01D0  1903               	btfsc	3,2
  4730  01D1  0008               	return
  4731  01D2  082F               	movf	___ftadd@exp1,w
  4732  01D3  022E               	subwf	___ftadd@exp2,w
  4733  01D4  1803               	skipnc
  4734  01D5  29DE               	goto	i1l2017
  4735  01D6  032E               	decf	___ftadd@exp2,w
  4736  01D7  3AFF               	xorlw	255
  4737  01D8  072F               	addwf	___ftadd@exp1,w
  4738  01D9  00A9               	movwf	??___ftadd
  4739  01DA  3019               	movlw	25
  4740  01DB  0229               	subwf	??___ftadd,w
  4741  01DC  1803               	btfsc	3,0
  4742  01DD  0008               	return
  4743  01DE                     i1l2017:	
  4744  01DE  3006               	movlw	6
  4745  01DF  00A9               	movwf	??___ftadd
  4746  01E0  0829               	movf	??___ftadd,w
  4747  01E1  00AD               	movwf	___ftadd@sign
  4748  01E2  1BA5               	btfsc	___ftadd@f1+2,7
  4749  01E3  17AD               	bsf	___ftadd@sign,7
  4750  01E4  1BA8               	btfsc	___ftadd@f2+2,7
  4751  01E5  172D               	bsf	___ftadd@sign,6
  4752  01E6  17A4               	bsf	___ftadd@f1+1,7
  4753  01E7  30FF               	movlw	255
  4754  01E8  05A3               	andwf	___ftadd@f1,f
  4755  01E9  30FF               	movlw	255
  4756  01EA  05A4               	andwf	___ftadd@f1+1,f
  4757  01EB  3000               	movlw	0
  4758  01EC  05A5               	andwf	___ftadd@f1+2,f
  4759  01ED  17A7               	bsf	___ftadd@f2+1,7
  4760  01EE  30FF               	movlw	255
  4761  01EF  05A6               	andwf	___ftadd@f2,f
  4762  01F0  30FF               	movlw	255
  4763  01F1  05A7               	andwf	___ftadd@f2+1,f
  4764  01F2  3000               	movlw	0
  4765  01F3  05A8               	andwf	___ftadd@f2+2,f
  4766  01F4  082E               	movf	___ftadd@exp2,w
  4767  01F5  022F               	subwf	___ftadd@exp1,w
  4768  01F6  1803               	skipnc
  4769  01F7  2A1A               	goto	i1l2039
  4770  01F8                     i1l2029:	
  4771  01F8  3001               	movlw	1
  4772  01F9                     u192_25:	
  4773  01F9  35A6               	lslf	___ftadd@f2,f
  4774  01FA  0DA7               	rlf	___ftadd@f2+1,f
  4775  01FB  0DA8               	rlf	___ftadd@f2+2,f
  4776  01FC  0B89               	decfsz	9,f
  4777  01FD  29F9               	goto	u192_25
  4778  01FE  3001               	movlw	1
  4779  01FF  02AE               	subwf	___ftadd@exp2,f
  4780  0200  082E               	movf	___ftadd@exp2,w
  4781  0201  062F               	xorwf	___ftadd@exp1,w
  4782  0202  1903               	skipnz
  4783  0203  2A15               	goto	i1l2037
  4784  0204  3001               	movlw	1
  4785  0205  02AD               	subwf	___ftadd@sign,f
  4786  0206  082D               	movf	___ftadd@sign,w
  4787  0207  3907               	andlw	7
  4788  0208  1903               	btfsc	3,2
  4789  0209  2A15               	goto	i1l2037
  4790  020A  29F8               	goto	i1l2029
  4791  020B                     i1l2035:	
  4792  020B  3001               	movlw	1
  4793  020C                     u195_25:	
  4794  020C  36A5               	lsrf	___ftadd@f1+2,f
  4795  020D  0CA4               	rrf	___ftadd@f1+1,f
  4796  020E  0CA3               	rrf	___ftadd@f1,f
  4797  020F  0B89               	decfsz	9,f
  4798  0210  2A0C               	goto	u195_25
  4799  0211  3001               	movlw	1
  4800  0212  00A9               	movwf	??___ftadd
  4801  0213  0829               	movf	??___ftadd,w
  4802  0214  07AF               	addwf	___ftadd@exp1,f
  4803  0215                     i1l2037:	
  4804  0215  082F               	movf	___ftadd@exp1,w
  4805  0216  062E               	xorwf	___ftadd@exp2,w
  4806  0217  1903               	btfsc	3,2
  4807  0218  2A3F               	goto	i1l781
  4808  0219  2A0B               	goto	i1l2035
  4809  021A                     i1l2039:	
  4810  021A  082F               	movf	___ftadd@exp1,w
  4811  021B  022E               	subwf	___ftadd@exp2,w
  4812  021C  1803               	skipnc
  4813  021D  2A3F               	goto	i1l781
  4814  021E                     i1l2041:	
  4815  021E  3001               	movlw	1
  4816  021F                     u198_25:	
  4817  021F  35A3               	lslf	___ftadd@f1,f
  4818  0220  0DA4               	rlf	___ftadd@f1+1,f
  4819  0221  0DA5               	rlf	___ftadd@f1+2,f
  4820  0222  0B89               	decfsz	9,f
  4821  0223  2A1F               	goto	u198_25
  4822  0224  3001               	movlw	1
  4823  0225  02AF               	subwf	___ftadd@exp1,f
  4824  0226  082E               	movf	___ftadd@exp2,w
  4825  0227  062F               	xorwf	___ftadd@exp1,w
  4826  0228  1903               	skipnz
  4827  0229  2A3B               	goto	i1l2049
  4828  022A  3001               	movlw	1
  4829  022B  02AD               	subwf	___ftadd@sign,f
  4830  022C  082D               	movf	___ftadd@sign,w
  4831  022D  3907               	andlw	7
  4832  022E  1903               	btfsc	3,2
  4833  022F  2A3B               	goto	i1l2049
  4834  0230  2A1E               	goto	i1l2041
  4835  0231                     i1l2047:	
  4836  0231  3001               	movlw	1
  4837  0232                     u201_25:	
  4838  0232  36A8               	lsrf	___ftadd@f2+2,f
  4839  0233  0CA7               	rrf	___ftadd@f2+1,f
  4840  0234  0CA6               	rrf	___ftadd@f2,f
  4841  0235  0B89               	decfsz	9,f
  4842  0236  2A32               	goto	u201_25
  4843  0237  3001               	movlw	1
  4844  0238  00A9               	movwf	??___ftadd
  4845  0239  0829               	movf	??___ftadd,w
  4846  023A  07AE               	addwf	___ftadd@exp2,f
  4847  023B                     i1l2049:	
  4848  023B  082F               	movf	___ftadd@exp1,w
  4849  023C  062E               	xorwf	___ftadd@exp2,w
  4850  023D  1D03               	skipz
  4851  023E  2A31               	goto	i1l2047
  4852  023F                     i1l781:	
  4853  023F  1FAD               	btfss	___ftadd@sign,7
  4854  0240  2A51               	goto	i1l2053
  4855  0241  30FF               	movlw	255
  4856  0242  06A3               	xorwf	___ftadd@f1,f
  4857  0243  30FF               	movlw	255
  4858  0244  06A4               	xorwf	___ftadd@f1+1,f
  4859  0245  30FF               	movlw	255
  4860  0246  06A5               	xorwf	___ftadd@f1+2,f
  4861  0247  3001               	movlw	1
  4862  0248  07A3               	addwf	___ftadd@f1,f
  4863  0249  3000               	movlw	0
  4864  024A  1803               	skipnc
  4865  024B  3001               	movlw	1
  4866  024C  07A4               	addwf	___ftadd@f1+1,f
  4867  024D  3000               	movlw	0
  4868  024E  1803               	skipnc
  4869  024F  3001               	movlw	1
  4870  0250  07A5               	addwf	___ftadd@f1+2,f
  4871  0251                     i1l2053:	
  4872  0251  1F2D               	btfss	___ftadd@sign,6
  4873  0252  2A63               	goto	i1l2057
  4874  0253  30FF               	movlw	255
  4875  0254  06A6               	xorwf	___ftadd@f2,f
  4876  0255  30FF               	movlw	255
  4877  0256  06A7               	xorwf	___ftadd@f2+1,f
  4878  0257  30FF               	movlw	255
  4879  0258  06A8               	xorwf	___ftadd@f2+2,f
  4880  0259  3001               	movlw	1
  4881  025A  07A6               	addwf	___ftadd@f2,f
  4882  025B  3000               	movlw	0
  4883  025C  1803               	skipnc
  4884  025D  3001               	movlw	1
  4885  025E  07A7               	addwf	___ftadd@f2+1,f
  4886  025F  3000               	movlw	0
  4887  0260  1803               	skipnc
  4888  0261  3001               	movlw	1
  4889  0262  07A8               	addwf	___ftadd@f2+2,f
  4890  0263                     i1l2057:	
  4891  0263  01AD               	clrf	___ftadd@sign
  4892  0264  0823               	movf	___ftadd@f1,w
  4893  0265  07A6               	addwf	___ftadd@f2,f
  4894  0266  0824               	movf	___ftadd@f1+1,w
  4895  0267  3DA7               	addwfc	___ftadd@f2+1,f
  4896  0268  0825               	movf	___ftadd@f1+2,w
  4897  0269  3DA8               	addwfc	___ftadd@f2+2,f
  4898  026A  1FA8               	btfss	___ftadd@f2+2,7
  4899  026B  2A7E               	goto	i1l2067
  4900  026C  30FF               	movlw	255
  4901  026D  06A6               	xorwf	___ftadd@f2,f
  4902  026E  30FF               	movlw	255
  4903  026F  06A7               	xorwf	___ftadd@f2+1,f
  4904  0270  30FF               	movlw	255
  4905  0271  06A8               	xorwf	___ftadd@f2+2,f
  4906  0272  3001               	movlw	1
  4907  0273  07A6               	addwf	___ftadd@f2,f
  4908  0274  3000               	movlw	0
  4909  0275  1803               	skipnc
  4910  0276  3001               	movlw	1
  4911  0277  07A7               	addwf	___ftadd@f2+1,f
  4912  0278  3000               	movlw	0
  4913  0279  1803               	skipnc
  4914  027A  3001               	movlw	1
  4915  027B  07A8               	addwf	___ftadd@f2+2,f
  4916  027C  01AD               	clrf	___ftadd@sign
  4917  027D  0AAD               	incf	___ftadd@sign,f
  4918  027E                     i1l2067:	
  4919  027E  0826               	movf	___ftadd@f2,w
  4920  027F  00F0               	movwf	___ftpack@arg
  4921  0280  0827               	movf	___ftadd@f2+1,w
  4922  0281  00F1               	movwf	___ftpack@arg+1
  4923  0282  0828               	movf	___ftadd@f2+2,w
  4924  0283  00F2               	movwf	___ftpack@arg+2
  4925  0284  082F               	movf	___ftadd@exp1,w
  4926  0285  00A9               	movwf	??___ftadd
  4927  0286  0829               	movf	??___ftadd,w
  4928  0287  00F3               	movwf	___ftpack@exp
  4929  0288  082D               	movf	___ftadd@sign,w
  4930  0289  00AA               	movwf	??___ftadd+1
  4931  028A  082A               	movf	??___ftadd+1,w
  4932  028B  00F4               	movwf	___ftpack@sign
  4933  028C  3185  259B         	fcall	___ftpack
  4934  028E  0870               	movf	?___ftpack,w
  4935  028F  0020               	movlb	0	; select bank0
  4936  0290  00A3               	movwf	?___ftadd
  4937  0291  0871               	movf	?___ftpack+1,w
  4938  0292  00A4               	movwf	?___ftadd+1
  4939  0293  0872               	movf	?___ftpack+2,w
  4940  0294  00A5               	movwf	?___ftadd+2
  4941  0295  0008               	return
  4942  0296                     __end_of___ftadd:	
  4943                           
  4944                           	psect	text30
  4945  059B                     __ptext30:	
  4946 ;; *************** function ___ftpack *****************
  4947 ;; Defined at:
  4948 ;;		line 62 in file "/Applications/microchip/xc8/v1.35/sources/common/float.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  arg             3    0[COMMON] unsigned um
  4951 ;;  exp             1    3[COMMON] unsigned char 
  4952 ;;  sign            1    4[COMMON] unsigned char 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  3    0[COMMON] float 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4964 ;;      Params:         5       0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0
  4966 ;;      Temps:          3       0       0       0       0       0
  4967 ;;      Totals:         8       0       0       0       0       0
  4968 ;;Total ram usage:        8 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		___awtoft
  4974 ;;		___ftadd
  4975 ;;		___ftdiv
  4976 ;;		___ftmul
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           
  4981                           ;psect for function ___ftpack
  4982  059B                     ___ftpack:	
  4983                           
  4984                           ;incstack = 0
  4985                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4986  059B  0873               	movf	___ftpack@exp,w
  4987  059C  1903               	btfsc	3,2
  4988  059D  2DA3               	goto	i1l1839
  4989  059E  0872               	movf	___ftpack@arg+2,w
  4990  059F  0471               	iorwf	___ftpack@arg+1,w
  4991  05A0  0470               	iorwf	___ftpack@arg,w
  4992  05A1  1D03               	skipz
  4993  05A2  2DB4               	goto	i1l1845
  4994  05A3                     i1l1839:	
  4995  05A3  3000               	movlw	0
  4996  05A4  00F0               	movwf	?___ftpack
  4997  05A5  3000               	movlw	0
  4998  05A6  00F1               	movwf	?___ftpack+1
  4999  05A7  3000               	movlw	0
  5000  05A8  00F2               	movwf	?___ftpack+2
  5001  05A9  0008               	return
  5002  05AA                     i1l1843:	
  5003  05AA  3001               	movlw	1
  5004  05AB  00F5               	movwf	??___ftpack
  5005  05AC  0875               	movf	??___ftpack,w
  5006  05AD  07F3               	addwf	___ftpack@exp,f
  5007  05AE  3001               	movlw	1
  5008  05AF                     u149_25:	
  5009  05AF  36F2               	lsrf	___ftpack@arg+2,f
  5010  05B0  0CF1               	rrf	___ftpack@arg+1,f
  5011  05B1  0CF0               	rrf	___ftpack@arg,f
  5012  05B2  0B89               	decfsz	9,f
  5013  05B3  2DAF               	goto	u149_25
  5014  05B4                     i1l1845:	
  5015  05B4  30FE               	movlw	254
  5016  05B5  0572               	andwf	___ftpack@arg+2,w
  5017  05B6  1903               	btfsc	3,2
  5018  05B7  2DCD               	goto	i1l750
  5019  05B8  2DAA               	goto	i1l1843
  5020  05B9                     i1l1847:	
  5021  05B9  3001               	movlw	1
  5022  05BA  00F5               	movwf	??___ftpack
  5023  05BB  0875               	movf	??___ftpack,w
  5024  05BC  07F3               	addwf	___ftpack@exp,f
  5025  05BD  3001               	movlw	1
  5026  05BE  07F0               	addwf	___ftpack@arg,f
  5027  05BF  3000               	movlw	0
  5028  05C0  1803               	skipnc
  5029  05C1  3001               	movlw	1
  5030  05C2  07F1               	addwf	___ftpack@arg+1,f
  5031  05C3  3000               	movlw	0
  5032  05C4  1803               	skipnc
  5033  05C5  3001               	movlw	1
  5034  05C6  07F2               	addwf	___ftpack@arg+2,f
  5035  05C7  3001               	movlw	1
  5036  05C8                     u151_25:	
  5037  05C8  36F2               	lsrf	___ftpack@arg+2,f
  5038  05C9  0CF1               	rrf	___ftpack@arg+1,f
  5039  05CA  0CF0               	rrf	___ftpack@arg,f
  5040  05CB  0B89               	decfsz	9,f
  5041  05CC  2DC8               	goto	u151_25
  5042  05CD                     i1l750:	
  5043  05CD  30FF               	movlw	255
  5044  05CE  0572               	andwf	___ftpack@arg+2,w
  5045  05CF  1903               	btfsc	3,2
  5046  05D0  2DDA               	goto	i1l1855
  5047  05D1  2DB9               	goto	i1l1847
  5048  05D2                     i1l1853:	
  5049  05D2  3001               	movlw	1
  5050  05D3  02F3               	subwf	___ftpack@exp,f
  5051  05D4  3001               	movlw	1
  5052  05D5                     u153_25:	
  5053  05D5  35F0               	lslf	___ftpack@arg,f
  5054  05D6  0DF1               	rlf	___ftpack@arg+1,f
  5055  05D7  0DF2               	rlf	___ftpack@arg+2,f
  5056  05D8  0B89               	decfsz	9,f
  5057  05D9  2DD5               	goto	u153_25
  5058  05DA                     i1l1855:	
  5059  05DA  1BF1               	btfsc	___ftpack@arg+1,7
  5060  05DB  2DE0               	goto	i1l757
  5061  05DC  3002               	movlw	2
  5062  05DD  0273               	subwf	___ftpack@exp,w
  5063  05DE  1803               	skipnc
  5064  05DF  2DD2               	goto	i1l1853
  5065  05E0                     i1l757:	
  5066  05E0  1873               	btfsc	___ftpack@exp,0
  5067  05E1  2DE8               	goto	i1l758
  5068  05E2  30FF               	movlw	255
  5069  05E3  05F0               	andwf	___ftpack@arg,f
  5070  05E4  307F               	movlw	127
  5071  05E5  05F1               	andwf	___ftpack@arg+1,f
  5072  05E6  30FF               	movlw	255
  5073  05E7  05F2               	andwf	___ftpack@arg+2,f
  5074  05E8                     i1l758:	
  5075  05E8  1003               	clrc
  5076  05E9  0CF3               	rrf	___ftpack@exp,f
  5077  05EA  0873               	movf	___ftpack@exp,w
  5078  05EB  00F5               	movwf	??___ftpack
  5079  05EC  01F6               	clrf	??___ftpack+1
  5080  05ED  01F7               	clrf	??___ftpack+2
  5081  05EE  3010               	movlw	16
  5082  05EF                     u157_25:	
  5083  05EF  35F5               	lslf	??___ftpack,f
  5084  05F0  0DF6               	rlf	??___ftpack+1,f
  5085  05F1  0DF7               	rlf	??___ftpack+2,f
  5086  05F2  0B89               	decfsz	9,f
  5087  05F3  2DEF               	goto	u157_25
  5088  05F4  0875               	movf	??___ftpack,w
  5089  05F5  04F0               	iorwf	___ftpack@arg,f
  5090  05F6  0876               	movf	??___ftpack+1,w
  5091  05F7  04F1               	iorwf	___ftpack@arg+1,f
  5092  05F8  0877               	movf	??___ftpack+2,w
  5093  05F9  04F2               	iorwf	___ftpack@arg+2,f
  5094  05FA  0874               	movf	___ftpack@sign,w
  5095  05FB  1903               	btfsc	3,2
  5096  05FC  0008               	return
  5097  05FD  17F2               	bsf	___ftpack@arg+2,7
  5098  05FE  0008               	return
  5099  05FF                     __end_of___ftpack:	
  5100                           
  5101                           	psect	text31
  5102  0F88                     __ptext31:	
  5103 ;; *************** function _I_FAULT_intr *****************
  5104 ;; Defined at:
  5105 ;;		line 236 in file "main.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;		None
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;		None
  5110 ;; Return value:  Size  Location     Type
  5111 ;;		None               void
  5112 ;; Registers used:
  5113 ;;		status,2
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5119 ;;      Params:         0       0       0       0       0       0
  5120 ;;      Locals:         0       0       0       0       0       0
  5121 ;;      Temps:          0       0       0       0       0       0
  5122 ;;      Totals:         0       0       0       0       0       0
  5123 ;;Total ram usage:        0 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_PIN_MANAGER_IOC
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           
  5133                           ;psect for function _I_FAULT_intr
  5134  0F88                     _I_FAULT_intr:	
  5135                           
  5136                           ;main.c: 237: stPowerSaveMode = 0;
  5137                           
  5138                           ;incstack = 0
  5139                           ; Regs used in _I_FAULT_intr: [status,2]
  5140  0F88  0021               	movlb	1	; select bank1
  5141  0F89  01AE               	clrf	_stPowerSaveMode^(0+128)
  5142  0F8A  0008               	return
  5143  0F8B                     __end_of_I_FAULT_intr:	
  5144                           
  5145                           	psect	text32
  5146  0F85                     __ptext32:	
  5147 ;; *************** function _I_EXPWR_intr *****************
  5148 ;; Defined at:
  5149 ;;		line 228 in file "main.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;		None
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;		None               void
  5156 ;; Registers used:
  5157 ;;		status,2
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5163 ;;      Params:         0       0       0       0       0       0
  5164 ;;      Locals:         0       0       0       0       0       0
  5165 ;;      Temps:          0       0       0       0       0       0
  5166 ;;      Totals:         0       0       0       0       0       0
  5167 ;;Total ram usage:        0 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_PIN_MANAGER_IOC
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function _I_EXPWR_intr
  5178  0F85                     _I_EXPWR_intr:	
  5179                           
  5180                           ;main.c: 229: stPowerSaveMode = 0;
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _I_EXPWR_intr: [status,2]
  5184  0F85  0021               	movlb	1	; select bank1
  5185  0F86  01AE               	clrf	_stPowerSaveMode^(0+128)
  5186  0F87  0008               	return
  5187  0F88                     __end_of_I_EXPWR_intr:	
  5188                           
  5189                           	psect	text33
  5190  0F82                     __ptext33:	
  5191 ;; *************** function _I_CHRG_intr *****************
  5192 ;; Defined at:
  5193 ;;		line 232 in file "main.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;		None               void
  5200 ;; Registers used:
  5201 ;;		status,2
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5207 ;;      Params:         0       0       0       0       0       0
  5208 ;;      Locals:         0       0       0       0       0       0
  5209 ;;      Temps:          0       0       0       0       0       0
  5210 ;;      Totals:         0       0       0       0       0       0
  5211 ;;Total ram usage:        0 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_PIN_MANAGER_IOC
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           
  5221                           ;psect for function _I_CHRG_intr
  5222  0F82                     _I_CHRG_intr:	
  5223                           
  5224                           ;main.c: 233: stPowerSaveMode = 0;
  5225                           
  5226                           ;incstack = 0
  5227                           ; Regs used in _I_CHRG_intr: [status,2]
  5228  0F82  0021               	movlb	1	; select bank1
  5229  0F83  01AE               	clrf	_stPowerSaveMode^(0+128)
  5230  0F84  0008               	return
  5231  0F85                     __end_of_I_CHRG_intr:	
  5232                           
  5233                           	psect	text34
  5234  0051                     __ptext34:	
  5235 ;; *************** function _I2C2_ISR *****************
  5236 ;; Defined at:
  5237 ;;		line 226 in file "mcc_generated_files/i2c2.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;		None
  5242 ;; Return value:  Size  Location     Type
  5243 ;;		None               void
  5244 ;; Registers used:
  5245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5251 ;;      Params:         0       0       0       0       0       0
  5252 ;;      Locals:         0       0       0       0       0       0
  5253 ;;      Temps:          4       0       0       0       0       0
  5254 ;;      Totals:         4       0       0       0       0       0
  5255 ;;Total ram usage:        4 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    1
  5258 ;; This function calls:
  5259 ;;		_I2C2_FunctionComplete
  5260 ;;		_I2C2_Stop
  5261 ;; This function is called by:
  5262 ;;		_INTERRUPT_InterruptManager
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           
  5267                           ;psect for function _I2C2_ISR
  5268  0051                     _I2C2_ISR:	
  5269                           
  5270                           ;i2c2.c: 228: static uint8_t *pi2c_buf_ptr;
  5271                           ;i2c2.c: 229: static uint16_t i2c_address = 0;
  5272                           ;i2c2.c: 230: static uint8_t i2c_bytes_left = 0;
  5273                           ;i2c2.c: 231: static uint8_t i2c_10bit_address_restart = 0;
  5274                           ;i2c2.c: 233: PIR4bits.SSP2IF = 0;
  5275                           
  5276                           ;incstack = 0
  5277                           ; Regs used in _I2C2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5278  0051  0020               	movlb	0	; select bank0
  5279  0052  1014               	bcf	20,0	;volatile
  5280                           
  5281                           ;i2c2.c: 237: if (SSP2CON1bits.WCOL) {
  5282  0053  0024               	movlb	4	; select bank4
  5283  0054  1F9D               	btfss	29,7	;volatile
  5284  0055  2994               	goto	i1l2535
  5285                           
  5286                           ;i2c2.c: 239: SSP2CON1bits.WCOL = 0;
  5287  0056  139D               	bcf	29,7	;volatile
  5288                           
  5289                           ;i2c2.c: 240: i2c2_state = S_MASTER_IDLE;
  5290  0057  0020               	movlb	0	; select bank0
  5291  0058  01E7               	clrf	_i2c2_state
  5292                           
  5293                           ;i2c2.c: 241: *(p_i2c2_current->pTrFlag) = I2C2_MESSAGE_FAIL;
  5294  0059  0868               	movf	_p_i2c2_current,w
  5295  005A  3E02               	addlw	2
  5296  005B  0086               	movwf	6
  5297  005C  0187               	clrf	7
  5298  005D  0801               	movf	1,w
  5299  005E  0086               	movwf	6
  5300  005F  0187               	clrf	7
  5301  0060  0181               	clrf	1
  5302  0061  0A81               	incf	1,f
  5303                           
  5304                           ;i2c2.c: 244: p_i2c2_current = (0);
  5305  0062  01E8               	clrf	_p_i2c2_current
  5306                           
  5307                           ;i2c2.c: 246: return;
  5308  0063  0008               	return
  5309  0064                     i1l239:	
  5310                           ;i2c2.c: 251: case S_MASTER_IDLE:
  5311                           
  5312                           ;i2c2.c: 247: }
  5313                           ;i2c2.c: 250: switch (i2c2_state) {
  5314                           
  5315                           
  5316                           ;i2c2.c: 253: if (i2c2_object.trStatus.s.empty != 1) {
  5317  0064  0021               	movlb	1	; select bank1
  5318  0065  18A2               	btfsc	(_i2c2_object^(0+128)+2),1
  5319  0066  0008               	return
  5320                           
  5321                           ;i2c2.c: 255: p_i2c2_current = i2c2_object.pTrHead;
  5322  0067  0821               	movf	(low ((_i2c2_object| 0+1)))^(0+128),w
  5323  0068  00F2               	movwf	??_I2C2_ISR
  5324  0069  0872               	movf	??_I2C2_ISR,w
  5325  006A  0020               	movlb	0	; select bank0
  5326  006B  00E8               	movwf	_p_i2c2_current
  5327                           
  5328                           ;i2c2.c: 256: i2c2_trb_count = i2c2_object.pTrHead->count;
  5329  006C  0021               	movlb	1	; select bank1
  5330  006D  0821               	movf	(low ((_i2c2_object| 0+1)))^(0+128),w
  5331  006E  0086               	movwf	6
  5332  006F  0187               	clrf	7
  5333  0070  0801               	movf	1,w
  5334  0071  00F2               	movwf	??_I2C2_ISR
  5335  0072  0872               	movf	??_I2C2_ISR,w
  5336  0073  00A9               	movwf	_i2c2_trb_count^(0+128)
  5337                           
  5338                           ;i2c2.c: 257: p_i2c2_trb_current = i2c2_object.pTrHead->ptrb_list;
  5339  0074  0821               	movf	(low ((_i2c2_object| 0+1)))^(0+128),w
  5340  0075  0086               	movwf	6
  5341  0076  0187               	clrf	7
  5342  0077  3F41               	moviw [1]fsr1
  5343  0078  0020               	movlb	0	; select bank0
  5344  0079  00E9               	movwf	_p_i2c2_trb_current
  5345                           
  5346                           ;i2c2.c: 259: i2c2_object.pTrHead++;
  5347  007A  3004               	movlw	4
  5348  007B  00F2               	movwf	??_I2C2_ISR
  5349  007C  0872               	movf	??_I2C2_ISR,w
  5350  007D  0021               	movlb	1	; select bank1
  5351  007E  07A1               	addwf	(low ((_i2c2_object| 0+1)))^(0+128),f
  5352                           
  5353                           ;i2c2.c: 262: if (i2c2_object.pTrHead == (i2c2_tr_queue + 1)) {
  5354  007F  0821               	movf	(low ((_i2c2_object| 0+1)))^(0+128),w
  5355  0080  3ABE               	xorlw	(low ((_i2c2_tr_queue| 0+4)))& (0+255)
  5356  0081  1D03               	skipz
  5357  0082  2887               	goto	i1l2423
  5358                           
  5359                           ;i2c2.c: 264: i2c2_object.pTrHead = i2c2_tr_queue;
  5360  0083  30BA               	movlw	(low (_i2c2_tr_queue| 0))& (0+255)
  5361  0084  00F2               	movwf	??_I2C2_ISR
  5362  0085  0872               	movf	??_I2C2_ISR,w
  5363  0086  00A1               	movwf	(low ((_i2c2_object| 0+1)))^(0+128)
  5364  0087                     i1l2423:	
  5365                           
  5366                           ;i2c2.c: 265: }
  5367                           ;i2c2.c: 269: i2c2_object.trStatus.s.full = 0;
  5368  0087  1022               	bcf	(_i2c2_object^(0+128)+2),0
  5369                           
  5370                           ;i2c2.c: 272: if (i2c2_object.pTrHead == i2c2_object.pTrTail) {
  5371  0088  0821               	movf	(low ((_i2c2_object| 0+1)))^(0+128),w
  5372  0089  0620               	xorwf	_i2c2_object^(0+128),w
  5373  008A  1903               	btfsc	3,2
  5374                           
  5375                           ;i2c2.c: 274: i2c2_object.trStatus.s.empty = 1;
  5376  008B  14A2               	bsf	(_i2c2_object^(0+128)+2),1
  5377                           
  5378                           ;i2c2.c: 275: }
  5379                           ;i2c2.c: 278: SSP2CON2bits.SEN = 1;
  5380  008C  0024               	movlb	4	; select bank4
  5381  008D  141E               	bsf	30,0	;volatile
  5382                           
  5383                           ;i2c2.c: 281: i2c2_state = S_MASTER_SEND_ADDR;
  5384  008E  3002               	movlw	2
  5385  008F  00F2               	movwf	??_I2C2_ISR
  5386  0090  0872               	movf	??_I2C2_ISR,w
  5387  0091  0020               	movlb	0	; select bank0
  5388  0092  00E7               	movwf	_i2c2_state
  5389                           
  5390                           ;i2c2.c: 282: }
  5391                           ;i2c2.c: 284: break;
  5392  0093  0008               	return
  5393  0094                     i1l244:	
  5394                           ;i2c2.c: 286: case S_MASTER_RESTART:
  5395                           
  5396                           
  5397                           ;i2c2.c: 291: SSP2CON2bits.RSEN = 1;
  5398  0094  0024               	movlb	4	; select bank4
  5399  0095  149E               	bsf	30,1	;volatile
  5400                           
  5401                           ;i2c2.c: 294: i2c2_state = S_MASTER_SEND_ADDR;
  5402  0096  3002               	movlw	2
  5403  0097  00F2               	movwf	??_I2C2_ISR
  5404  0098  0872               	movf	??_I2C2_ISR,w
  5405  0099  0020               	movlb	0	; select bank0
  5406  009A  00E7               	movwf	_i2c2_state
  5407                           
  5408                           ;i2c2.c: 296: break;
  5409  009B  0008               	return
  5410  009C                     i1l245:	
  5411                           ;i2c2.c: 298: case S_MASTER_SEND_ADDR_10BIT_LSB:
  5412                           
  5413                           
  5414                           ;i2c2.c: 300: if (SSP2CON2bits.ACKSTAT) {
  5415  009C  0024               	movlb	4	; select bank4
  5416  009D  1F1E               	btfss	30,6	;volatile
  5417  009E  28A8               	goto	i1l2435
  5418                           
  5419                           ;i2c2.c: 301: i2c2_object.i2cErrors++;
  5420  009F  3001               	movlw	1
  5421  00A0  00F2               	movwf	??_I2C2_ISR
  5422  00A1  0872               	movf	??_I2C2_ISR,w
  5423  00A2  0021               	movlb	1	; select bank1
  5424  00A3  07A4               	addwf	(_i2c2_object^(0+128)+4),f
  5425                           
  5426                           ;i2c2.c: 302: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  5427  00A4  3004               	movlw	4
  5428  00A5  3187  27A1         	fcall	_I2C2_Stop
  5429                           
  5430                           ;i2c2.c: 303: } else {
  5431  00A7  0008               	return
  5432  00A8                     i1l2435:	
  5433                           
  5434                           ;i2c2.c: 305: SSP2BUF = (i2c_address >> 1) & 0x00FF;
  5435  00A8  0020               	movlb	0	; select bank0
  5436  00A9  086F               	movf	I2C2_ISR@i2c_address+1,w
  5437  00AA  00F3               	movwf	??_I2C2_ISR+1
  5438  00AB  086E               	movf	I2C2_ISR@i2c_address,w
  5439  00AC  00F2               	movwf	??_I2C2_ISR
  5440  00AD  36F3               	lsrf	??_I2C2_ISR+1,f
  5441  00AE  0CF2               	rrf	??_I2C2_ISR,f
  5442  00AF  0872               	movf	??_I2C2_ISR,w
  5443  00B0  0024               	movlb	4	; select bank4
  5444  00B1  0099               	movwf	25	;volatile
  5445                           
  5446                           ;i2c2.c: 308: if (i2c_address & 0x01) {
  5447  00B2  0020               	movlb	0	; select bank0
  5448  00B3  1C6E               	btfss	I2C2_ISR@i2c_address,0
  5449  00B4  28BA               	goto	i1l2441
  5450                           
  5451                           ;i2c2.c: 311: i2c2_state = S_MASTER_10BIT_RESTART;
  5452  00B5  300B               	movlw	11
  5453  00B6  00F2               	movwf	??_I2C2_ISR
  5454  00B7  0872               	movf	??_I2C2_ISR,w
  5455  00B8  00E7               	movwf	_i2c2_state
  5456                           
  5457                           ;i2c2.c: 312: } else {
  5458  00B9  0008               	return
  5459  00BA                     i1l2441:	
  5460                           
  5461                           ;i2c2.c: 314: i2c2_state = S_MASTER_SEND_DATA;
  5462  00BA  3003               	movlw	3
  5463  00BB  00F2               	movwf	??_I2C2_ISR
  5464  00BC  0872               	movf	??_I2C2_ISR,w
  5465  00BD  00E7               	movwf	_i2c2_state
  5466                           
  5467                           ;i2c2.c: 315: }
  5468                           ;i2c2.c: 316: }
  5469                           ;i2c2.c: 318: break;
  5470  00BE  0008               	return
  5471  00BF                     i1l250:	
  5472                           ;i2c2.c: 320: case S_MASTER_10BIT_RESTART:
  5473                           
  5474                           
  5475                           ;i2c2.c: 322: if (SSP2CON2bits.ACKSTAT) {
  5476  00BF  0024               	movlb	4	; select bank4
  5477  00C0  1F1E               	btfss	30,6	;volatile
  5478  00C1  28CB               	goto	i1l251
  5479                           
  5480                           ;i2c2.c: 323: i2c2_object.i2cErrors++;
  5481  00C2  3001               	movlw	1
  5482  00C3  00F2               	movwf	??_I2C2_ISR
  5483  00C4  0872               	movf	??_I2C2_ISR,w
  5484  00C5  0021               	movlb	1	; select bank1
  5485  00C6  07A4               	addwf	(_i2c2_object^(0+128)+4),f
  5486                           
  5487                           ;i2c2.c: 324: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  5488  00C7  3004               	movlw	4
  5489  00C8  3187  27A1         	fcall	_I2C2_Stop
  5490                           
  5491                           ;i2c2.c: 325: } else {
  5492  00CA  0008               	return
  5493  00CB                     i1l251:	
  5494                           
  5495                           ;i2c2.c: 328: SSP2CON2bits.RSEN = 1;
  5496  00CB  149E               	bsf	30,1	;volatile
  5497                           
  5498                           ;i2c2.c: 332: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  5499  00CC  0020               	movlb	0	; select bank0
  5500  00CD  086F               	movf	I2C2_ISR@i2c_address+1,w
  5501  00CE  00F3               	movwf	??_I2C2_ISR+1
  5502  00CF  086E               	movf	I2C2_ISR@i2c_address,w
  5503  00D0  00F2               	movwf	??_I2C2_ISR
  5504  00D1  0873               	movf	??_I2C2_ISR+1,w
  5505  00D2  00F2               	movwf	??_I2C2_ISR
  5506  00D3  01F3               	clrf	??_I2C2_ISR+1
  5507  00D4  3006               	movlw	6
  5508  00D5  0572               	andwf	??_I2C2_ISR,w
  5509  00D6  00F4               	movwf	??_I2C2_ISR+2
  5510  00D7  3000               	movlw	0
  5511  00D8  0573               	andwf	??_I2C2_ISR+1,w
  5512  00D9  00F5               	movwf	??_I2C2_ISR+3
  5513  00DA  30F0               	movlw	240
  5514  00DB  0474               	iorwf	??_I2C2_ISR+2,w
  5515  00DC  00EE               	movwf	I2C2_ISR@i2c_address
  5516  00DD  3000               	movlw	0
  5517  00DE  0475               	iorwf	??_I2C2_ISR+3,w
  5518  00DF  00EF               	movwf	I2C2_ISR@i2c_address+1
  5519                           
  5520                           ;i2c2.c: 335: i2c_address |= 0x0001;
  5521  00E0  146E               	bsf	I2C2_ISR@i2c_address,0
  5522                           
  5523                           ;i2c2.c: 338: i2c_10bit_address_restart = 1;
  5524  00E1  0021               	movlb	1	; select bank1
  5525  00E2  01A5               	clrf	I2C2_ISR@i2c_10bit_address_restart^(0+128)
  5526  00E3  0AA5               	incf	I2C2_ISR@i2c_10bit_address_restart^(0+128),f
  5527                           
  5528                           ;i2c2.c: 341: i2c2_state = S_MASTER_SEND_ADDR;
  5529  00E4  3002               	movlw	2
  5530  00E5  00F2               	movwf	??_I2C2_ISR
  5531  00E6  0872               	movf	??_I2C2_ISR,w
  5532  00E7  0020               	movlb	0	; select bank0
  5533  00E8  00E7               	movwf	_i2c2_state
  5534                           
  5535                           ;i2c2.c: 342: }
  5536                           ;i2c2.c: 344: break;
  5537  00E9  0008               	return
  5538  00EA                     i1l2455:	
  5539                           ;i2c2.c: 346: case S_MASTER_SEND_ADDR:
  5540                           
  5541                           
  5542                           ;i2c2.c: 359: if (i2c_10bit_address_restart != 1) {
  5543  00EA  0021               	movlb	1	; select bank1
  5544  00EB  0325               	decf	I2C2_ISR@i2c_10bit_address_restart^(0+128),w
  5545  00EC  1903               	btfsc	3,2
  5546  00ED  2903               	goto	i1l2475
  5547                           
  5548                           ;i2c2.c: 361: i2c_address = p_i2c2_trb_current->address;
  5549  00EE  0020               	movlb	0	; select bank0
  5550  00EF  0869               	movf	_p_i2c2_trb_current,w
  5551  00F0  0086               	movwf	6
  5552  00F1  0187               	clrf	7
  5553  00F2  3F40               	moviw [0]fsr1
  5554  00F3  00EE               	movwf	I2C2_ISR@i2c_address
  5555  00F4  3F41               	moviw [1]fsr1
  5556  00F5  00EF               	movwf	I2C2_ISR@i2c_address+1
  5557                           
  5558                           ;i2c2.c: 362: pi2c_buf_ptr = p_i2c2_trb_current->pbuffer;
  5559  00F6  0869               	movf	_p_i2c2_trb_current,w
  5560  00F7  0086               	movwf	6
  5561  00F8  0187               	clrf	7
  5562  00F9  3F43               	moviw [3]fsr1
  5563  00FA  0021               	movlb	1	; select bank1
  5564  00FB  00A7               	movwf	I2C2_ISR@pi2c_buf_ptr^(0+128)
  5565                           
  5566                           ;i2c2.c: 363: i2c_bytes_left = p_i2c2_trb_current->length;
  5567  00FC  0020               	movlb	0	; select bank0
  5568  00FD  0869               	movf	_p_i2c2_trb_current,w
  5569  00FE  0086               	movwf	6
  5570  00FF  0187               	clrf	7
  5571  0100  3F42               	moviw [2]fsr1
  5572  0101  0021               	movlb	1	; select bank1
  5573  0102  00A6               	movwf	I2C2_ISR@i2c_bytes_left^(0+128)
  5574  0103                     i1l2475:	
  5575                           ;i2c2.c: 380: }
  5576                           ;i2c2.c: 381: } else {
  5577                           
  5578                           ;i2c2.c: 379: i2c_10bit_address_restart = 0;
  5579                           
  5580                           ;i2c2.c: 377: i2c2_state = S_MASTER_ACK_ADDR;
  5581                           
  5582                           ;i2c2.c: 376: SSP2BUF = i2c_address;
  5583                           
  5584                           ;i2c2.c: 374: } else {
  5585                           
  5586                           ;i2c2.c: 373: i2c2_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  5587                           
  5588                           ;i2c2.c: 372: SSP2BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  5589                           
  5590                           ;i2c2.c: 368: if (0 == i2c_10bit_address_restart) {
  5591                           
  5592                           ;i2c2.c: 364: }
  5593                           ;i2c2.c: 367: if (!1 && (0x0 != i2c_address)) {
  5594                           
  5595                           
  5596                           ;i2c2.c: 383: SSP2BUF = i2c_address;
  5597  0103  0020               	movlb	0	; select bank0
  5598  0104  086E               	movf	I2C2_ISR@i2c_address,w
  5599  0105  0024               	movlb	4	; select bank4
  5600  0106  0099               	movwf	25	;volatile
  5601                           
  5602                           ;i2c2.c: 384: if (i2c_address & 0x01) {
  5603  0107  0020               	movlb	0	; select bank0
  5604  0108  1C6E               	btfss	I2C2_ISR@i2c_address,0
  5605  0109  290F               	goto	i1l2481
  5606                           
  5607                           ;i2c2.c: 386: i2c2_state = S_MASTER_ACK_ADDR;
  5608  010A  3005               	movlw	5
  5609  010B  00F2               	movwf	??_I2C2_ISR
  5610  010C  0872               	movf	??_I2C2_ISR,w
  5611  010D  00E7               	movwf	_i2c2_state
  5612                           
  5613                           ;i2c2.c: 387: } else {
  5614  010E  0008               	return
  5615  010F                     i1l2481:	
  5616                           
  5617                           ;i2c2.c: 389: i2c2_state = S_MASTER_SEND_DATA;
  5618  010F  3003               	movlw	3
  5619  0110  00F2               	movwf	??_I2C2_ISR
  5620  0111  0872               	movf	??_I2C2_ISR,w
  5621  0112  00E7               	movwf	_i2c2_state
  5622                           
  5623                           ;i2c2.c: 390: }
  5624                           ;i2c2.c: 391: }
  5625                           ;i2c2.c: 392: break;
  5626  0113  0008               	return
  5627  0114                     i1l261:	
  5628                           ;i2c2.c: 394: case S_MASTER_SEND_DATA:
  5629                           
  5630                           
  5631                           ;i2c2.c: 397: if (SSP2CON2bits.ACKSTAT) {
  5632  0114  0024               	movlb	4	; select bank4
  5633  0115  1F1E               	btfss	30,6	;volatile
  5634  0116  2922               	goto	i1l2489
  5635                           
  5636                           ;i2c2.c: 399: i2c2_object.i2cErrors++;
  5637  0117  3001               	movlw	1
  5638  0118  00F2               	movwf	??_I2C2_ISR
  5639  0119  0872               	movf	??_I2C2_ISR,w
  5640  011A  0021               	movlb	1	; select bank1
  5641  011B  07A4               	addwf	(_i2c2_object^(0+128)+4),f
  5642                           
  5643                           ;i2c2.c: 402: SSP2CON2bits.ACKSTAT = 0;
  5644  011C  0024               	movlb	4	; select bank4
  5645  011D  131E               	bcf	30,6	;volatile
  5646                           
  5647                           ;i2c2.c: 405: I2C2_Stop(I2C2_DATA_NO_ACK);
  5648  011E  3005               	movlw	5
  5649  011F  3187  27A1         	fcall	_I2C2_Stop
  5650                           
  5651                           ;i2c2.c: 407: } else {
  5652  0121  0008               	return
  5653  0122                     i1l2489:	
  5654                           
  5655                           ;i2c2.c: 409: if (i2c_bytes_left-- == 0U) {
  5656  0122  3001               	movlw	1
  5657  0123  0021               	movlb	1	; select bank1
  5658  0124  02A6               	subwf	I2C2_ISR@i2c_bytes_left^(0+128),f
  5659  0125  0A26               	incf	I2C2_ISR@i2c_bytes_left^(0+128),w
  5660  0126  1D03               	btfss	3,2
  5661  0127  293E               	goto	i1l2497
  5662                           
  5663                           ;i2c2.c: 413: p_i2c2_trb_current++;
  5664  0128  3005               	movlw	5
  5665  0129  00F2               	movwf	??_I2C2_ISR
  5666  012A  0872               	movf	??_I2C2_ISR,w
  5667  012B  0020               	movlb	0	; select bank0
  5668  012C  07E9               	addwf	_p_i2c2_trb_current,f
  5669                           
  5670                           ;i2c2.c: 416: if (--i2c2_trb_count == 0) {
  5671  012D  3001               	movlw	1
  5672  012E  0021               	movlb	1	; select bank1
  5673  012F  02A9               	subwf	_i2c2_trb_count^(0+128),f
  5674  0130  1D03               	btfss	3,2
  5675  0131  2936               	goto	i1l265
  5676                           
  5677                           ;i2c2.c: 417: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  5678  0132  3000               	movlw	0
  5679  0133  3187  27A1         	fcall	_I2C2_Stop
  5680                           
  5681                           ;i2c2.c: 418: } else {
  5682  0135  0008               	return
  5683  0136                     i1l265:	
  5684                           
  5685                           ;i2c2.c: 425: SSP2CON2bits.RSEN = 1;
  5686  0136  0024               	movlb	4	; select bank4
  5687  0137  149E               	bsf	30,1	;volatile
  5688                           
  5689                           ;i2c2.c: 428: i2c2_state = S_MASTER_SEND_ADDR;
  5690  0138  3002               	movlw	2
  5691  0139  00F2               	movwf	??_I2C2_ISR
  5692  013A  0872               	movf	??_I2C2_ISR,w
  5693  013B  0020               	movlb	0	; select bank0
  5694  013C  00E7               	movwf	_i2c2_state
  5695                           
  5696                           ;i2c2.c: 430: }
  5697                           ;i2c2.c: 431: } else {
  5698  013D  0008               	return
  5699  013E                     i1l2497:	
  5700                           
  5701                           ;i2c2.c: 433: SSP2BUF = *pi2c_buf_ptr++;
  5702  013E  0021               	movlb	1	; select bank1
  5703  013F  0827               	movf	I2C2_ISR@pi2c_buf_ptr^(0+128),w
  5704  0140  0086               	movwf	6
  5705  0141  0187               	clrf	7
  5706  0142  0801               	movf	1,w
  5707  0143  0024               	movlb	4	; select bank4
  5708  0144  0099               	movwf	25	;volatile
  5709  0145  3001               	movlw	1
  5710  0146  00F2               	movwf	??_I2C2_ISR
  5711  0147  0872               	movf	??_I2C2_ISR,w
  5712  0148  0021               	movlb	1	; select bank1
  5713  0149  07A7               	addwf	I2C2_ISR@pi2c_buf_ptr^(0+128),f
  5714                           
  5715                           ;i2c2.c: 434: }
  5716                           ;i2c2.c: 435: }
  5717                           ;i2c2.c: 436: break;
  5718  014A  0008               	return
  5719  014B                     i1l268:	
  5720                           ;i2c2.c: 438: case S_MASTER_ACK_ADDR:
  5721                           
  5722                           
  5723                           ;i2c2.c: 441: if (SSP2CON2bits.ACKSTAT) {
  5724  014B  0024               	movlb	4	; select bank4
  5725  014C  1F1E               	btfss	30,6	;volatile
  5726  014D  2959               	goto	i1l269
  5727                           
  5728                           ;i2c2.c: 444: i2c2_object.i2cErrors++;
  5729  014E  3001               	movlw	1
  5730  014F  00F2               	movwf	??_I2C2_ISR
  5731  0150  0872               	movf	??_I2C2_ISR,w
  5732  0151  0021               	movlb	1	; select bank1
  5733  0152  07A4               	addwf	(_i2c2_object^(0+128)+4),f
  5734                           
  5735                           ;i2c2.c: 447: I2C2_Stop(I2C2_MESSAGE_ADDRESS_NO_ACK);
  5736  0153  3004               	movlw	4
  5737  0154  3187  27A1         	fcall	_I2C2_Stop
  5738                           
  5739                           ;i2c2.c: 450: SSP2CON2bits.ACKSTAT = 0;
  5740  0156  0024               	movlb	4	; select bank4
  5741  0157  131E               	bcf	30,6	;volatile
  5742                           
  5743                           ;i2c2.c: 451: } else {
  5744  0158  0008               	return
  5745  0159                     i1l269:	
  5746                           
  5747                           ;i2c2.c: 452: SSP2CON2bits.RCEN = 1;
  5748  0159  159E               	bsf	30,3	;volatile
  5749                           
  5750                           ;i2c2.c: 453: i2c2_state = S_MASTER_ACK_RCV_DATA;
  5751  015A  3008               	movlw	8
  5752  015B  00F2               	movwf	??_I2C2_ISR
  5753  015C  0872               	movf	??_I2C2_ISR,w
  5754  015D  0020               	movlb	0	; select bank0
  5755  015E  00E7               	movwf	_i2c2_state
  5756                           
  5757                           ;i2c2.c: 454: }
  5758                           ;i2c2.c: 455: break;
  5759  015F  0008               	return
  5760  0160                     i1l2509:	
  5761                           ;i2c2.c: 457: case S_MASTER_RCV_DATA:
  5762                           
  5763                           
  5764                           ;i2c2.c: 462: i2c2_state = S_MASTER_ACK_RCV_DATA;
  5765  0160  3008               	movlw	8
  5766  0161  00F2               	movwf	??_I2C2_ISR
  5767  0162  0872               	movf	??_I2C2_ISR,w
  5768  0163  00E7               	movwf	_i2c2_state
  5769                           
  5770                           ;i2c2.c: 465: SSP2CON2bits.RCEN = 1;
  5771  0164  0024               	movlb	4	; select bank4
  5772  0165  159E               	bsf	30,3	;volatile
  5773                           
  5774                           ;i2c2.c: 467: break;
  5775  0166  0008               	return
  5776  0167                     i1l2513:	
  5777                           ;i2c2.c: 469: case S_MASTER_ACK_RCV_DATA:
  5778                           
  5779                           
  5780                           ;i2c2.c: 472: *pi2c_buf_ptr++ = SSP2BUF;
  5781  0167  0024               	movlb	4	; select bank4
  5782  0168  0819               	movf	25,w	;volatile
  5783  0169  00F2               	movwf	??_I2C2_ISR
  5784  016A  0021               	movlb	1	; select bank1
  5785  016B  0827               	movf	I2C2_ISR@pi2c_buf_ptr^(0+128),w
  5786  016C  0086               	movwf	6
  5787  016D  0187               	clrf	7
  5788  016E  0872               	movf	??_I2C2_ISR,w
  5789  016F  0081               	movwf	1
  5790  0170  3001               	movlw	1
  5791  0171  00F2               	movwf	??_I2C2_ISR
  5792  0172  0872               	movf	??_I2C2_ISR,w
  5793  0173  07A7               	addwf	I2C2_ISR@pi2c_buf_ptr^(0+128),f
  5794                           
  5795                           ;i2c2.c: 475: if (--i2c_bytes_left) {
  5796  0174  3001               	movlw	1
  5797  0175  02A6               	subwf	I2C2_ISR@i2c_bytes_left^(0+128),f
  5798  0176  1903               	btfsc	3,2
  5799  0177  2980               	goto	i1l273
  5800                           
  5801                           ;i2c2.c: 481: SSP2CON2bits.ACKDT = 0;
  5802  0178  0024               	movlb	4	; select bank4
  5803  0179  129E               	bcf	30,5	;volatile
  5804                           
  5805                           ;i2c2.c: 484: i2c2_state = S_MASTER_RCV_DATA;
  5806  017A  3006               	movlw	6
  5807  017B  00F2               	movwf	??_I2C2_ISR
  5808  017C  0872               	movf	??_I2C2_ISR,w
  5809  017D  0020               	movlb	0	; select bank0
  5810  017E  00E7               	movwf	_i2c2_state
  5811                           
  5812                           ;i2c2.c: 485: } else {
  5813  017F  2984               	goto	i1l2525
  5814  0180                     i1l273:	
  5815                           
  5816                           ;i2c2.c: 489: SSP2CON2bits.ACKDT = 1;
  5817  0180  0024               	movlb	4	; select bank4
  5818  0181  169E               	bsf	30,5	;volatile
  5819                           
  5820                           ;i2c2.c: 491: I2C2_FunctionComplete();
  5821  0182  3187  27CE         	fcall	_I2C2_FunctionComplete
  5822  0184                     i1l2525:	
  5823                           
  5824                           ;i2c2.c: 492: }
  5825                           ;i2c2.c: 495: SSP2CON2bits.ACKEN = 1;
  5826  0184  0024               	movlb	4	; select bank4
  5827  0185  161E               	bsf	30,4	;volatile
  5828                           
  5829                           ;i2c2.c: 496: break;
  5830  0186  0008               	return
  5831  0187                     i1l2527:	
  5832                           ;i2c2.c: 498: case S_MASTER_RCV_STOP:
  5833                           
  5834                           
  5835                           ;i2c2.c: 499: case S_MASTER_SEND_STOP:
  5836                           ;i2c2.c: 502: I2C2_Stop(I2C2_MESSAGE_COMPLETE);
  5837  0187  3000               	movlw	0
  5838  0188  3187  27A1         	fcall	_I2C2_Stop
  5839                           
  5840                           ;i2c2.c: 503: break;
  5841  018A  0008               	return
  5842  018B                     i1l2529:	
  5843                           ;i2c2.c: 505: default:
  5844                           
  5845                           
  5846                           ;i2c2.c: 509: i2c2_object.i2cErrors++;
  5847  018B  3001               	movlw	1
  5848  018C  00F2               	movwf	??_I2C2_ISR
  5849  018D  0872               	movf	??_I2C2_ISR,w
  5850  018E  0021               	movlb	1	; select bank1
  5851  018F  07A4               	addwf	(_i2c2_object^(0+128)+4),f
  5852                           
  5853                           ;i2c2.c: 510: I2C2_Stop(I2C2_LOST_STATE);
  5854  0190  3006               	movlw	6
  5855  0191  3187  27A1         	fcall	_I2C2_Stop
  5856                           
  5857                           ;i2c2.c: 513: }
  5858                           
  5859                           ;i2c2.c: 511: break;
  5860  0193  0008               	return
  5861  0194                     i1l2535:	
  5862  0194  0020               	movlb	0	; select bank0
  5863  0195  0867               	movf	_i2c2_state,w
  5864                           
  5865                           ; Switch size 1, requested type "space"
  5866                           ; Number of cases is 11, Range of values is 0 to 11
  5867                           ; switch strategies available:
  5868                           ; Name         Instructions Cycles
  5869                           ; direct_byte           30     6 (fixed)
  5870                           ; simple_byte           34    18 (average)
  5871                           ; jumptable            260     6 (fixed)
  5872                           ;	Chosen strategy is direct_byte
  5873  0196  0084               	movwf	4
  5874  0197  300C               	movlw	12
  5875  0198  0204               	subwf	4,w
  5876  0199  1803               	skipnc
  5877  019A  298B               	goto	i1l2529
  5878  019B  3187               	movlp	high i1S2641
  5879  019C  3504               	lslf	4,w
  5880  019D  3E89               	addlw	low i1S2641
  5881  019E  0082               	movwf	2
  5882  019F  0008               	return
  5883  01A0                     __end_of_I2C2_ISR:	
  5884                           
  5885                           	psect	swtext1
  5886  0789                     __pswtext1:	
  5887  0789                     i1S2641:	
  5888  0789  3180  2864         	ljmp	i1l239
  5889  078B  3180  2894         	ljmp	i1l244
  5890  078D  3180  28EA         	ljmp	i1l2455
  5891  078F  3181  2914         	ljmp	i1l261
  5892  0791  3181  2987         	ljmp	i1l2527
  5893  0793  3181  294B         	ljmp	i1l268
  5894  0795  3181  2960         	ljmp	i1l2509
  5895  0797  3181  2987         	ljmp	i1l2527
  5896  0799  3181  2967         	ljmp	i1l2513
  5897  079B  3181  298B         	ljmp	i1l2529
  5898  079D  3180  289C         	ljmp	i1l245
  5899  079F  3180  28BF         	ljmp	i1l250
  5900                           
  5901                           	psect	text35
  5902  07A1                     __ptext35:	
  5903 ;; *************** function _I2C2_Stop *****************
  5904 ;; Defined at:
  5905 ;;		line 530 in file "mcc_generated_files/i2c2.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  completion_c    1    wreg     enum E2801
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  completion_c    1    1[COMMON] enum E2801
  5910 ;; Return value:  Size  Location     Type
  5911 ;;		None               void
  5912 ;; Registers used:
  5913 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5919 ;;      Params:         0       0       0       0       0       0
  5920 ;;      Locals:         1       0       0       0       0       0
  5921 ;;      Temps:          1       0       0       0       0       0
  5922 ;;      Totals:         2       0       0       0       0       0
  5923 ;;Total ram usage:        2 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_I2C2_ISR
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           
  5933                           ;psect for function _I2C2_Stop
  5934  07A1                     _I2C2_Stop:	
  5935                           
  5936                           ;incstack = 0
  5937                           ; Regs used in _I2C2_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  5938                           ;I2C2_Stop@completion_code stored from wreg
  5939  07A1  00F1               	movwf	I2C2_Stop@completion_code
  5940                           
  5941                           ;i2c2.c: 532: SSP2CON2bits.PEN = 1;
  5942  07A2  0024               	movlb	4	; select bank4
  5943  07A3  151E               	bsf	30,2	;volatile
  5944                           
  5945                           ;i2c2.c: 535: if (p_i2c2_current->pTrFlag != (0)) {
  5946  07A4  0020               	movlb	0	; select bank0
  5947  07A5  0868               	movf	_p_i2c2_current,w
  5948  07A6  3E02               	addlw	2
  5949  07A7  0086               	movwf	6
  5950  07A8  0187               	clrf	7
  5951  07A9  0801               	movf	1,w
  5952  07AA  1903               	btfsc	3,2
  5953  07AB  2FB7               	goto	i1l2353
  5954                           
  5955                           ;i2c2.c: 537: *(p_i2c2_current->pTrFlag) = completion_code;
  5956  07AC  0871               	movf	I2C2_Stop@completion_code,w
  5957  07AD  00F0               	movwf	??_I2C2_Stop
  5958  07AE  0868               	movf	_p_i2c2_current,w
  5959  07AF  3E02               	addlw	2
  5960  07B0  0086               	movwf	6
  5961  07B1  0187               	clrf	7
  5962  07B2  0801               	movf	1,w
  5963  07B3  0086               	movwf	6
  5964  07B4  0187               	clrf	7
  5965  07B5  0870               	movf	??_I2C2_Stop,w
  5966  07B6  0081               	movwf	1
  5967  07B7                     i1l2353:	
  5968                           
  5969                           ;i2c2.c: 538: }
  5970                           ;i2c2.c: 541: i2c2_state = S_MASTER_IDLE;
  5971  07B7  01E7               	clrf	_i2c2_state
  5972  07B8  0008               	return
  5973  07B9                     __end_of_I2C2_Stop:	
  5974                           
  5975                           	psect	text36
  5976  07CE                     __ptext36:	
  5977 ;; *************** function _I2C2_FunctionComplete *****************
  5978 ;; Defined at:
  5979 ;;		line 516 in file "mcc_generated_files/i2c2.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;		None               void
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5993 ;;      Params:         0       0       0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0
  5995 ;;      Temps:          1       0       0       0       0       0
  5996 ;;      Totals:         1       0       0       0       0       0
  5997 ;;Total ram usage:        1 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_I2C2_ISR
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           
  6007                           ;psect for function _I2C2_FunctionComplete
  6008  07CE                     _I2C2_FunctionComplete:	
  6009                           
  6010                           ;i2c2.c: 519: p_i2c2_trb_current++;
  6011                           
  6012                           ;incstack = 0
  6013                           ; Regs used in _I2C2_FunctionComplete: [wreg+status,2+status,0]
  6014  07CE  3005               	movlw	5
  6015  07CF  00F0               	movwf	??_I2C2_FunctionComplete
  6016  07D0  0870               	movf	??_I2C2_FunctionComplete,w
  6017  07D1  0020               	movlb	0	; select bank0
  6018  07D2  07E9               	addwf	_p_i2c2_trb_current,f
  6019                           
  6020                           ;i2c2.c: 522: if (--i2c2_trb_count == 0) {
  6021  07D3  3001               	movlw	1
  6022  07D4  0021               	movlb	1	; select bank1
  6023  07D5  02A9               	subwf	_i2c2_trb_count^(0+128),f
  6024  07D6  1D03               	btfss	3,2
  6025  07D7  2FDE               	goto	i1l280
  6026                           
  6027                           ;i2c2.c: 523: i2c2_state = S_MASTER_SEND_STOP;
  6028  07D8  3004               	movlw	4
  6029  07D9  00F0               	movwf	??_I2C2_FunctionComplete
  6030  07DA  0870               	movf	??_I2C2_FunctionComplete,w
  6031  07DB  0020               	movlb	0	; select bank0
  6032  07DC  00E7               	movwf	_i2c2_state
  6033                           
  6034                           ;i2c2.c: 524: } else {
  6035  07DD  0008               	return
  6036  07DE                     i1l280:	
  6037                           
  6038                           ;i2c2.c: 525: i2c2_state = S_MASTER_RESTART;
  6039  07DE  0020               	movlb	0	; select bank0
  6040  07DF  01E7               	clrf	_i2c2_state
  6041  07E0  0AE7               	incf	_i2c2_state,f
  6042  07E1  0008               	return
  6043  07E2                     __end_of_I2C2_FunctionComplete:	
  6044                           
  6045                           	psect	text37
  6046  07FF                     __ptext37:	
  6047 ;; *************** function _I2C2_BusCollisionISR *****************
  6048 ;; Defined at:
  6049 ;;		line 656 in file "mcc_generated_files/i2c2.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;		None
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;		None
  6054 ;; Return value:  Size  Location     Type
  6055 ;;		None               void
  6056 ;; Registers used:
  6057 ;;		None
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6063 ;;      Params:         0       0       0       0       0       0
  6064 ;;      Locals:         0       0       0       0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0
  6066 ;;      Totals:         0       0       0       0       0       0
  6067 ;;Total ram usage:        0 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; This function calls:
  6070 ;;		Nothing
  6071 ;; This function is called by:
  6072 ;;		_INTERRUPT_InterruptManager
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           
  6077                           ;psect for function _I2C2_BusCollisionISR
  6078  07FF                     _I2C2_BusCollisionISR:	
  6079                           
  6080                           ;incstack = 0
  6081                           ; Regs used in _I2C2_BusCollisionISR: []
  6082  07FF  0008               	return
  6083  0800                     __end_of_I2C2_BusCollisionISR:	
  6084  007E                     btemp	set	126	;btemp
  6085  007E                     int$flags	set	126
  6086  007E                     wtemp	set	126
  6087  007E                     wtemp0	set	126
  6088  0080                     wtemp1	set	128
  6089  0082                     wtemp2	set	130
  6090  0084                     wtemp3	set	132
  6091  0086                     wtemp4	set	134
  6092  0088                     wtemp5	set	136
  6093  007F                     wtemp6	set	127
  6094  007E                     ttemp	set	126
  6095  007E                     ttemp0	set	126
  6096  0081                     ttemp1	set	129
  6097  0084                     ttemp2	set	132
  6098  0087                     ttemp3	set	135
  6099  007F                     ttemp4	set	127
  6100  007E                     ltemp	set	126
  6101  007E                     ltemp0	set	126
  6102  0082                     ltemp1	set	130
  6103  0086                     ltemp2	set	134
  6104  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      80
    BANK1            80      3      36
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    i2c2_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c2_tr_queue.pTrFlag	PTR enum E2801 size(1) Largest target is 0

    i2c2_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    I2C2_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C2_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c2_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 0

    i2c2_object.pTrTail.pTrFlag	PTR enum E2801 size(1) Largest target is 0

    i2c2_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    F2913.pbuffer	PTR unsigned char  size(1) Largest target is 0

    F2908.pbuffer	PTR unsigned char  size(1) Largest target is 0

    I2C2_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 2
		 -> I2C2_ISR@i2c_address(BANK0[2]), NULL(NULL[0]), 

    S316$pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c2_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 0

    p_i2c2_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), NULL(NULL[0]), 

    i2c2_object.pTrHead.pTrFlag	PTR enum E2801 size(1) Largest target is 0

    i2c2_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    S328$pTrFlag	PTR enum E2801 size(1) Largest target is 0

    p_i2c2_current.pTrFlag	PTR enum E2801 size(1) Largest target is 0

    S328$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C2_MasterRead@trBlock(BANK1[5]), I2C2_MasterWrite@trBlock(BANK1[5]), 

    p_i2c2_current	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK1[4]), NULL(NULL[0]), 

    S339$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK1[4]), 

    i2c2_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK1[4]), 

    S339$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK1[4]), 

    i2c2_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c2_tr_queue(BANK1[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _setLedState->_ledCharge
    _putPwrMsg->___awtoft
    _detectVBattery->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___fttol->___awtoft
    ___ftneg->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _I2C2_ISR->_I2C2_Stop

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_ISR->_TMR0_CallBack
    _TMR0_CallBack->_detectVBattery
    _I_PWR_ON_intr->_putPwrMsg
    _putPwrMsg->___fttol
    _detectVBattery->___ftdiv
    ___ftdiv->___ftadd
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftadd->___ftneg

Critical Paths under _main in BANK1

    _SYSTEM_Initialize->_I2C2_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 BANK1      2     2      0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           1     1      0   23802
                                             70 BANK0      1     1      0
               _I2C2_BusCollisionISR
                           _I2C2_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0    6169
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (5) _TMR0_CallBack                                        2     2      0    6169
                                             39 BANK0      2     2      0
                       _detectCharge
                      _detectPowerOn
                     _detectVBattery
                          _initState
                         _ledMessage
                           _ledPower
                            _psPower
                        _setLedState
 ---------------------------------------------------------------------------------
 (6) _setLedState                                          5     5      0     248
                                              2 COMMON     5     5      0
                          _ledCharge
                           _ledPower
                            _psPower
 ---------------------------------------------------------------------------------
 (7) _psPower                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ledPower                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ledCharge                                            2     1      1     108
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (6) _ledMessage                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _initState                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_IOC                                      0     0      0   17611
                        _I_CHRG_intr
                       _I_EXPWR_intr
                       _I_FAULT_intr
                      _I_PWR_ON_intr
 ---------------------------------------------------------------------------------
 (5) _I_PWR_ON_intr                                        0     0      0   17611
                          _putPwrMsg
 ---------------------------------------------------------------------------------
 (6) _putPwrMsg                                            8     8      0   17611
                                             62 BANK0      8     8      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                       _detectCharge
                      _detectPowerOn
                     _detectVBattery
 ---------------------------------------------------------------------------------
 (6) _detectVBattery                                       7     7      0    5739
                                             32 BANK0      7     7      0
                  _ADC_GetConversion
                           ___awtoft
                            ___ftdiv
                             ___ftge
 ---------------------------------------------------------------------------------
 (7) ___ftge                                               9     3      6     392
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (7) ___ftdiv                                             16    10      6    2862
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             6     3      3    2417
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _detectPowerOn                                        6     6      0      46
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (6) _detectCharge                                         6     6      0      46
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             14    10      4     316
                                             48 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftneg                                              3     0      3     173
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             16    10      6    2652
                                             32 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             13     7      6    3268
                                              3 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) _I_FAULT_intr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I_EXPWR_intr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I_CHRG_intr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C2_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C2_FunctionComplete
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C2_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _I2C2_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2C2_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _I2C2_BusCollisionISR
   _I2C2_ISR
     _I2C2_FunctionComplete
     _I2C2_Stop
   _PIN_MANAGER_IOC
     _I_CHRG_intr
     _I_EXPWR_intr
     _I_FAULT_intr
     _I_PWR_ON_intr
       _putPwrMsg
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
         _detectCharge
         _detectPowerOn
         _detectVBattery
           _ADC_GetConversion
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftge
   _TMR0_ISR
     _TMR0_CallBack
       _detectCharge
       _detectPowerOn
       _detectVBattery
         _ADC_GetConversion
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftge
       _initState
       _ledMessage
       _ledPower
       _psPower
       _setLedState
         _ledCharge
         _ledPower
         _psPower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      82       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     47      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      3      24       8       45.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      82      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Jun 24 11:45:14 2016

                                  pc 0002                          __CFG_CP$OFF 0000  
                    _timer0ReloadVal 006D                         ___ftadd@exp1 002F  
                       ___ftadd@exp2 002E                         ___ftadd@sign 002D  
                                _RB0 0068                                  _RB1 0069  
                                _RB3 006B                                  _RB4 006C  
                       __CFG_CPD$OFF 0000                         __CFG_BORV$LO 0000  
                                wreg 0009                      ??_I_PWR_ON_intr 007E  
                       __CFG_IESO$ON 0000                         __CFG_LVP$OFF 0000  
                _detectVBattery$1122 0042                         ___ftdiv@cntr 003A  
                   __end_of_I2C2_ISR 01A0                         ___ftdiv@sign 003F  
                               l2605 07E7                                 _LATA 010C  
                               _LATB 010D                                 u2927 07EC  
                               i1l70 06F5                                 i1l64 06DF  
                               i1l73 0700                                 i1l67 06EA  
                               _TMR0 0015                                 _WPUA 020C  
                               _WPUB 020D                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _fRun 00A8  
                               _main 07E2                         ___ftpack@arg 0070  
                       ___ftpack@exp 0073                                 _stOn 00AD  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 002F  
                               ttemp 007E                                 wtemp 007E  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 004E  
                    _setLedState$633 0073                      _setLedState$635 0074  
                    _setLedState$636 0075                      _setLedState$638 0076  
                       ___ftmul@sign 004F                         ___fttol@exp1 005D  
                       ___fttol@lval 0059              __end_of_TMR0_Initialize 0FE0  
                      __CFG_PLLEN$ON 0000                           _i2c2_state 0067  
     __size_of_OSCILLATOR_Initialize 0006        __end_of_OSCILLATOR_Initialize 0F99  
                              ?_main 0070                      __end_of___ftadd 0296  
                      __CFG_WDTE$OFF 0000                    __end_of_I2C2_Stop 07B9  
                    __end_of___ftdiv 04AE                      __end_of___ftneg 0FB7  
                    __end_of___ftmul 0405                      __end_of___fttol 0535  
                              _LATA1 0861                                _LATA2 0862  
                              _LATA3 0863                                _LATA6 0866  
                              _LATA7 0867       __size_of_I2C2_FunctionComplete 0014  
                              i1l141 0010                                i1l143 0018  
                              i1l145 0022                                i1l250 00BF  
                              i1l251 00CB                                i1l244 0094  
                              i1l420 0FC8                                i1l261 0114  
                              i1l245 009C                                i1l149 002A  
                              i1l239 0064                                i1l280 07DE  
                              i1l176 07C7                                i1l273 0180  
                              i1l265 0136                                i1l433 0FFD  
                              i1l442 0FD2                                i1l451 0FBE  
                              i1l268 014B                                i1l269 0159  
                              i1l480 0328                                i1l750 05CD  
                              i1l841 051B                                i1l757 05E0  
                              i1l781 023F                                i1l758 05E8  
      __end_of_I2C2_FunctionComplete 07E2                                _TRISA 008C  
                              _TRISB 008D                     __end_of_TMR0_ISR 0FA6  
                      ___awtoft@sign 007D              __end_of_PIN_MANAGER_IOC 0707  
                              _stOff 00AC                        ___ftpack@sign 0074  
                    __end_of_psPower 0FD5                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                       putPwrMsg@lim 0064                 __end_of_detectCharge 0751  
                  ??_I2C2_Initialize 00C1                      __initialization 0031  
                       ?_I_CHRG_intr 0070                         __end_of_main 07F3  
                       ?_setLedState 0070          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 00C2                        ___fttol@sign1 0058  
                        _i2c2_object 00A0                               _ADCON0 009D  
                             _ADCON1 009E                               i1S2641 0789  
                             _ADRESH 009C                               _ADRESL 009B  
                   __end_of___awtoft 0771                               _ANSELA 018C  
                             _ANSELB 018D                     __end_of___ftpack 05FF  
                             _IOCBF0 1CB0                               _IOCBF1 1CB1  
                             _IOCBF3 1CB3                               _IOCBF4 1CB4  
                             _IOCBN0 1CA8                               _IOCBN1 1CA9  
                             _IOCBN3 1CAB                               _IOCBP0 1CA0  
                             _IOCBN4 1CAC                               _IOCBP1 1CA1  
                             _IOCBP3 1CA3                               _IOCBP4 1CA4  
                             i1l2011 01CF                               i1l2007 01C8  
                             i1l2111 03DD                               i1l2041 021E  
                             i1l2017 01DE         __end_of_I2C2_BusCollisionISR 0800  
                             i1l2035 020B                               i1l2107 03D5  
                             i1l2203 0626                               i1l2053 0251  
                             i1l2037 0215                               i1l2029 01F8  
                             i1l2213 0638                               i1l2047 0231  
                             i1l2039 021A                               i1l2135 04C7  
                             i1l2057 0263                               i1l2049 023B  
                             i1l2161 0512                               i1l2153 04F7  
                             i1l2067 027E                               i1l2083 037E  
                             i1l2163 051E                               i1l2155 0505  
                             i1l2077 0368                               i1l2423 0087  
                             i1l2095 03B9                               i1l2167 052C  
                             i1l2327 0688                               i1l2353 07B7  
                             i1l2513 0167                               i1l2441 00BA  
                             i1l2185 060C                               i1l2345 06A3  
                             i1l2435 00A8                               i1l2099 03C1  
                             i1l2195 061B                               i1l2525 0184  
                             i1l2509 0160                               u201_25 0232  
                             i1l2527 0187                               i1l2455 00EA  
                             i1l2535 0194                               i1l1903 0432  
                             i1l2383 06FC                               i1l2375 06F1  
                             i1l2367 06E6                               i1l2529 018B  
                             i1l2481 010F                               i1l2475 0103  
                             i1l1843 05AA                               i1l1853 05D2  
                             i1l1845 05B4                               i1l1925 048C  
                             i1l1917 0473                               i1l1941 0668  
                             i1l1855 05DA                               i1l1847 05B9  
                             i1l1839 05A3                               i1l2497 013E  
                             i1l2489 0122                               i1l1937 0652  
                             u211_25 03C2                               i1l1973 074A  
                             i1l1965 06CE                               i1l1959 06BC  
                             i1l1887 075B                               i1l1897 041C  
                             u212_25 03C8                               u220_25 04CE  
                             i1l1997 0FF7                               u151_25 05C8  
                             u215_25 03DE                               u223_25 04F8  
                             u216_25 03E4                               u208_25 038A  
                             u153_25 05D5                               u209_25 039A  
                             u226_25 0513                               u242_25 0332  
                             u163_25 0444                               u164_25 0454  
                             u157_25 05EF                               u149_25 05AF  
                             u165_25 0474                               u174_20 06D4  
                             u166_25 0483                               u175_20 06D5  
                             u167_25 048D                               u192_25 01F9  
                             u195_25 020C                               u293_27 033B  
                             u198_25 021F                               u294_27 0346  
                             u295_27 053C                               _OSCCON 0099  
                     __CFG_PWRTE$OFF 0000                     __end_of_ledPower 0FCB  
                             ___ftge 063C                            ??___ftadd 0029  
                     _p_i2c2_current 0068                       __CFG_STVREN$ON 0000  
                          ??___ftdiv 0036                            ??___ftneg 007E  
                          ??___ftmul 0046                            ??___fttol 0054  
                   ?_TMR0_Initialize 0070                            ?_I2C2_ISR 0070  
           I2C2_Stop@completion_code 0071                ___ftmul@f3_as_product 004B  
                          ??_psPower 0070                      _stPowerSaveMode 00AE  
           ADC_GetConversion@channel 0073                __end_of_TMR0_CallBack 06AA  
                   ?_PIN_MANAGER_IOC 0070              __size_of_detectVBattery 0066  
                  _SYSTEM_Initialize 0FE0              __end_of__initialization 004D  
                         ___ftadd@f1 0023                           ___ftadd@f2 0026  
                         ___ftge@ff1 0070                           ___ftge@ff2 0073  
                 ?_SYSTEM_Initialize 0070                           ___ftdiv@f1 0033  
                         ___ftdiv@f2 0030                           ___ftdiv@f3 003B  
                         ___ftneg@f1 0020                           ___awtoft@c 0078  
                         ___ftmul@f1 0040                           ___ftmul@f2 0043  
                         ___fttol@f1 0050                       __pcstackCOMMON 0070  
              __end_of_detectPowerOn 06DA                        ?_I_FAULT_intr 0070  
                       __pidataBANK1 0F8B                  ??_SYSTEM_Initialize 00C2  
                          ?_TMR0_ISR 0070                       _i2c2_trb_count 00A9  
                         ??_I2C2_ISR 0072                   __size_of_ledCharge 0011  
                     _OPTION_REGbits 0095            __end_of_SYSTEM_Initialize 0FEF  
              __size_of_detectCharge 0024                    _TMR0_CallBack$646 0048  
                         __pbssBANK0 0067                           __pbssBANK1 00A0  
                 __size_of_initState 000C                       ??_I_FAULT_intr 0070  
                         __pmaintext 07E2                              ?___ftge 0070  
                         ??_TMR0_ISR 007E                           __pintentry 0004  
               __size_of_I_CHRG_intr 0003                            ?___awtoft 0078  
                          ?___ftpack 0070                              _APFCON0 011D  
                            _APFCON1 011E                 _I2C2_BusCollisionISR 07FF  
            __size_of_ADC_Initialize 0008                           _ledMessage 0FB7  
               __size_of_setLedState 003D                        ?_I_EXPWR_intr 0070  
                       _detectCharge 072D    I2C2_ISR@i2c_10bit_address_restart 00A5  
                          _I2C2_Stop 07A1                              _OSCSTAT 009A  
                 __size_of_putPwrMsg 00BB                              _OSCTUNE 0098  
                            _SSP2ADD 021A                __end_of_I_PWR_ON_intr 0F93  
                            _SSP2BUF 0219                            ?_ledPower 0070  
                    _I2C2_Initialize 0771               I2C2_MasterRead@trBlock 00B0  
                  __end_of_ledCharge 1000                      __size_of___ftge 003B  
                            ___ftadd 01A0                              ___ftdiv 0405  
                            ___ftneg 0FAE                              ___ftmul 0351  
                            ___fttol 04AE                ?_I2C2_BusCollisionISR 0070  
                         ??___awtoft 007B                           ??___ftpack 0075  
                            __ptext1 0FE0                              __ptext2 0FD5  
                            __ptext3 0707                              __ptext4 0F93  
                            __ptext5 0771                              __ptext6 0FA6  
                            __ptext8 0F9F                              __ptext9 0677  
                     ??_I_EXPWR_intr 0070                    __end_of_initState 07FF  
              _OSCILLATOR_Initialize 0F93                              _stFault 006B  
                            _psPower 0FCB             ??_PIN_MANAGER_Initialize 00C1  
                         ?_I2C2_Stop 0070                _I2C2_FunctionComplete 07CE  
                            _stPower 006C                       _detectVBattery 0535  
         __size_of_SYSTEM_Initialize 000F                           ??_ledPower 0070  
                            clrloop0 0F9A                 end_of_initialization 004D  
                 _p_i2c2_trb_current 0069                    __end_of_putPwrMsg 0351  
             I2C2_ISR@i2c_bytes_left 00A6                          ?_ledMessage 0070  
                  __size_of_I2C2_ISR 014F                     __CFG_FOSC$INTOSC 0000  
            __end_of_I2C2_Initialize 0789               __end_of_detectVBattery 059B  
               __end_of_I_FAULT_intr 0F8B                           ledPower@on 0070  
                        ___ftdiv@exp 003E                          ___ftmul@exp 004A  
             ??_I2C2_BusCollisionISR 0070                       __end_of___ftge 0677  
                  __size_of_TMR0_ISR 0007                       _ADC_Initialize 0FA6  
             ?_OSCILLATOR_Initialize 0070               ?_I2C2_FunctionComplete 0070  
                start_initialization 0031                      ?_detectVBattery 0070  
                        ??_I2C2_Stop 0070             __size_of_TMR0_Initialize 000B  
    __size_of_PIN_MANAGER_Initialize 0026                 __end_of_I_EXPWR_intr 0F88  
                __size_of_ledMessage 000A             __size_of_PIN_MANAGER_IOC 002D  
                           ??___ftge 0076                 I2C2_ISR@pi2c_buf_ptr 00A7  
             __size_of_TMR0_CallBack 0033               __end_of_ADC_Initialize 0FAE  
                        __pdataBANK1 00BE                    __size_of___awtoft 0020  
                  __size_of___ftpack 0064                     ?_I2C2_Initialize 0070  
                          ___latbits 0001                        __pcstackBANK0 0020  
                      __pcstackBANK1 00C1                     detectCharge@FALT 0074  
                   detectCharge@CHRG 0072               __size_of_detectPowerOn 0030  
                      _i2c2_tr_queue 00BA                    __size_of_ledPower 000A  
             _PIN_MANAGER_Initialize 0707                        ??_I_CHRG_intr 0070  
                          _ledCharge 0FEF                             ?___ftadd 0023  
                           ?___ftdiv 0030                             ?___ftneg 0020  
                           ?___ftmul 0040                             ?___fttol 0050  
                    ?_ADC_Initialize 0070                        ??_setLedState 0072  
                           _I2C2_ISR 0051         ??_INTERRUPT_InterruptManager 0066  
                          __pswtext1 0789                __size_of_I_FAULT_intr 0003  
                           ?_psPower 0070                            _initState 07F3  
                      _TMR0_CallBack 0677                    ??_TMR0_Initialize 00C1  
                          _stExPower 00AA                            clear_ram0 0F99  
                           _PIE4bits 0094  __size_of_INTERRUPT_InterruptManager 002B  
                           _PIR4bits 0014                           ?_ledCharge 0070  
                      _wnLowBattery0 00AF                         _I_FAULT_intr 0F88  
                      _detectPowerOn 06AA                             _SSP2CON1 021D  
                           _SSP2CON3 021F                             _TMR0_ISR 0F9F  
             __size_of_I_PWR_ON_intr 0005                             _SSP2STAT 021C  
                  ??_PIN_MANAGER_IOC 007E                            _putPwrMsg 0296  
                __end_of_I_CHRG_intr 0F85                           _ADCON0bits 009D  
                       ??_ledMessage 0070                  __end_of_setLedState 063C  
                     ?_TMR0_CallBack 0070                           ?_initState 0070  
              __size_of_I_EXPWR_intr 0003                           putPwrMsg@i 0062  
                 __end_of_ledMessage 0FC1                    _ADC_GetConversion 07B9  
                     ?_detectPowerOn 0070                 detectVBattery@adcval 0045  
            ??_OSCILLATOR_Initialize 00C1                   ?_ADC_GetConversion 0070  
                   __size_of___ftadd 00F6                     __size_of___ftdiv 00A9  
                   __size_of___ftneg 0009                     __size_of___ftmul 00B4  
                   __size_of___fttol 0087                           ?_putPwrMsg 0070  
                           ___awtoft 0751                             ___ftpack 059B  
            ??_I2C2_FunctionComplete 0070                     ??_detectVBattery 0040  
                ??_ADC_GetConversion 0072                         _I_EXPWR_intr 0F85  
                           _vBattery 00BE                         _stLowBattery 00AB  
                   __size_of_psPower 000A                             __ptext10 05FF  
                           __ptext11 0FCB                             __ptext20 063C  
                           __ptext12 0FC1                             __ptext21 0405  
                           __ptext13 0FEF                             __ptext30 059B  
                           __ptext22 0751                             __ptext14 0FB7  
                           __ptext31 0F88                             __ptext23 07B9  
                           __ptext15 07F3                             __ptext32 0F85  
                           __ptext24 06AA                             __ptext16 06DA  
                           __ptext33 0F82                             __ptext25 072D  
                           __ptext17 0F8E                             __ptext34 0051  
                           __ptext26 04AE                             __ptext18 0296  
                           __ptext35 07A1                             __ptext27 0FAE  
                           __ptext19 0535                             __ptext36 07CE  
                           __ptext28 0351                             __ptext37 07FF  
                           __ptext29 01A0                            psPower@on 0070  
                           _ledPower 0FC1                        _I_PWR_ON_intr 0F8E  
                       _SSP2CON1bits 021D                         _SSP2CON2bits 021E  
                      __size_of_main 0011                             _stCharge 006A  
          __end_of_ADC_GetConversion 07CE                          _I_CHRG_intr 0F82  
                        ??_ledCharge 0071                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 002F           _INTERRUPT_InterruptManager 0004  
                        _setLedState 05FF              I2C2_MasterWrite@trBlock 00B5  
      __size_of_I2C2_BusCollisionISR 0001                 detectPowerOn@EXPOWER 0074  
                      ?_detectCharge 0070                           _INTCONbits 000B  
                    ??_TMR0_CallBack 0047                      ledCharge@toggle 0070  
                        ??_initState 0070                       ?_I_PWR_ON_intr 0070  
                           intlevel1 0000                  I2C2_ISR@i2c_address 006E  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                    ??_detectPowerOn 0070                     ??_ADC_Initialize 00C1  
                        ledCharge@on 0071                          ??_putPwrMsg 005E  
                     ??_detectCharge 0070                           _OPTION_REG 0095  
                   putPwrMsg@pardeci 0060                      _TMR0_Initialize 0FD5  
                       ledMessage@on 0070                   detectPowerOn@POWER 0072  
     __end_of_PIN_MANAGER_Initialize 072D             __size_of_I2C2_Initialize 0018  
                 __size_of_I2C2_Stop 0018                      _PIN_MANAGER_IOC 06DA  
         __size_of_ADC_GetConversion 0015  
